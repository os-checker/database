{
  "env": {
    "repos": [
      {
        "user": "repos",
        "repo": "os-checker-test-suite"
      },
      {
        "user": "repos",
        "repo": "arceos"
      }
    ],
    "packages": [
      {
        "name": "os-checker-test-suite",
        "repo": {
          "idx": 0,
          "user": "repos",
          "repo": "os-checker-test-suite"
        }
      },
      {
        "name": "allocator",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-bwbench",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-display",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-echoserver",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-exception",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-helloworld",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-httpclient",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-httpserver",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-memtest",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-parallel",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-priority",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-shell",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-sleep",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-tls",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-udpserver",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-yield",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos_api",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos_posix_api",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arm_gic",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "arm_pl011",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axalloc",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axconfig",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axdisplay",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axdriver",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axerrno",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axfeat",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axfs",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axfs_devfs",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axfs_ramfs",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axfs_vfs",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axhal",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axio",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axlibc",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axlog",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axnet",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axruntime",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axstd",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axsync",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "axtask",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "bwbench-client",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "capability",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "crate_interface",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "deptool",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "driver_block",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "driver_common",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "driver_display",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "driver_net",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "driver_pci",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "driver_virtio",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "dw_apb_uart",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "flatten_objects",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "handler_table",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "kernel_guard",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "lazy_init",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "linked_list",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "memory_addr",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "mingo",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "page_table",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "page_table_entry",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "percpu",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "percpu_macros",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "ratio",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "scheduler",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "slab_allocator",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "spinlock",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "timer_list",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      },
      {
        "name": "tuple_for_each",
        "repo": {
          "idx": 1,
          "user": "repos",
          "repo": "arceos"
        }
      }
    ]
  },
  "idx": [
    {
      "package": 0,
      "tool": "Fmt",
      "cmd": "",
      "count": 4,
      "duration_ms": 655,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 0,
      "tool": "Clippy",
      "cmd": "",
      "count": 2,
      "duration_ms": 2227,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 1,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 233,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 1,
      "tool": "Clippy",
      "cmd": "",
      "count": 2,
      "duration_ms": 973,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 2,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 215,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 2,
      "tool": "Clippy",
      "cmd": "",
      "count": 2,
      "duration_ms": 1744,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 3,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 200,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 3,
      "tool": "Clippy",
      "cmd": "",
      "count": 1,
      "duration_ms": 503,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 4,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 190,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 4,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 204,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 5,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 202,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 5,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 198,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 6,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 192,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 6,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 201,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 7,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 199,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 7,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 212,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 8,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 283,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 8,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 205,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 9,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 197,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 9,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 242,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 10,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 198,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 10,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 218,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 11,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 200,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 11,
      "tool": "Clippy",
      "cmd": "",
      "count": 1,
      "duration_ms": 213,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 12,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 205,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 12,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 218,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 13,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 197,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 13,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 214,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 14,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 201,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 14,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 274,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 15,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 419,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 15,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 417,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 16,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 401,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 16,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 239,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 17,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 220,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 17,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 271,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 18,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 261,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 18,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 633,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 19,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 213,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 19,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 229,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 20,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 210,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 20,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 221,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 21,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 201,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 21,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 214,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 22,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 196,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 22,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 217,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 23,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 340,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 23,
      "tool": "Clippy",
      "cmd": "",
      "count": 4,
      "duration_ms": 680,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 24,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 226,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 24,
      "tool": "Clippy",
      "cmd": "",
      "count": 2,
      "duration_ms": 283,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 25,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 208,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 25,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 215,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 26,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 193,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 26,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 357,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 27,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 468,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 27,
      "tool": "Clippy",
      "cmd": "",
      "count": 4,
      "duration_ms": 635,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 28,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 204,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 28,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 215,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 29,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 200,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 29,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 203,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 30,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 202,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 30,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 200,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 31,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 326,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 31,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 232,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 32,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 211,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 32,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 204,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 33,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 238,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 33,
      "tool": "Clippy",
      "cmd": "",
      "count": 1,
      "duration_ms": 872,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 34,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 202,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 34,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 268,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 35,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 223,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 35,
      "tool": "Clippy",
      "cmd": "",
      "count": 4,
      "duration_ms": 424,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 36,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 203,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 36,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 224,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 37,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 240,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 37,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 228,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 38,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 209,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 38,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 341,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 39,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 424,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 39,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 454,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 40,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 324,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 40,
      "tool": "Clippy",
      "cmd": "",
      "count": 1,
      "duration_ms": 501,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 41,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 206,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 41,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 204,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 42,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 201,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 42,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 287,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 43,
      "tool": "Fmt",
      "cmd": "",
      "count": 35,
      "duration_ms": 183,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 43,
      "tool": "Clippy",
      "cmd": "",
      "count": 10,
      "duration_ms": 311,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 44,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 202,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 44,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 199,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 45,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 189,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 45,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 215,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 46,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 191,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 46,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 195,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 47,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 201,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 47,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 198,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 48,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 200,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 48,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 222,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 49,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 212,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 49,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 218,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 50,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 199,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 50,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 304,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 51,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 200,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 51,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 208,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 52,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 208,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 52,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 333,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 53,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 446,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 53,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 437,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 54,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 378,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 54,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 208,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 55,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 219,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 55,
      "tool": "Clippy",
      "cmd": "",
      "count": 2,
      "duration_ms": 212,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 56,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 197,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 56,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 200,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 57,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 219,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 57,
      "tool": "Clippy",
      "cmd": "",
      "count": 8,
      "duration_ms": 346,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 58,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 209,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 58,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 204,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 59,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 206,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 59,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 214,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 60,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 203,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 60,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 210,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 61,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 203,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 61,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 213,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 62,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 223,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 62,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 272,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 63,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 254,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 63,
      "tool": "Clippy",
      "cmd": "",
      "count": 5,
      "duration_ms": 219,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 64,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 217,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 64,
      "tool": "Clippy",
      "cmd": "",
      "count": 1,
      "duration_ms": 233,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 65,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 234,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 65,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 223,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 66,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 285,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 66,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 505,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 67,
      "tool": "Fmt",
      "cmd": "",
      "count": 0,
      "duration_ms": 446,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    },
    {
      "package": 67,
      "tool": "Clippy",
      "cmd": "",
      "count": 0,
      "duration_ms": 573,
      "arch": "",
      "target_triple": "",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "idx": 0,
      "file": "examples/need-clippy-fix.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/os-checker-test-suite/examples/need-clippy-fix.rs (original lines from 2 to 2)\n-    _ = (123); \n+    _ = (123);\n"
    },
    {
      "idx": 0,
      "file": "examples/need-fmt.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/os-checker-test-suite/examples/need-fmt.rs (original lines from 1 to 1)\n-fn main() {    println!(\"from example\");\n+fn main() {\n+    println!(\"from example\");\n"
    },
    {
      "idx": 0,
      "file": "src/main.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/os-checker-test-suite/src/main.rs (original lines from 4 to 5)\n- \n-println!(\"Hello, world!\");\n+    println!(\"Hello, world!\");\n"
    },
    {
      "idx": 0,
      "file": "tests/need-fmt.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/os-checker-test-suite/tests/need-fmt.rs (original lines from 1 to 2)\n-fn main () {\n-  }\n+fn main() {}\n"
    },
    {
      "idx": 1,
      "file": "src/main.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: unused variable: `a`\n --> src/main.rs:2:9\n  |\n2 |     let a = 3.14;\n  |         ^ help: if this is intentional, prefix it with an underscore: `_a`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\n"
    },
    {
      "idx": 1,
      "file": "src/main.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error: approximate value of `f{32, 64}::consts::PI` found\n --> src/main.rs:2:13\n  |\n2 |     let a = 3.14;\n  |             ^^^^\n  |\n  = help: consider using the constant directly\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant\n  = note: `#[deny(clippy::approx_constant)]` on by default\n\n"
    },
    {
      "idx": 3,
      "file": "crates/allocator/src/lib.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: function `align_down` is never used\n   --> crates/allocator/src/lib.rs:126:10\n    |\n126 | const fn align_down(pos: usize, align: usize) -> usize {\n    |          ^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "idx": 3,
      "file": "crates/allocator/src/lib.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: function `align_up` is never used\n   --> crates/allocator/src/lib.rs:131:10\n    |\n131 | const fn align_up(pos: usize, align: usize) -> usize {\n    |          ^^^^^^^^\n\n"
    },
    {
      "idx": 5,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 5,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 7,
      "file": "apps/display/src/display.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0433]: failed to resolve: could not find `arceos` in `os`\n --> apps/display/src/display.rs:5:14\n  |\n5 | use std::os::arceos::api::display as api;\n  |              ^^^^^^ could not find `arceos` in `os`\n\n"
    },
    {
      "idx": 23,
      "file": "apps/task/priority/src/main.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: unused variable: `nice`\n  --> apps/task/priority/src/main.rs:80:13\n   |\n80 |         let nice = TASK_PARAMS[i].nice;\n   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_nice`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
    },
    {
      "idx": 47,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 47,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 47,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 47,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 49,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 49,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 55,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 55,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 55,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 55,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 67,
      "file": "ulib/axlibc/src/setjmp.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error: avoid using labels containing only the digits `0` and `1` in inline assembly\n   --> ulib/axlibc/src/setjmp.rs:166:13\n    |\n166 |           jnz 1f\n    |  _____________^\n167 | |         inc rax\n168 | |     1:\n    | |_____^ use a different label that doesn't start with `0` or `1`\n    |\n    = help: start numbering with `2` instead\n    = note: an LLVM bug makes these labels ambiguous with a binary literal number on x86\n    = note: see <https://github.com/llvm/llvm-project/issues/99547> for more information\n    = note: `#[deny(binary_asm_labels)]` on by default\n\n"
    },
    {
      "idx": 71,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 71,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 71,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 71,
      "file": "/rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /rust/my/os-checker/repos/arceos/crates/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "idx": 81,
      "file": "src/device.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error: the loop variable `i` is used to index `mac_addr`\n  --> src/device.rs:80:22\n   |\n80 |             for i in 0..6 {\n   |                      ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nnote: the lint level is defined here\n  --> src/main.rs:3:9\n   |\n3  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`\nhelp: consider using an iterator and enumerate()\n   |\n80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {\n   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_builder.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_builder.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n"
    },
    {
      "idx": 86,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"
    },
    {
      "idx": 86,
      "file": "src/d2_generator.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n"
    },
    {
      "idx": 86,
      "file": "src/lib.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"
    },
    {
      "idx": 86,
      "file": "src/mermaid_generator.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
    },
    {
      "idx": 86,
      "file": "src/main.rs",
      "kind": {
        "Unformatted": "File"
      },
      "raw": "file: /rust/my/os-checker/repos/arceos/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"
    },
    {
      "idx": 87,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:22\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                      ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "idx": 87,
      "file": "src/cmd_parser.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:50\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                                                  ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "idx": 87,
      "file": "src/mermaid_generator.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/mermaid_generator.rs:6:34\n  |\n6 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "idx": 87,
      "file": "src/mermaid_generator.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:16:29\n   |\n16 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "idx": 87,
      "file": "src/mermaid_generator.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:32:32\n   |\n32 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "idx": 87,
      "file": "src/d2_generator.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/d2_generator.rs:8:34\n  |\n8 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "idx": 87,
      "file": "src/d2_generator.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:18:29\n   |\n18 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "idx": 87,
      "file": "src/d2_generator.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:34:32\n   |\n34 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "idx": 87,
      "file": "src/lib.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/lib.rs:37:39\n   |\n37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);\n   |                                       ^^^^ help: change this to: `cfg`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "idx": 87,
      "file": "src/lib.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/lib.rs:55:21\n   |\n55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
    },
    {
      "idx": 111,
      "file": "crates/linked_list/src/unsafe_list.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: you should consider adding a `Default` implementation for `List<A>`\n   --> crates/linked_list/src/unsafe_list.rs:99:5\n    |\n99  | /     pub const fn new() -> Self {\n100 | |         Self { first: None }\n101 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n97  + impl<A: Adapter + ?Sized> Default for List<A> {\n98  +     fn default() -> Self {\n99  +         Self::new()\n100 +     }\n101 + }\n    |\n\n"
    },
    {
      "idx": 111,
      "file": "crates/linked_list/src/unsafe_list.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: you should consider adding a `Default` implementation for `Links<T>`\n   --> crates/linked_list/src/unsafe_list.rs:435:5\n    |\n435 | /     pub const fn new() -> Self {\n436 | |         Self(UnsafeCell::new(MaybeUninit::uninit()))\n437 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n433 + impl<T: ?Sized> Default for Links<T> {\n434 +     fn default() -> Self {\n435 +         Self::new()\n436 +     }\n437 + }\n    |\n\n"
    },
    {
      "idx": 115,
      "file": "src/panic_wait.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "idx": 115,
      "file": "src/cpu.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
    },
    {
      "idx": 115,
      "file": "src/main.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "idx": 115,
      "file": "src/main.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "idx": 115,
      "file": "src/main.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "idx": 115,
      "file": "unkonwn-but-maybe-important",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error: unwinding panics are not supported without std\n  |\n  = help: using nightly cargo, use -Zbuild-std with panic=\"abort\" to avoid unwinding\n  = note: since the core library is usually precompiled with panic=\"unwind\", rebuilding your crate with panic=\"abort\" may not be enough to fix the problem\n\n"
    },
    {
      "idx": 115,
      "file": "src/main.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n   --> src/main.rs:112:12\n    |\n112 | #![feature(panic_info_message)]\n    |            ^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "idx": 115,
      "file": "src/panic_wait.rs",
      "kind": {
        "Clippy": "Error"
      },
      "raw": "error[E0599]: no method named `unwrap_or` found for struct `core::panic::PanicMessage` in the current scope\n  --> src/panic_wait.rs:60:24\n   |\n60 |         info.message().unwrap_or(&format_args!(\"\")),\n   |                        ^^^^^^^^^ method not found in `PanicMessage<'_>`\n\n"
    },
    {
      "idx": 127,
      "file": "crates/linked_list/src/unsafe_list.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: you should consider adding a `Default` implementation for `List<A>`\n   --> crates/linked_list/src/unsafe_list.rs:99:5\n    |\n99  | /     pub const fn new() -> Self {\n100 | |         Self { first: None }\n101 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n97  + impl<A: Adapter + ?Sized> Default for List<A> {\n98  +     fn default() -> Self {\n99  +         Self::new()\n100 +     }\n101 + }\n    |\n\n"
    },
    {
      "idx": 127,
      "file": "crates/linked_list/src/unsafe_list.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: you should consider adding a `Default` implementation for `Links<T>`\n   --> crates/linked_list/src/unsafe_list.rs:435:5\n    |\n435 | /     pub const fn new() -> Self {\n436 | |         Self(UnsafeCell::new(MaybeUninit::uninit()))\n437 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n433 + impl<T: ?Sized> Default for Links<T> {\n434 +     fn default() -> Self {\n435 +         Self::new()\n436 +     }\n437 + }\n    |\n\n"
    },
    {
      "idx": 127,
      "file": "crates/scheduler/src/cfs.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: you should consider adding a `Default` implementation for `CFScheduler<T>`\n   --> crates/scheduler/src/cfs.rs:111:5\n    |\n111 | /     pub const fn new() -> Self {\n112 | |         Self {\n113 | |             ready_queue: BTreeMap::new(),\n114 | |             min_vruntime: None,\n115 | |             id_pool: AtomicIsize::new(0_isize),\n116 | |         }\n117 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n109 + impl<T> Default for CFScheduler<T> {\n110 +     fn default() -> Self {\n111 +         Self::new()\n112 +     }\n113 + }\n    |\n\n"
    },
    {
      "idx": 127,
      "file": "crates/scheduler/src/fifo.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`\n  --> crates/scheduler/src/fifo.rs:63:5\n   |\n63 | /     pub const fn new() -> Self {\n64 | |         Self {\n65 | |             ready_queue: List::new(),\n66 | |         }\n67 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n61 + impl<T> Default for FifoScheduler<T> {\n62 +     fn default() -> Self {\n63 +         Self::new()\n64 +     }\n65 + }\n   |\n\n"
    },
    {
      "idx": 127,
      "file": "crates/scheduler/src/round_robin.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`\n  --> crates/scheduler/src/round_robin.rs:64:5\n   |\n64 | /     pub const fn new() -> Self {\n65 | |         Self {\n66 | |             ready_queue: VecDeque::new(),\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n62 + impl<T, const S: usize> Default for RRScheduler<T, S> {\n63 +     fn default() -> Self {\n64 +         Self::new()\n65 +     }\n66 + }\n   |\n\n"
    },
    {
      "idx": 129,
      "file": "crates/slab_allocator/src/slab.rs",
      "kind": {
        "Clippy": "Warn"
      },
      "raw": "warning: using `map` over `inspect`\n  --> crates/slab_allocator/src/slab.rs:93:26\n   |\n93 |         self.head.take().map(|node| {\n   |                          ^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_inspect\n   = note: `#[warn(clippy::manual_inspect)]` on by default\nhelp: try\n   |\n93 ~         self.head.take().inspect(|node| {\n94 |             self.head = node.next.take();\n95 ~             self.len -= 1;\n   |\n\n"
    }
  ]
}
