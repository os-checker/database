{
  "user": "os-module",
  "repo": "pager",
  "timestamp": {
    "start": 1740849464390,
    "end": 1747703935786
  },
  "pkgs": {
    "pager": {
      "version": "0.1.0",
      "dependencies": 6,
      "lib": true,
      "bin": false,
      "testcases": {
        "tests": [
          {
            "id": "pager",
            "kind": "lib",
            "binary_name": "pager",
            "testcases": [
              {
                "name": "bitmap::tests::test_not_specify_n_pages",
                "status": "ok",
                "duration_ms": 44,
                "error": null,
                "miri_pass": false,
                "miri_output": "cmd=cargo miri test -p pager --lib pager -- bitmap::tests::test_not_specify_n_pages\nProcess timed out for 1 minutes.",
                "miri_timeout": true
              },
              {
                "name": "buddy::tests::test_alloc_pages",
                "status": "ok",
                "duration_ms": 23,
                "error": null,
                "miri_pass": true,
                "miri_output": null,
                "miri_timeout": false
              },
              {
                "name": "common_test::test_alloc_dealloc",
                "status": "ok",
                "duration_ms": 34,
                "error": null,
                "miri_pass": false,
                "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.16s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/pager-e82194c365856647)\nwarning: integer-to-pointer cast\n   --> src/buddy.rs:101:44\n    |\n101 |             let list_head = unsafe { &mut *(addr as *mut ListHead) };\n    |                                            ^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `common_test::te`:\n    = note: inside `buddy::Zone::<12>::init_free_area` at src/buddy.rs:101:44: 101:67\nnote: inside `<buddy::Zone<12> as PageAllocator>::init`\n   --> src/buddy.rs:190:9\n    |\n190 |         self.init_free_area(start_page, end_page, MAX_ORDER - 1);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `common_test::init_allocator_success::<buddy::Zone<12>>`\n   --> src/lib.rs:116:9\n    |\n116 |         allocator.init(range).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^\nnote: inside `common_test::test_alloc_dealloc`\n   --> src/lib.rs:152:19\n    |\n152 |         let ptr = init_allocator_success(&mut zone, SIZE);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/lib.rs:149:28\n    |\n148 |     #[test]\n    |     ------- in this procedural macro expansion\n149 |     fn test_alloc_dealloc() {\n    |                            ^\n    = note: this warning originates in the attribute macro `test` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: Undefined Behavior: attempting a write access using <292976> at alloc123098[0x110], but that tag does not exist in the borrow stack for this location\n   --> src/buddy.rs:104:13\n    |\n104 |             list_add_tail!(ptr, to_list_head_ptr!(free_area.list_head));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |             |\n    |             attempting a write access using <292976> at alloc123098[0x110], but that tag does not exist in the borrow stack for this location\n    |             this error occurs as part of an access at alloc123098[0x110..0x118]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\nhelp: <292976> was created by a SharedReadOnly retag at offsets [0x108..0x118]\n   --> src/buddy.rs:181:13\n    |\n181 |             list_head_init!(area.list_head);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nhelp: <292976> was later invalidated at offsets [0x110..0x118] by a write access\n   --> src/buddy.rs:181:13\n    |\n181 |             list_head_init!(area.list_head);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE (of the first span) on thread `common_test::te`:\n    = note: inside `buddy::Zone::<12>::init_free_area` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/doubly-linked-list-0.2.0/src/lib.rs:95:13: 95:26\nnote: inside `<buddy::Zone<12> as PageAllocator>::init`\n   --> src/buddy.rs:190:9\n    |\n190 |         self.init_free_area(start_page, end_page, MAX_ORDER - 1);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `common_test::init_allocator_success::<buddy::Zone<12>>`\n   --> src/lib.rs:116:9\n    |\n116 |         allocator.init(range).unwrap();\n    |         ^^^^^^^^^^^^^^^^^^^^^\nnote: inside `common_test::test_alloc_dealloc`\n   --> src/lib.rs:152:19\n    |\n152 |         let ptr = init_allocator_success(&mut zone, SIZE);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/lib.rs:149:28\n    |\n148 |     #[test]\n    |     ------- in this procedural macro expansion\n149 |     fn test_alloc_dealloc() {\n    |                            ^\n    = note: this error originates in the macro `list_add_in_tail` which comes from the expansion of the attribute macro `test` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p pager --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/os-module/pager/target/miri/x86_64-unknown-linux-gnu/debug/deps/pager-e82194c365856647 pager 'common_test::test_alloc_dealloc'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                "miri_timeout": false
              },
              {
                "name": "common_test::test_init",
                "status": "ok",
                "duration_ms": 26,
                "error": null,
                "miri_pass": true,
                "miri_output": null,
                "miri_timeout": false
              }
            ],
            "failed": 0,
            "duration_ms": 127
          }
        ],
        "failed": 0,
        "duration_ms": 127,
        "pkg_tests_count": 4,
        "workspace_tests_count": 4
      },
      "tests": 0,
      "examples": 2,
      "benches": 0,
      "authors": [],
      "description": "",
      "documentation": null,
      "readme": "README.md",
      "homepage": null,
      "keywords": [],
      "categories": [],
      "rust_version": null,
      "diag_total_count": 7,
      "last_commit_time": "2023-09-15T09:28:26Z",
      "release_count": 19,
      "last_release_size": 9444,
      "last_release_time": "2022-09-22T15:56:56Z"
    }
  }
}