[
  {
    "user": "Starry-Mix-THU",
    "repo": "axfs-ng-vfs",
    "timestamp": {
      "start": 1753754279970,
      "end": 1753754280018
    },
    "pkgs": {
      "axfs-ng-vfs": {
        "version": "0.1.0",
        "dependencies": 6,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "axfs-ng-vfs",
              "kind": "lib",
              "binary_name": "axfs_ng_vfs",
              "testcases": [
                {
                  "name": "path::test::test_back_components",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "path::test::test_file_name",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 6
            }
          ],
          "failed": 0,
          "duration_ms": 6,
          "pkg_tests_count": 2,
          "workspace_tests_count": 2
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Mivik <mivikq@gmail.com>"
        ],
        "description": "",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 20,
        "last_commit_time": "2025-07-29T01:24:24Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "Starry-Mix-THU",
    "repo": "axprocess",
    "timestamp": {
      "start": 1753581241607,
      "end": 1753754280243
    },
    "pkgs": {
      "starry-process": {
        "version": "0.2.0",
        "dependencies": 5,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "starry-process::group",
              "kind": "test",
              "binary_name": "group",
              "testcases": [
                {
                  "name": "basic",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling cfg-if v1.0.1\n   Compiling dtor-proc-macro v0.0.5\n   Compiling lazyinit v0.2.2\n   Compiling weak-map v0.1.1\n   Compiling ctor-proc-macro v0.0.5\n   Compiling dtor v0.0.6\n   Compiling ctor v0.4.2\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling crate_interface v0.1.4\n   Compiling kernel_guard v0.1.2\n   Compiling kspin v0.1.0\n   Compiling starry-process v0.2.0 (/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 3.31s\n     Running tests/group.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/group-6e927ae2aac892df)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7fdb77fbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7fdb7880297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7fdb77fb39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7fdb77fbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7fdb77fc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7fdb77fc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7fdb77032f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7fdb77fc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7fdb77fc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7fdb77fbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7fdb77fc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7fdb746c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7fdb746e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55cdff8d4d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55cdff8cb064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55cdff8b5ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55cdff8cbc1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55cdff9fdef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7fdb798ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7fdb79adfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7fdb79997801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7fdb799974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7fdb7999d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7fdb7309caa4 - <unknown>\n  24:     0x7fdb73129c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_56-5499.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test group`\n",
                  "miri_timeout": false
                },
                {
                  "name": "cleanup",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/group.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/group-6e927ae2aac892df)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f6d57dbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f6d5860297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f6d57db39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f6d57dbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f6d57dc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f6d57dc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f6d56e32f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f6d57dc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f6d57dc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f6d57dbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f6d57dc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f6d544c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f6d544e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x5586b8d80d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x5586b8d77064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x5586b8d61ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x5586b8d77c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x5586b8ea9ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f6d596ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f6d598dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f6d59797801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f6d597974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f6d5979d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f6d52e9caa4 - <unknown>\n  24:     0x7f6d52f29c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_56-5521.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test group`\n",
                  "miri_timeout": false
                },
                {
                  "name": "cleanup_processes",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/group.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/group-6e927ae2aac892df)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f28c9dbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f28ca60297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f28c9db39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f28c9dbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f28c9dc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f28c9dc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f28c8e32f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f28c9dc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f28c9dc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f28c9dbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f28c9dc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f28c64c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f28c64e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55da6dc15d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55da6dc0c064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55da6dbf6ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55da6dc0cc1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55da6dd3eef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f28cb6ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f28cb8dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f28cb797801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f28cb7974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f28cb79d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f28c4e9caa4 - <unknown>\n  24:     0x7f28c4f29c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_57-5543.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test group`\n",
                  "miri_timeout": false
                },
                {
                  "name": "create",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/group.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/group-6e927ae2aac892df)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f73c7fbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f73c880297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f73c7fb39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f73c7fbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f73c7fc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f73c7fc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f73c7032f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f73c7fc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f73c7fc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f73c7fbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f73c7fc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f73c46c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f73c46e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x56441a0ccd46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x56441a0c3064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x56441a0adad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x56441a0c3c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x56441a1f5ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f73c98ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f73c9adfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f73c9997801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f73c99974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f73c999d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f73c309caa4 - <unknown>\n  24:     0x7f73c3129c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_57-5565.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test group`\n",
                  "miri_timeout": false
                },
                {
                  "name": "create_leader",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/group.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/group-6e927ae2aac892df)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f928b7bdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f928c00297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f928b7b39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f928b7bdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f928b7c17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f928b7c132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f928a832f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f928b7c200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f928b7c1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f928b7be389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f928b7c19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f9287ec9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f9287ee1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55affe43dd46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55affe434064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55affe41ead1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55affe434c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55affe566ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f928d0ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f928d2dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f928d197801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f928d1974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f928d19d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f928689caa4 - <unknown>\n  24:     0x7f9286929c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_57-5587.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test group`\n",
                  "miri_timeout": false
                },
                {
                  "name": "inherit",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/group.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/group-6e927ae2aac892df)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7fdd33dbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7fdd3460297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7fdd33db39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7fdd33dbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7fdd33dc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7fdd33dc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7fdd32e32f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7fdd33dc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7fdd33dc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7fdd33dbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7fdd33dc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7fdd304c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7fdd304e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55b314b10d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55b314b07064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55b314af1ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55b314b07c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55b314c39ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7fdd356ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7fdd358dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7fdd35797801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7fdd357974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7fdd3579d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7fdd2ee9caa4 - <unknown>\n  24:     0x7fdd2ef29c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_57-5609.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test group`\n",
                  "miri_timeout": false
                },
                {
                  "name": "move_back",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/group.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/group-6e927ae2aac892df)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7ff9a25bdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7ff9a2e0297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7ff9a25b39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7ff9a25bdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7ff9a25c17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7ff9a25c132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7ff9a1632f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7ff9a25c200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7ff9a25c1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7ff9a25be389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7ff9a25c19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7ff99ecc9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7ff99ece1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55e408116d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55e40810d064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55e4080f7ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55e40810dc1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55e40823fef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7ff9a3effb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7ff9a40dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7ff9a3f97801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7ff9a3f974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7ff9a3f9d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7ff99d69caa4 - <unknown>\n  24:     0x7ff99d729c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_58-5631.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test group`\n",
                  "miri_timeout": false
                },
                {
                  "name": "move_cleanup",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/group.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/group-6e927ae2aac892df)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7feac75bdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7feac7e0297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7feac75b39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7feac75bdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7feac75c17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7feac75c132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7feac6632f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7feac75c200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7feac75c1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7feac75be389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7feac75c19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7feac3cc9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7feac3ce1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x561a77ef8d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x561a77eef064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x561a77ed9ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x561a77eefc1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x561a78021ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7feac8effb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7feac90dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7feac8f97801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7feac8f974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7feac8f9d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7feac269caa4 - <unknown>\n  24:     0x7feac2729c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_58-5653.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test group`\n",
                  "miri_timeout": false
                },
                {
                  "name": "move_to",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/group.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/group-6e927ae2aac892df)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f8cd1bbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f8cd240297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f8cd1bb39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f8cd1bbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f8cd1bc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f8cd1bc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f8cd0c32f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f8cd1bc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f8cd1bc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f8cd1bbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f8cd1bc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f8cce2c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f8cce2e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55fd6b08fd46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55fd6b086064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55fd6b070ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55fd6b086c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55fd6b1b8ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f8cd34ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f8cd36dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f8cd3597801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f8cd35974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f8cd359d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f8cccc9caa4 - <unknown>\n  24:     0x7f8cccd29c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_58-5675.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test group`\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 36
            },
            {
              "id": "starry-process::process",
              "kind": "test",
              "binary_name": "process",
              "testcases": [
                {
                  "name": "child",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling starry-process v0.2.0 (/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.03s\n     Running tests/process.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/process-6a007601b6d76fa2)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f28b77bdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f28b800297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f28b77b39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f28b77bdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f28b77c17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f28b77c132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f28b6832f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f28b77c200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f28b77c1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f28b77be389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f28b77c19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f28b3ec9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f28b3ee1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55e9e607ed46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55e9e6075064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55e9e605fad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55e9e6075c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55e9e61a7ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f28b90ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f28b92dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f28b9197801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f28b91974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f28b919d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f28b289caa4 - <unknown>\n  24:     0x7f28b2929c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_58-5703.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test process`\n",
                  "miri_timeout": false
                },
                {
                  "name": "exit",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/process.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/process-6a007601b6d76fa2)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f99727bdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f997300297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f99727b39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f99727bdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f99727c17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f99727c132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f9971832f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f99727c200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f99727c1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f99727be389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f99727c19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f996eec9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f996eee1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x555796c42d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x555796c39064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x555796c23ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x555796c39c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x555796d6bef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f99740ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f99742dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f9974197801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f99741974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f997419d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f996d89caa4 - <unknown>\n  24:     0x7f996d929c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_59-5725.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test process`\n",
                  "miri_timeout": false
                },
                {
                  "name": "free",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/process.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/process-6a007601b6d76fa2)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f24d53bdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f24d5c0297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f24d53b39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f24d53bdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f24d53c17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f24d53c132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f24d4432f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f24d53c200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f24d53c1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f24d53be389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f24d53c19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f24d1ac9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f24d1ae1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55d627d39d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55d627d30064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55d627d1aad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55d627d30c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55d627e62ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f24d6cffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f24d6edfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f24d6d97801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f24d6d974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f24d6d9d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f24d049caa4 - <unknown>\n  24:     0x7f24d0529c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_59-5747.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test process`\n",
                  "miri_timeout": false
                },
                {
                  "name": "free_not_zombie",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/process.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/process-6a007601b6d76fa2)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7fa2913bdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7fa291c0297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7fa2913b39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7fa2913bdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7fa2913c17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7fa2913c132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7fa290432f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7fa2913c200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7fa2913c1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7fa2913be389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7fa2913c19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7fa28dac9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7fa28dae1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55e349f0bd46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55e349f02064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55e349eecad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55e349f02c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55e34a034ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7fa292cffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7fa292edfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7fa292d97801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7fa292d974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7fa292d9d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7fa28c49caa4 - <unknown>\n  24:     0x7fa28c529c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_59-5769.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test process`\n",
                  "miri_timeout": false
                },
                {
                  "name": "reap",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/process.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/process-6a007601b6d76fa2)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7fb1699bdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7fb16a20297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7fb1699b39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7fb1699bdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7fb1699c17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7fb1699c132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7fb168a32f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7fb1699c200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7fb1699c1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7fb1699be389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7fb1699c19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7fb1660c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7fb1660e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x561f62389d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x561f62380064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x561f6236aad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x561f62380c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x561f624b2ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7fb16b2ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7fb16b4dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7fb16b397801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7fb16b3974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7fb16b39d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7fb164a9caa4 - <unknown>\n  24:     0x7fb164b29c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_59-5791.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test process`\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 20
            },
            {
              "id": "starry-process::session",
              "kind": "test",
              "binary_name": "session",
              "testcases": [
                {
                  "name": "basic",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling starry-process v0.2.0 (/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.03s\n     Running tests/session.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/session-bfb5ef144ccd173c)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f6accfbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f6acd80297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f6accfb39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f6accfbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f6accfc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f6accfc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f6acc032f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f6accfc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f6accfc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f6accfbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f6accfc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f6ac96c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f6ac96e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x557817eefd46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x557817ee6064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x557817ed0ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x557817ee6c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x557818018ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f6ace8ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f6aceadfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f6ace997801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f6ace9974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f6ace99d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f6ac809caa4 - <unknown>\n  24:     0x7f6ac8129c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_53_59-5819.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test session`\n",
                  "miri_timeout": false
                },
                {
                  "name": "cleanup",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/session.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/session-bfb5ef144ccd173c)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f90923bdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f9092c0297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f90923b39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f90923bdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f90923c17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f90923c132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f9091432f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f90923c200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f90923c1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f90923be389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f90923c19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f908eac9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f908eae1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55e1d50d1d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55e1d50c8064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55e1d50b2ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55e1d50c8c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55e1d51faef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f9093cffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f9093edfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f9093d97801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f9093d974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f9093d9d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f908d49caa4 - <unknown>\n  24:     0x7f908d529c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_54_00-5841.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test session`\n",
                  "miri_timeout": false
                },
                {
                  "name": "cleanup_groups",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/session.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/session-bfb5ef144ccd173c)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7fb0b9fbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7fb0ba80297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7fb0b9fb39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7fb0b9fbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7fb0b9fc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7fb0b9fc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7fb0b9032f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7fb0b9fc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7fb0b9fc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7fb0b9fbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7fb0b9fc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7fb0b66c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7fb0b66e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55e2c9392d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55e2c9389064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55e2c9373ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55e2c9389c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55e2c94bbef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7fb0bb8ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7fb0bbadfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7fb0bb997801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7fb0bb9974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7fb0bb99d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7fb0b509caa4 - <unknown>\n  24:     0x7fb0b5129c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_54_00-5863.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test session`\n",
                  "miri_timeout": false
                },
                {
                  "name": "create",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/session.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/session-bfb5ef144ccd173c)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f54a1dbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f54a260297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f54a1db39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f54a1dbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f54a1dc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f54a1dc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f54a0e32f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f54a1dc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f54a1dc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f54a1dbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f54a1dc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f549e4c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f549e4e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x558defa06d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x558def9fd064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x558def9e7ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x558def9fdc1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x558defb2fef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f54a36ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f54a38dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f54a3797801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f54a37974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f54a379d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f549ce9caa4 - <unknown>\n  24:     0x7f549cf29c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_54_00-5885.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test session`\n",
                  "miri_timeout": false
                },
                {
                  "name": "create_group",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/session.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/session-bfb5ef144ccd173c)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7fc3667bdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7fc36700297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7fc3667b39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7fc3667bdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7fc3667c17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7fc3667c132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7fc365832f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7fc3667c200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7fc3667c1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7fc3667be389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7fc3667c19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7fc362ec9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7fc362ee1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55ae086a2d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55ae08699064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55ae08683ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55ae08699c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55ae087cbef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7fc3680ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7fc3682dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7fc368197801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7fc3681974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7fc36819d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7fc36189caa4 - <unknown>\n  24:     0x7fc361929c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_54_00-5907.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test session`\n",
                  "miri_timeout": false
                },
                {
                  "name": "create_leader",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/session.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/session-bfb5ef144ccd173c)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7f1344dbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7f134560297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7f1344db39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7f1344dbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7f1344dc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7f1344dc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7f1343e32f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7f1344dc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7f1344dc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7f1344dbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7f1344dc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7f13414c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7f13414e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55dd112ced46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55dd112c5064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55dd112afad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55dd112c5c1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55dd113f7ef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7f13466ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7f13468dfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7f1346797801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7f13467974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7f134679d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7f133fe9caa4 - <unknown>\n  24:     0x7f133ff29c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_54_01-5929.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test session`\n",
                  "miri_timeout": false
                },
                {
                  "name": "move_to_different_session",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/session.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/session-bfb5ef144ccd173c)\n\nthread 'rustc' panicked at /rustc/ce5fdd7d42aba9a2925692e11af2bd39cf37798a/compiler/rustc_const_eval/src/interpret/place.rs:119:9:\nassertion failed: layout.is_zst()\nstack backtrace:\n   0:     0x7fa0cdfbdec3 - <std::sys::backtrace::BacktraceLock::print::DisplayBacktrace as core::fmt::Display>::fmt::h0fdd2f4507879a4c\n   1:     0x7fa0ce80297f - core::fmt::write::h08a7498cc9a35820\n   2:     0x7fa0cdfb39d3 - std::io::Write::write_fmt::h26e0bf3707d4b79b\n   3:     0x7fa0cdfbdd22 - std::sys::backtrace::BacktraceLock::print::h8d0a78ef102801e0\n   4:     0x7fa0cdfc17c7 - std::panicking::default_hook::{{closure}}::hfb80c6ac336da947\n   5:     0x7fa0cdfc132b - std::panicking::default_hook::h74ee3a331cd440c5\n   6:     0x7fa0cd032f43 - std[fd9c8b754af1099]::panicking::update_hook::<alloc[2df1bfed80384590]::boxed::Box<rustc_driver_impl[9c23af2b5d78473]::install_ice_hook::{closure#1}>>::{closure#0}\n   7:     0x7fa0cdfc200e - std::panicking::rust_panic_with_hook::h527896b04f033ba9\n   8:     0x7fa0cdfc1cd6 - std::panicking::begin_panic_handler::{{closure}}::h6bd34550e24eae38\n   9:     0x7fa0cdfbe389 - std::sys::backtrace::__rust_end_short_backtrace::h6209b9a58897b7b9\n  10:     0x7fa0cdfc19ed - __rustc[3aaae60b58908e19]::rust_begin_unwind\n  11:     0x7fa0ca6c9e20 - core::panicking::panic_fmt::h929244265b4800e4\n  12:     0x7fa0ca6e1abc - core::panicking::panic::hd6c05c0282ba2e96\n  13:     0x55a98f5f5d46 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::helpers::EvalContextExt>::call_function\n  14:     0x55a98f5ec064 - miri[c6cb3a10bb0b27]::eval::create_ecx::{closure#0}\n  15:     0x55a98f5d6ad1 - <rustc_const_eval[4ee25d216e59c825]::interpret::eval_context::InterpCx<miri[c6cb3a10bb0b27]::machine::MiriMachine> as miri[c6cb3a10bb0b27]::concurrency::thread::EvalContextExt>::run_threads\n  16:     0x55a98f5ecc1b - miri[c6cb3a10bb0b27]::eval::eval_entry\n  17:     0x55a98f71eef6 - <miri[c877d4ad6a45c767]::MiriCompilerCalls as rustc_driver_impl[9c23af2b5d78473]::Callbacks>::after_analysis\n  18:     0x7fa0cf8ffb66 - rustc_interface[ef958bb0a589c0f8]::passes::create_and_enter_global_ctxt::<core[1890a5ffeb2e3fd8]::option::Option<rustc_interface[ef958bb0a589c0f8]::queries::Linker>, rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}::{closure#2}>::{closure#2}::{closure#0}\n  19:     0x7fa0cfadfade - rustc_interface[ef958bb0a589c0f8]::interface::run_compiler::<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}\n  20:     0x7fa0cf997801 - std[fd9c8b754af1099]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>\n  21:     0x7fa0cf9974e2 - <<std[fd9c8b754af1099]::thread::Builder>::spawn_unchecked_<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_with_globals<rustc_interface[ef958bb0a589c0f8]::util::run_in_thread_pool_with_globals<rustc_interface[ef958bb0a589c0f8]::interface::run_compiler<(), rustc_driver_impl[9c23af2b5d78473]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[1890a5ffeb2e3fd8]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}\n  22:     0x7fa0cf99d53d - std::sys::pal::unix::thread::Thread::new::thread_start::h9292c27eed165926\n  23:     0x7fa0c909caa4 - <unknown>\n  24:     0x7fa0c9129c3c - <unknown>\n  25:                0x0 - <unknown>\n\nerror: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/miri/issues/new\n\nnote: please make sure that you have updated to the latest nightly\n\nnote: please attach the file at `/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axprocess/rustc-ice-2025-07-27T01_54_01-5951.txt` to your bug report\n\nnote: compiler flags: -C embed-bitcode=no -C debuginfo=2\n\nnote: some of the compiler flags provided by cargo are hidden\n\nquery stack during panic:\nend of query stack\n\nMiri caused an ICE during evaluation. Here's the interpreter backtrace at the time of the panic:\nnote: the place in the program where the ICE was triggered\n  |\n  = note: (no span available)\n  = note: BACKTRACE:\n\nerror: test failed, to rerun pass `-p starry-process --test session`\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 27
            }
          ],
          "failed": 0,
          "duration_ms": 83,
          "pkg_tests_count": 21,
          "workspace_tests_count": 21
        },
        "tests": 3,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Asakura Mizu <asakuramizu111@gmail.com>"
        ],
        "description": "Process management for ArceOS",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 5,
        "last_commit_time": "2025-07-26T02:02:45Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "Starry-Mix-THU",
    "repo": "axptr",
    "timestamp": {
      "start": 1753407958249,
      "end": 1753754280475
    },
    "pkgs": {
      "starry-vm": {
        "version": "0.1.0",
        "dependencies": 4,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "starry-vm::test",
              "kind": "test",
              "binary_name": "test",
              "testcases": [
                {
                  "name": "test_load",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling axerrno v0.1.0\n   Compiling log v0.4.27\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling bytemuck_derive v1.10.0\n   Compiling extern-trait v0.1.1\n   Compiling bytemuck v1.23.1\n   Compiling starry-vm v0.1.0 (/tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 4.21s\n     Running tests/test.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test-9b30463f8fdcb3d4)\nwarning: integer-to-pointer cast\n   --> tests/test.rs:112:15\n    |\n112 |     let ptr = 0x3000 as *mut u8;\n    |               ^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `test_load`:\n    = note: inside `test_load` at tests/test.rs:112:15: 112:32\nnote: inside closure\n   --> tests/test.rs:107:15\n    |\n105 | #[test]\n    | ------- in this procedural macro expansion\n106 | #[cfg(feature = \"alloc\")]\n107 | fn test_load() {\n    |               ^\n\nerror: Undefined Behavior: calling a function with return type Vm passing return place of type starry_vm::VmImpl\n   --> /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:38:1\n    |\n38  | #[extern_trait(VmImpl)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = help: this means these two types are not *guaranteed* to be ABI-compatible across all targets\n    = help: if you think this code should be accepted anyway, please report an issue with Miri\n    = note: BACKTRACE on thread `test_load`:\n    = note: inside `<starry_vm::VmImpl as starry_vm::VmIo>::new` at /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:38:1: 38:24\nnote: inside `starry_vm::vm_write_slice::<u8>`\n   --> /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:70:5\n    |\n70  |     VmImpl::new().write(ptr.addr(), bytes)\n    |     ^^^^^^^^^^^^^\nnote: inside `test_load`\n   --> tests/test.rs:113:5\n    |\n113 |     vm_write_slice(ptr, MAGIC).unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> tests/test.rs:107:15\n    |\n105 | #[test]\n    | ------- in this procedural macro expansion\n106 | #[cfg(feature = \"alloc\")]\n107 | fn test_load() {\n    |               ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p starry-vm --test test`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/target/miri/x86_64-unknown-linux-gnu/debug/deps/test-9b30463f8fdcb3d4 test_load` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "test_load_until_nul",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/test.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test-9b30463f8fdcb3d4)\nwarning: integer-to-pointer cast\n   --> tests/test.rs:123:15\n    |\n123 |     let ptr = 0x4000 as *mut u8;\n    |               ^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `test_load_until`:\n    = note: inside `test_load_until_nul` at tests/test.rs:123:15: 123:32\nnote: inside closure\n   --> tests/test.rs:120:25\n    |\n118 | #[test]\n    | ------- in this procedural macro expansion\n119 | #[cfg(feature = \"alloc\")]\n120 | fn test_load_until_nul() {\n    |                         ^\n\nerror: Undefined Behavior: calling a function with return type Vm passing return place of type starry_vm::VmImpl\n   --> /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:38:1\n    |\n38  | #[extern_trait(VmImpl)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n    = help: this means these two types are not *guaranteed* to be ABI-compatible across all targets\n    = help: if you think this code should be accepted anyway, please report an issue with Miri\n    = note: BACKTRACE on thread `test_load_until`:\n    = note: inside `<starry_vm::VmImpl as starry_vm::VmIo>::new` at /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:38:1: 38:24\nnote: inside `starry_vm::vm_load_until_nul::<u8>`\n   --> /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/vec.rs:43:18\n    |\n43  |     let mut vm = VmImpl::new();\n    |                  ^^^^^^^^^^^^^\nnote: inside `test_load_until_nul`\n   --> tests/test.rs:125:16\n    |\n125 |     assert_eq!(vm_load_until_nul(ptr).unwrap(), []);\n    |                ^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> tests/test.rs:120:25\n    |\n118 | #[test]\n    | ------- in this procedural macro expansion\n119 | #[cfg(feature = \"alloc\")]\n120 | fn test_load_until_nul() {\n    |                         ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p starry-vm --test test`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/target/miri/x86_64-unknown-linux-gnu/debug/deps/test-9b30463f8fdcb3d4 test_load_until_nul` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "test_perm",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/test.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test-9b30463f8fdcb3d4)\nwarning: integer-to-pointer cast\n  --> tests/test.rs:66:24\n   |\n66 |         vm_write_slice(0x100 as *mut (), &[]),\n   |                        ^^^^^^^^^^^^^^^^ integer-to-pointer cast\n   |\n   = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n   = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n   = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n   = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n   = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n   = note: BACKTRACE on thread `test_perm`:\n   = note: inside `test_perm` at tests/test.rs:66:24: 66:40\nnote: inside closure\n  --> tests/test.rs:64:15\n   |\n63 | #[test]\n   | ------- in this procedural macro expansion\n64 | fn test_perm() {\n   |               ^\n\nerror: Undefined Behavior: calling a function with return type Vm passing return place of type starry_vm::VmImpl\n  --> /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:38:1\n   |\n38 | #[extern_trait(VmImpl)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here\n   |\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n   = help: this means these two types are not *guaranteed* to be ABI-compatible across all targets\n   = help: if you think this code should be accepted anyway, please report an issue with Miri\n   = note: BACKTRACE on thread `test_perm`:\n   = note: inside `<starry_vm::VmImpl as starry_vm::VmIo>::new` at /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:38:1: 38:24\nnote: inside `starry_vm::vm_write_slice::<()>`\n  --> /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:70:5\n   |\n70 |     VmImpl::new().write(ptr.addr(), bytes)\n   |     ^^^^^^^^^^^^^\nnote: inside `test_perm`\n  --> tests/test.rs:66:9\n   |\n66 |         vm_write_slice(0x100 as *mut (), &[]),\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n  --> tests/test.rs:64:15\n   |\n63 | #[test]\n   | ------- in this procedural macro expansion\n64 | fn test_perm() {\n   |               ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p starry-vm --test test`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/target/miri/x86_64-unknown-linux-gnu/debug/deps/test-9b30463f8fdcb3d4 test_perm` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "test_ptr",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/test.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test-9b30463f8fdcb3d4)\nwarning: integer-to-pointer cast\n  --> tests/test.rs:93:15\n   |\n93 |     let ptr = 0x2000 as *mut Foo;\n   |               ^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n   |\n   = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n   = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n   = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n   = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n   = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n   = note: BACKTRACE on thread `test_ptr`:\n   = note: inside `test_ptr` at tests/test.rs:93:15: 93:33\nnote: inside closure\n  --> tests/test.rs:73:14\n   |\n72 | #[test]\n   | ------- in this procedural macro expansion\n73 | fn test_ptr() {\n   |              ^\n\nerror: Undefined Behavior: calling a function with return type Vm passing return place of type starry_vm::VmImpl\n  --> /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:38:1\n   |\n38 | #[extern_trait(VmImpl)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here\n   |\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n   = help: this means these two types are not *guaranteed* to be ABI-compatible across all targets\n   = help: if you think this code should be accepted anyway, please report an issue with Miri\n   = note: BACKTRACE on thread `test_ptr`:\n   = note: inside `<starry_vm::VmImpl as starry_vm::VmIo>::new` at /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:38:1: 38:24\nnote: inside `starry_vm::vm_write_slice::<test_ptr::Foo>`\n  --> /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:70:5\n   |\n70 |     VmImpl::new().write(ptr.addr(), bytes)\n   |     ^^^^^^^^^^^^^\nnote: inside `test_ptr`\n  --> tests/test.rs:94:5\n   |\n94 |     vm_write_slice(ptr, &[A, B, C]).unwrap();\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n  --> tests/test.rs:73:14\n   |\n72 | #[test]\n   | ------- in this procedural macro expansion\n73 | fn test_ptr() {\n   |              ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p starry-vm --test test`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/target/miri/x86_64-unknown-linux-gnu/debug/deps/test-9b30463f8fdcb3d4 test_ptr` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "test_slice",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running tests/test.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test-9b30463f8fdcb3d4)\nwarning: integer-to-pointer cast\n  --> tests/test.rs:54:15\n   |\n54 |     let ptr = 0x1000 as *mut u8;\n   |               ^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n   |\n   = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n   = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n   = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n   = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n   = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n   = note: BACKTRACE on thread `test_slice`:\n   = note: inside `test_slice` at tests/test.rs:54:15: 54:32\nnote: inside closure\n  --> tests/test.rs:51:16\n   |\n50 | #[test]\n   | ------- in this procedural macro expansion\n51 | fn test_slice() {\n   |                ^\n\nerror: Undefined Behavior: calling a function with return type Vm passing return place of type starry_vm::VmImpl\n  --> /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:38:1\n   |\n38 | #[extern_trait(VmImpl)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here\n   |\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n   = help: this means these two types are not *guaranteed* to be ABI-compatible across all targets\n   = help: if you think this code should be accepted anyway, please report an issue with Miri\n   = note: BACKTRACE on thread `test_slice`:\n   = note: inside `<starry_vm::VmImpl as starry_vm::VmIo>::new` at /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:38:1: 38:24\nnote: inside `starry_vm::vm_write_slice::<u8>`\n  --> /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/src/lib.rs:70:5\n   |\n70 |     VmImpl::new().write(ptr.addr(), bytes)\n   |     ^^^^^^^^^^^^^\nnote: inside `test_slice`\n  --> tests/test.rs:55:5\n   |\n55 |     vm_write_slice(ptr, DATA).unwrap();\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n  --> tests/test.rs:51:16\n   |\n50 | #[test]\n   | ------- in this procedural macro expansion\n51 | fn test_slice() {\n   |                ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p starry-vm --test test`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/Starry-Mix-THU/axptr/target/miri/x86_64-unknown-linux-gnu/debug/deps/test-9b30463f8fdcb3d4 test_slice` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 20
            }
          ],
          "failed": 0,
          "duration_ms": 20,
          "pkg_tests_count": 5,
          "workspace_tests_count": 5
        },
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Mivik <mivikq@gmail.com>",
          "Asakura Mizu <asakuramizu111@gmail.com>"
        ],
        "description": "",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 10,
        "last_commit_time": "2025-07-24T07:44:54Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "Starry-Mix-THU",
    "repo": "axsignal",
    "timestamp": {
      "start": 1753667523608,
      "end": 1753754280759
    },
    "pkgs": {
      "starry-signal": {
        "version": "0.2.0",
        "dependencies": 10,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Mivik <mivikq@gmail.com>",
          "Asakura Mizu <asakuramizu111@gmail.com>"
        ],
        "description": "",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-27T08:26:55Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "Starry-Mix-THU",
    "repo": "extern-trait",
    "timestamp": {
      "start": 1752111798776,
      "end": 1753754281109
    },
    "pkgs": {
      "extern-trait": {
        "version": "0.2.0",
        "dependencies": 3,
        "lib": false,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "extern-trait::arc",
              "kind": "test",
              "binary_name": "arc",
              "testcases": [
                {
                  "name": "test_resource",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling extern-trait v0.2.0 (/tmp/os-checker-plugin-cargo/Starry-Mix-THU/extern-trait)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 4.00s\n     Running tests/arc.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/arc-f560d2a83119a082)\nerror: Undefined Behavior: calling a function with return type resource_impl::ActualResource passing return place of type ResourceProxy\n  --> tests/arc.rs:3:1\n   |\n3  | #[extern_trait(ResourceProxy)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here\n   |\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n   = help: this means these two types are not *guaranteed* to be ABI-compatible across all targets\n   = help: if you think this code should be accepted anyway, please report an issue with Miri\n   = note: BACKTRACE on thread `test_resource`:\n   = note: inside `<ResourceProxy as Resource>::new` at tests/arc.rs:3:1: 3:31\nnote: inside `test_resource`\n  --> tests/arc.rs:46:15\n   |\n46 |     let res = ResourceProxy::new();\n   |               ^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n  --> tests/arc.rs:38:19\n   |\n37 | #[test]\n   | ------- in this procedural macro expansion\n38 | fn test_resource() {\n   |                   ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p extern-trait --test arc`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/Starry-Mix-THU/extern-trait/target/miri/x86_64-unknown-linux-gnu/debug/deps/arc-f560d2a83119a082 test_resource` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 4
            },
            {
              "id": "extern-trait::atomic",
              "kind": "test",
              "binary_name": "atomic",
              "testcases": [
                {
                  "name": "test_atomic",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling extern-trait v0.2.0 (/tmp/os-checker-plugin-cargo/Starry-Mix-THU/extern-trait)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.02s\n     Running tests/atomic.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/atomic-e59598bda819db9a)\nerror: Undefined Behavior: calling a function with return type atomic_impl::AtomicImpl passing return place of type AtomicProxy\n  --> tests/atomic.rs:3:1\n   |\n3  | #[extern_trait(AtomicProxy)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here\n   |\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n   = help: this means these two types are not *guaranteed* to be ABI-compatible across all targets\n   = help: if you think this code should be accepted anyway, please report an issue with Miri\n   = note: BACKTRACE on thread `test_atomic`:\n   = note: inside `<AtomicProxy as Atomic>::new` at tests/atomic.rs:3:1: 3:29\nnote: inside `test_atomic`\n  --> tests/atomic.rs:36:18\n   |\n36 |     let atomic = AtomicProxy::new(0);\n   |                  ^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n  --> tests/atomic.rs:35:17\n   |\n34 | #[test]\n   | ------- in this procedural macro expansion\n35 | fn test_atomic() {\n   |                 ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p extern-trait --test atomic`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/Starry-Mix-THU/extern-trait/target/miri/x86_64-unknown-linux-gnu/debug/deps/atomic-e59598bda819db9a test_atomic` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 4
            },
            {
              "id": "extern-trait::reflect",
              "kind": "test",
              "binary_name": "reflect",
              "testcases": [
                {
                  "name": "test_any",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling extern-trait v0.2.0 (/tmp/os-checker-plugin-cargo/Starry-Mix-THU/extern-trait)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.02s\n     Running tests/reflect.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/reflect-da41c08a1c1e7f26)\nerror: Undefined Behavior: calling a function with return type AnyImpl passing return place of type AnyProxy\n  --> tests/reflect.rs:3:1\n   |\n3  | #[extern_trait(AnyProxy)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here\n   |\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n   = help: this means these two types are not *guaranteed* to be ABI-compatible across all targets\n   = help: if you think this code should be accepted anyway, please report an issue with Miri\n   = note: BACKTRACE on thread `test_any`:\n   = note: inside `AnyProxy::from_impl::<AnyImpl>` at tests/reflect.rs:3:1: 3:26\nnote: inside `test_any`\n  --> tests/reflect.rs:17:23\n   |\n17 |         let mut any = AnyProxy::from_impl(any);\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n  --> tests/reflect.rs:13:14\n   |\n12 | #[test]\n   | ------- in this procedural macro expansion\n13 | fn test_any() {\n   |              ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p extern-trait --test reflect`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/Starry-Mix-THU/extern-trait/target/miri/x86_64-unknown-linux-gnu/debug/deps/reflect-da41c08a1c1e7f26 test_any` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 4
            },
            {
              "id": "extern-trait::size",
              "kind": "test",
              "binary_name": "size",
              "testcases": [
                {
                  "name": "test_tuple",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling extern-trait v0.2.0 (/tmp/os-checker-plugin-cargo/Starry-Mix-THU/extern-trait)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.03s\n     Running tests/size.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/size-6b930cb810ace1ae)\nerror: Undefined Behavior: calling a function with return type tuple_impl::TupleImpl passing return place of type TupleProxy\n  --> tests/size.rs:3:1\n   |\n3  | #[extern_trait(TupleProxy)]\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here\n   |\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n   = help: this means these two types are not *guaranteed* to be ABI-compatible across all targets\n   = help: if you think this code should be accepted anyway, please report an issue with Miri\n   = note: BACKTRACE on thread `test_tuple`:\n   = note: inside `<TupleProxy as Tuple>::new` at tests/size.rs:3:1: 3:28\nnote: inside `test_tuple`\n  --> tests/size.rs:29:17\n   |\n29 |     let tuple = TupleProxy::new(1, 2);\n   |                 ^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n  --> tests/size.rs:28:16\n   |\n27 | #[test]\n   | ------- in this procedural macro expansion\n28 | fn test_tuple() {\n   |                ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p extern-trait --test size`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/Starry-Mix-THU/extern-trait/target/miri/x86_64-unknown-linux-gnu/debug/deps/size-6b930cb810ace1ae test_tuple` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 4
            },
            {
              "id": "extern-trait::static",
              "kind": "test",
              "binary_name": "static",
              "testcases": [
                {
                  "name": "test_static",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 3
            }
          ],
          "failed": 0,
          "duration_ms": 19,
          "pkg_tests_count": 5,
          "workspace_tests_count": 5
        },
        "tests": 5,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Asakura Mizu <asakuramizu111@gmail.com>"
        ],
        "description": "Opaque foreign trait implementation",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "extern",
          "ffi",
          "trait"
        ],
        "categories": [],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-06-26T05:42:45Z",
        "release_count": 3,
        "last_release_size": 13004,
        "last_release_time": "2025-06-26T07:57:08Z"
      }
    }
  },
  {
    "user": "Starry-Mix-THU",
    "repo": "weak-map",
    "timestamp": {
      "start": 1752111862847,
      "end": 1753754281341
    },
    "pkgs": {
      "weak-map": {
        "version": "0.1.1",
        "dependencies": 0,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "weak-map",
              "kind": "lib",
              "binary_name": "weak_map",
              "testcases": [
                {
                  "name": "map::tests::test_basic",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "map::tests::test_cleanup",
                  "status": "ok",
                  "duration_ms": 12,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p weak-map --lib weak_map -- map::tests::test_cleanup\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                }
              ],
              "failed": 0,
              "duration_ms": 15
            }
          ],
          "failed": 0,
          "duration_ms": 15,
          "pkg_tests_count": 2,
          "workspace_tests_count": 2
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Asakura Mizu <asakuramizu111@gmail.com>"
        ],
        "description": "BTreeMap with weak references",
        "documentation": "https://docs.rs/weak-map",
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "Arc",
          "Rc",
          "weak",
          "map",
          "btree"
        ],
        "categories": [
          "no-std",
          "data-structures"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-02T13:33:19Z",
        "release_count": 2,
        "last_release_size": 9862,
        "last_release_time": "2025-07-02T13:33:28Z"
      }
    }
  },
  {
    "user": "ZR233",
    "repo": "ostool",
    "timestamp": {
      "start": 1752111873205,
      "end": 1753754281547
    },
    "pkgs": {
      "ostool": {
        "version": "0.7.24",
        "dependencies": 16,
        "lib": false,
        "bin": true,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "A tool for operating system development",
        "documentation": null,
        "readme": "../README.md",
        "homepage": null,
        "keywords": [],
        "categories": [
          "os",
          "embedded",
          "development-tools",
          "config"
        ],
        "rust_version": null,
        "diag_total_count": 25,
        "last_commit_time": "2025-06-27T05:58:11Z",
        "release_count": 79,
        "last_release_size": 26781,
        "last_release_time": "2025-06-27T05:58:40Z"
      },
      "uboot-shell": {
        "version": "0.1.9",
        "dependencies": 4,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 2,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "A crate for communicating with u-boot",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "u-boot",
          "shell",
          "embedded"
        ],
        "categories": [
          "os",
          "embedded",
          "development-tools"
        ],
        "rust_version": null,
        "diag_total_count": 6,
        "last_commit_time": "2025-06-27T05:58:11Z",
        "release_count": 10,
        "last_release_size": 11015,
        "last_release_time": "2025-05-12T06:16:48Z"
      }
    }
  },
  {
    "user": "arceos-hypervisor",
    "repo": "arm_gicv2",
    "timestamp": {
      "start": 1752111875878,
      "end": 1753754281771
    },
    "pkgs": {
      "arm_gicv2": {
        "version": "0.1.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "ARM Generic Interrupt Controller version 2 (GICv2) register definitions and basic operations",
        "documentation": "https://docs.rs/arm_gicv2",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "arm",
          "aarch64",
          "gic",
          "interrupt-controller"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": 12,
        "last_commit_time": "2024-12-12T08:25:21Z",
        "release_count": 1,
        "last_release_size": 5493,
        "last_release_time": "2024-07-17T06:34:34Z"
      }
    }
  },
  {
    "user": "arceos-hypervisor",
    "repo": "arm_vcpu",
    "timestamp": {
      "start": 1753062684434,
      "end": 1753754281978
    },
    "pkgs": {
      "arm_vcpu": {
        "version": "0.1.0",
        "dependencies": 11,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "KeYang Hu <keyang.hu@qq.com>",
          "Mingxian Su <aarkegz@gmail.com>",
          "ShiMei Tang <shimei820@gmail.com>",
          "DeBin Luo <luodeb@outlook.com>",
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Aarch64 VCPU implementation for Arceos Hypervisor",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "hypervisor",
          "aarch64",
          "vcpu"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 45,
        "last_commit_time": "2025-07-20T02:48:37Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "arceos-hypervisor",
    "repo": "arm_vgic",
    "timestamp": {
      "start": 1753581265165,
      "end": 1753754282242
    },
    "pkgs": {
      "arm_vgic": {
        "version": "0.0.0",
        "dependencies": 11,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Mingxian Su <aarkegz@gmail.com>",
          "DeBin Luo <luodeb@outlook.com>"
        ],
        "description": "",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "hypervisor",
          "kernel",
          "vgic"
        ],
        "categories": [
          "os",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 16,
        "last_commit_time": "2025-07-26T16:01:33Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "arceos-hypervisor",
    "repo": "axaddrspace",
    "timestamp": {
      "start": 1753667561145,
      "end": 1753754282474
    },
    "pkgs": {
      "axaddrspace": {
        "version": "0.1.0",
        "dependencies": 16,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "axaddrspace",
              "kind": "lib",
              "binary_name": "axaddrspace",
              "testcases": [
                {
                  "name": "address_space::tests::test_addrspace_creation",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "address_space::tests::test_clear",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "address_space::tests::test_contains_range",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "address_space::tests::test_map_alloc_lazy",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "address_space::tests::test_map_alloc_populate",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "address_space::tests::test_map_linear",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "address_space::tests::test_page_fault_handling",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "address_space::tests::test_translate",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "address_space::tests::test_translate_and_get_limit",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "address_space::tests::test_translated_byte_buffer",
                  "status": "ok",
                  "duration_ms": 6,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "address_space::tests::test_unmap",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "frame::test::test_alloc_dealloc_cycle",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "frame::test::test_alloc_no_memory",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "frame::test::test_alloc_zero",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "frame::test::test_fill_multiple_frames",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "frame::test::test_fill_operation",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "frame::test::test_uninit_access",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 82
            }
          ],
          "failed": 0,
          "duration_ms": 82,
          "pkg_tests_count": 17,
          "workspace_tests_count": 17
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "KeYang Hu <keyang.hu@qq.com>",
          "Mingxian Su <aarkegz@gmail.com>",
          "DeBin Luo <luodeb@outlook.com>"
        ],
        "description": "ArceOS-Hypervisor guest address space management module",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "hypervisor",
          "address-space"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 31,
        "last_commit_time": "2025-07-27T15:15:44Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "arceos-hypervisor",
    "repo": "axvisor_api",
    "timestamp": {
      "start": 1753754319642,
      "end": 1753754319674
    },
    "pkgs": {
      "axvisor_api": {
        "version": "0.1.0",
        "dependencies": 4,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "axvisor_api",
              "kind": "lib",
              "binary_name": "axvisor_api",
              "testcases": [
                {
                  "name": "test::test_memory",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                },
                {
                  "name": "test::test_memory_phys_frame",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "error: 'cargo-miri' is not installed for the toolchain 'nightly-2025-05-20-x86_64-unknown-linux-gnu'.\nTo install, run `rustup component add --toolchain nightly-2025-05-20-x86_64-unknown-linux-gnu miri`\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 6
            }
          ],
          "failed": 0,
          "duration_ms": 6,
          "pkg_tests_count": 2,
          "workspace_tests_count": 2
        },
        "tests": 0,
        "examples": 1,
        "benches": 0,
        "authors": [
          "Su Mingxian <aarkegz@gmail.com>"
        ],
        "description": "Basic API for components of the Hypervisor on ArceOS",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "axvisor",
          "api",
          "embedded"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-28T05:46:43Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "axvisor_api_proc": {
        "version": "0.1.0",
        "dependencies": 4,
        "lib": false,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Su Mingxian <aarkegz@gmail.com>"
        ],
        "description": "Procedural macros for the `axvisor_api` crate",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "axvisor",
          "api",
          "embedded",
          "macros"
        ],
        "categories": [
          "development-tools::procedural-macro-helpers"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-28T05:46:43Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "arceos-hypervisor",
    "repo": "riscv_vcpu",
    "timestamp": {
      "start": 1752371525640,
      "end": 1753754319898
    },
    "pkgs": {
      "riscv_vcpu": {
        "version": "0.1.0",
        "dependencies": 18,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [],
        "description": "",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 88,
        "last_commit_time": "2025-07-12T15:01:44Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "arceos-hypervisor",
    "repo": "x86_vcpu",
    "timestamp": {
      "start": 1753581418590,
      "end": 1753754320103
    },
    "pkgs": {
      "x86_vcpu": {
        "version": "0.1.0",
        "dependencies": 19,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "x86_vcpu",
              "kind": "lib",
              "binary_name": "x86_vcpu",
              "testcases": [
                {
                  "name": "msr::tests::test_fs_gs_base_msr_values",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "msr::tests::test_msr_as_u32_conversion",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "msr::tests::test_msr_copy_clone",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "msr::tests::test_msr_debug",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "msr::tests::test_msr_enum_values",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "msr::tests::test_msr_read_write_trait",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "msr::tests::test_system_call_msr_values",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "msr::tests::test_vmx_msr_ranges",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_r10",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_r11",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_r12",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_r13",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_r14",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_r15",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_r8",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_r9",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_rax",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_rbp",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_rbx",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_rcx",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_rdi",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_rdx",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "regs::accessors::test::test_read_write_on_reg_rsi",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_utils::tests::test_mock_allocator",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::percpu::tests::test_multiple_cpu_states_independence",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::percpu::tests::test_vmx_per_cpu_state_debug",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::percpu::tests::test_vmx_per_cpu_state_default_values",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::percpu::tests::test_vmx_per_cpu_state_new",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::percpu::tests::test_vmx_per_cpu_state_size",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_debug_implementations",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.04s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/x86_vcpu-22a1f51880a00623)\nwarning: unreachable expression\n    --> src/vmx/vcpu.rs:1061:9\n     |\n1058 |         unimplemented!(\"apic access\");\n     |         ----------------------------- any code following this expression is unreachable\n...\n1061 |         self.advance_rip(exit_info.exit_instruction_length as _)\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable expression\n     |\n     = note: `#[warn(unreachable_code)]` on by default\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:879:9\n    |\n879 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n905 |         vmx_entry_with!(\"vmlaunch\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: `#[warn(unused_unsafe)]` on by default\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:879:9\n    |\n879 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n913 |         vmx_entry_with!(\"vmresume\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:923:9\n    |\n923 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n\nwarning: unused variable: `write`\n    --> src/vmx/vcpu.rs:1046:13\n     |\n1046 |         let write = match apic_access_exit_info.access_type {\n     |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_write`\n     |\n     = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `exit_info`\n    --> src/vmx/vcpu.rs:1043:38\n     |\n1043 |     fn handle_apic_access(&mut self, exit_info: &VmxExitInfo) -> AxResult {\n     |                                      ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exit_info`\n\nwarning: integer-to-pointer cast\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/src/addr.rs:491:9\n    |\n491 |         self.0 as *mut u8\n    |         ^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `vmx::structs::t`:\n    = note: inside `memory_addr::VirtAddr::as_mut_ptr` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/src/addr.rs:491:9: 491:26\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::as_mut_ptr` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:58:9: 58:57\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::fill` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:41: 63:58\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::alloc_zero` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:34:9: 34:18\nnote: inside `vmx::structs::IOBitmap::<test_utils::mock::MockMmHal>::passthrough_all`\n   --> src/vmx/structs.rs:52:32\n    |\n52  |             io_bitmap_a_frame: PhysFrame::alloc_zero()?,\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `vmx::structs::tests::test_debug_implementations`\n   --> src/vmx/structs.rs:458:25\n    |\n458 |         let io_bitmap = IOBitmap::<MockMmHal>::passthrough_all().unwrap();\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/vmx/structs.rs:453:36\n    |\n452 |     #[test]\n    |     ------- in this procedural macro expansion\n453 |     fn test_debug_implementations() {\n    |                                    ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc270[0x8], but no exposed tags have suitable permission in the borrow stack for this location\n   --> /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:18\n    |\n63  |         unsafe { core::ptr::write_bytes(self.as_mut_ptr(), byte, PAGE_SIZE) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc270[0x8..0x1008]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n    = note: BACKTRACE on thread `vmx::structs::t`:\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::fill` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:18: 63:76\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::alloc_zero` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:34:9: 34:18\nnote: inside `vmx::structs::IOBitmap::<test_utils::mock::MockMmHal>::passthrough_all`\n   --> src/vmx/structs.rs:52:32\n    |\n52  |             io_bitmap_a_frame: PhysFrame::alloc_zero()?,\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `vmx::structs::tests::test_debug_implementations`\n   --> src/vmx/structs.rs:458:25\n    |\n458 |         let io_bitmap = IOBitmap::<MockMmHal>::passthrough_all().unwrap();\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/vmx/structs.rs:453:36\n    |\n452 |     #[test]\n    |     ------- in this procedural macro expansion\n453 |     fn test_debug_implementations() {\n    |                                    ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 7 warnings emitted\n\nerror: test failed, to rerun pass `-p x86_vcpu --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-hypervisor/x86_vcpu/target/miri/x86_64-unknown-linux-gnu/debug/deps/x86_vcpu-22a1f51880a00623 x86_vcpu 'vmx::structs::tests::test_debug_implementations'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_ept_pointer_creation",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_ept_pointer_flags",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_ept_pointer_from_table_phys",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_ept_pointer_from_unaligned_addr",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_ept_pointer_getters",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_feature_control_flags",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_io_bitmap_creation",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.04s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/x86_vcpu-22a1f51880a00623)\nwarning: unreachable expression\n    --> src/vmx/vcpu.rs:1061:9\n     |\n1058 |         unimplemented!(\"apic access\");\n     |         ----------------------------- any code following this expression is unreachable\n...\n1061 |         self.advance_rip(exit_info.exit_instruction_length as _)\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable expression\n     |\n     = note: `#[warn(unreachable_code)]` on by default\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:879:9\n    |\n879 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n905 |         vmx_entry_with!(\"vmlaunch\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: `#[warn(unused_unsafe)]` on by default\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:879:9\n    |\n879 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n913 |         vmx_entry_with!(\"vmresume\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:923:9\n    |\n923 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n\nwarning: unused variable: `write`\n    --> src/vmx/vcpu.rs:1046:13\n     |\n1046 |         let write = match apic_access_exit_info.access_type {\n     |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_write`\n     |\n     = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `exit_info`\n    --> src/vmx/vcpu.rs:1043:38\n     |\n1043 |     fn handle_apic_access(&mut self, exit_info: &VmxExitInfo) -> AxResult {\n     |                                      ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exit_info`\n\nwarning: integer-to-pointer cast\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/src/addr.rs:491:9\n    |\n491 |         self.0 as *mut u8\n    |         ^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `vmx::structs::t`:\n    = note: inside `memory_addr::VirtAddr::as_mut_ptr` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/src/addr.rs:491:9: 491:26\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::as_mut_ptr` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:58:9: 58:57\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::fill` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:41: 63:58\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::alloc_zero` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:34:9: 34:18\nnote: inside `vmx::structs::IOBitmap::<test_utils::mock::MockMmHal>::passthrough_all`\n   --> src/vmx/structs.rs:52:32\n    |\n52  |             io_bitmap_a_frame: PhysFrame::alloc_zero()?,\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `vmx::structs::tests::test_io_bitmap_creation`\n   --> src/vmx/structs.rs:336:34\n    |\n336 |         let passthrough_bitmap = IOBitmap::<MockMmHal>::passthrough_all();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/vmx/structs.rs:331:33\n    |\n330 |     #[test]\n    |     ------- in this procedural macro expansion\n331 |     fn test_io_bitmap_creation() {\n    |                                 ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc270[0x8], but no exposed tags have suitable permission in the borrow stack for this location\n   --> /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:18\n    |\n63  |         unsafe { core::ptr::write_bytes(self.as_mut_ptr(), byte, PAGE_SIZE) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc270[0x8..0x1008]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n    = note: BACKTRACE on thread `vmx::structs::t`:\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::fill` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:18: 63:76\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::alloc_zero` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:34:9: 34:18\nnote: inside `vmx::structs::IOBitmap::<test_utils::mock::MockMmHal>::passthrough_all`\n   --> src/vmx/structs.rs:52:32\n    |\n52  |             io_bitmap_a_frame: PhysFrame::alloc_zero()?,\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `vmx::structs::tests::test_io_bitmap_creation`\n   --> src/vmx/structs.rs:336:34\n    |\n336 |         let passthrough_bitmap = IOBitmap::<MockMmHal>::passthrough_all();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/vmx/structs.rs:331:33\n    |\n330 |     #[test]\n    |     ------- in this procedural macro expansion\n331 |     fn test_io_bitmap_creation() {\n    |                                 ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 7 warnings emitted\n\nerror: test failed, to rerun pass `-p x86_vcpu --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-hypervisor/x86_vcpu/target/miri/x86_64-unknown-linux-gnu/debug/deps/x86_vcpu-22a1f51880a00623 x86_vcpu 'vmx::structs::tests::test_io_bitmap_creation'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_msr_bitmap_creation",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.04s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/x86_vcpu-22a1f51880a00623)\nwarning: unreachable expression\n    --> src/vmx/vcpu.rs:1061:9\n     |\n1058 |         unimplemented!(\"apic access\");\n     |         ----------------------------- any code following this expression is unreachable\n...\n1061 |         self.advance_rip(exit_info.exit_instruction_length as _)\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable expression\n     |\n     = note: `#[warn(unreachable_code)]` on by default\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:879:9\n    |\n879 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n905 |         vmx_entry_with!(\"vmlaunch\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: `#[warn(unused_unsafe)]` on by default\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:879:9\n    |\n879 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n913 |         vmx_entry_with!(\"vmresume\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:923:9\n    |\n923 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n\nwarning: unused variable: `write`\n    --> src/vmx/vcpu.rs:1046:13\n     |\n1046 |         let write = match apic_access_exit_info.access_type {\n     |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_write`\n     |\n     = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `exit_info`\n    --> src/vmx/vcpu.rs:1043:38\n     |\n1043 |     fn handle_apic_access(&mut self, exit_info: &VmxExitInfo) -> AxResult {\n     |                                      ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exit_info`\n\nwarning: integer-to-pointer cast\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/src/addr.rs:491:9\n    |\n491 |         self.0 as *mut u8\n    |         ^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `vmx::structs::t`:\n    = note: inside `memory_addr::VirtAddr::as_mut_ptr` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/src/addr.rs:491:9: 491:26\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::as_mut_ptr` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:58:9: 58:57\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::fill` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:41: 63:58\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::alloc_zero` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:34:9: 34:18\nnote: inside `vmx::structs::MsrBitmap::<test_utils::mock::MockMmHal>::passthrough_all`\n   --> src/vmx/structs.rs:111:20\n    |\n111 |             frame: PhysFrame::alloc_zero()?,\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `vmx::structs::tests::test_msr_bitmap_creation`\n   --> src/vmx/structs.rs:357:34\n    |\n357 |         let passthrough_bitmap = MsrBitmap::<MockMmHal>::passthrough_all();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/vmx/structs.rs:352:34\n    |\n351 |     #[test]\n    |     ------- in this procedural macro expansion\n352 |     fn test_msr_bitmap_creation() {\n    |                                  ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc270[0x8], but no exposed tags have suitable permission in the borrow stack for this location\n   --> /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:18\n    |\n63  |         unsafe { core::ptr::write_bytes(self.as_mut_ptr(), byte, PAGE_SIZE) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc270[0x8..0x1008]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n    = note: BACKTRACE on thread `vmx::structs::t`:\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::fill` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:18: 63:76\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::alloc_zero` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:34:9: 34:18\nnote: inside `vmx::structs::MsrBitmap::<test_utils::mock::MockMmHal>::passthrough_all`\n   --> src/vmx/structs.rs:111:20\n    |\n111 |             frame: PhysFrame::alloc_zero()?,\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `vmx::structs::tests::test_msr_bitmap_creation`\n   --> src/vmx/structs.rs:357:34\n    |\n357 |         let passthrough_bitmap = MsrBitmap::<MockMmHal>::passthrough_all();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/vmx/structs.rs:352:34\n    |\n351 |     #[test]\n    |     ------- in this procedural macro expansion\n352 |     fn test_msr_bitmap_creation() {\n    |                                  ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 7 warnings emitted\n\nerror: test failed, to rerun pass `-p x86_vcpu --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-hypervisor/x86_vcpu/target/miri/x86_64-unknown-linux-gnu/debug/deps/x86_vcpu-22a1f51880a00623 x86_vcpu 'vmx::structs::tests::test_msr_bitmap_creation'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_vmx_basic_constants",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_vmx_region_new",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.04s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/x86_vcpu-22a1f51880a00623)\nwarning: unreachable expression\n    --> src/vmx/vcpu.rs:1061:9\n     |\n1058 |         unimplemented!(\"apic access\");\n     |         ----------------------------- any code following this expression is unreachable\n...\n1061 |         self.advance_rip(exit_info.exit_instruction_length as _)\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable expression\n     |\n     = note: `#[warn(unreachable_code)]` on by default\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:879:9\n    |\n879 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n905 |         vmx_entry_with!(\"vmlaunch\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: `#[warn(unused_unsafe)]` on by default\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:879:9\n    |\n879 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n913 |         vmx_entry_with!(\"vmresume\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:923:9\n    |\n923 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n\nwarning: unused variable: `write`\n    --> src/vmx/vcpu.rs:1046:13\n     |\n1046 |         let write = match apic_access_exit_info.access_type {\n     |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_write`\n     |\n     = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `exit_info`\n    --> src/vmx/vcpu.rs:1043:38\n     |\n1043 |     fn handle_apic_access(&mut self, exit_info: &VmxExitInfo) -> AxResult {\n     |                                      ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exit_info`\n\nwarning: integer-to-pointer cast\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/src/addr.rs:491:9\n    |\n491 |         self.0 as *mut u8\n    |         ^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `vmx::structs::t`:\n    = note: inside `memory_addr::VirtAddr::as_mut_ptr` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/src/addr.rs:491:9: 491:26\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::as_mut_ptr` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:58:9: 58:57\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::fill` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:41: 63:58\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::alloc_zero` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:34:9: 34:18\nnote: inside `vmx::structs::VmxRegion::<test_utils::mock::MockMmHal>::new`\n   --> src/vmx/structs.rs:25:21\n    |\n25  |         let frame = PhysFrame::alloc_zero()?;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `vmx::structs::tests::test_vmx_region_new`\n   --> src/vmx/structs.rs:294:22\n    |\n294 |         let region = VmxRegion::<MockMmHal>::new(0x12345, false);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/vmx/structs.rs:289:29\n    |\n288 |     #[test]\n    |     ------- in this procedural macro expansion\n289 |     fn test_vmx_region_new() {\n    |                             ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc270[0x8], but no exposed tags have suitable permission in the borrow stack for this location\n   --> /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:18\n    |\n63  |         unsafe { core::ptr::write_bytes(self.as_mut_ptr(), byte, PAGE_SIZE) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc270[0x8..0x1008]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n    = note: BACKTRACE on thread `vmx::structs::t`:\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::fill` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:18: 63:76\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::alloc_zero` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:34:9: 34:18\nnote: inside `vmx::structs::VmxRegion::<test_utils::mock::MockMmHal>::new`\n   --> src/vmx/structs.rs:25:21\n    |\n25  |         let frame = PhysFrame::alloc_zero()?;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `vmx::structs::tests::test_vmx_region_new`\n   --> src/vmx/structs.rs:294:22\n    |\n294 |         let region = VmxRegion::<MockMmHal>::new(0x12345, false);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/vmx/structs.rs:289:29\n    |\n288 |     #[test]\n    |     ------- in this procedural macro expansion\n289 |     fn test_vmx_region_new() {\n    |                             ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 7 warnings emitted\n\nerror: test failed, to rerun pass `-p x86_vcpu --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-hypervisor/x86_vcpu/target/miri/x86_64-unknown-linux-gnu/debug/deps/x86_vcpu-22a1f51880a00623 x86_vcpu 'vmx::structs::tests::test_vmx_region_new'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_vmx_region_new_with_shadow",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.04s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/x86_vcpu-22a1f51880a00623)\nwarning: unreachable expression\n    --> src/vmx/vcpu.rs:1061:9\n     |\n1058 |         unimplemented!(\"apic access\");\n     |         ----------------------------- any code following this expression is unreachable\n...\n1061 |         self.advance_rip(exit_info.exit_instruction_length as _)\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable expression\n     |\n     = note: `#[warn(unreachable_code)]` on by default\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:879:9\n    |\n879 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n905 |         vmx_entry_with!(\"vmlaunch\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: `#[warn(unused_unsafe)]` on by default\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:879:9\n    |\n879 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n...\n913 |         vmx_entry_with!(\"vmresume\")\n    |         --------------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `vmx_entry_with` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nwarning: unnecessary `unsafe` block\n   --> src/vmx/vcpu.rs:923:9\n    |\n923 |         unsafe {\n    |         ^^^^^^ unnecessary `unsafe` block\n\nwarning: unused variable: `write`\n    --> src/vmx/vcpu.rs:1046:13\n     |\n1046 |         let write = match apic_access_exit_info.access_type {\n     |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_write`\n     |\n     = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `exit_info`\n    --> src/vmx/vcpu.rs:1043:38\n     |\n1043 |     fn handle_apic_access(&mut self, exit_info: &VmxExitInfo) -> AxResult {\n     |                                      ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_exit_info`\n\nwarning: integer-to-pointer cast\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/src/addr.rs:491:9\n    |\n491 |         self.0 as *mut u8\n    |         ^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `vmx::structs::t`:\n    = note: inside `memory_addr::VirtAddr::as_mut_ptr` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/src/addr.rs:491:9: 491:26\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::as_mut_ptr` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:58:9: 58:57\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::fill` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:41: 63:58\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::alloc_zero` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:34:9: 34:18\nnote: inside `vmx::structs::VmxRegion::<test_utils::mock::MockMmHal>::new`\n   --> src/vmx/structs.rs:25:21\n    |\n25  |         let frame = PhysFrame::alloc_zero()?;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `vmx::structs::tests::test_vmx_region_new_with_shadow`\n   --> src/vmx/structs.rs:310:32\n    |\n310 |         let region_no_shadow = VmxRegion::<MockMmHal>::new(0x12345, false);\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/vmx/structs.rs:305:41\n    |\n304 |     #[test]\n    |     ------- in this procedural macro expansion\n305 |     fn test_vmx_region_new_with_shadow() {\n    |                                         ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc270[0x8], but no exposed tags have suitable permission in the borrow stack for this location\n   --> /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:18\n    |\n63  |         unsafe { core::ptr::write_bytes(self.as_mut_ptr(), byte, PAGE_SIZE) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc270[0x8..0x1008]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n    = note: BACKTRACE on thread `vmx::structs::t`:\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::fill` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:63:18: 63:76\n    = note: inside `axaddrspace::PhysFrame::<test_utils::mock::MockMmHal>::alloc_zero` at /home/runner/.cargo/git/checkouts/axaddrspace-0a115128c9343544/2722b2c/src/frame.rs:34:9: 34:18\nnote: inside `vmx::structs::VmxRegion::<test_utils::mock::MockMmHal>::new`\n   --> src/vmx/structs.rs:25:21\n    |\n25  |         let frame = PhysFrame::alloc_zero()?;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `vmx::structs::tests::test_vmx_region_new_with_shadow`\n   --> src/vmx/structs.rs:310:32\n    |\n310 |         let region_no_shadow = VmxRegion::<MockMmHal>::new(0x12345, false);\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/vmx/structs.rs:305:41\n    |\n304 |     #[test]\n    |     ------- in this procedural macro expansion\n305 |     fn test_vmx_region_new_with_shadow() {\n    |                                         ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 7 warnings emitted\n\nerror: test failed, to rerun pass `-p x86_vcpu --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-hypervisor/x86_vcpu/target/miri/x86_64-unknown-linux-gnu/debug/deps/x86_vcpu-22a1f51880a00623 x86_vcpu 'vmx::structs::tests::test_vmx_region_new_with_shadow'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "vmx::structs::tests::test_vmx_region_uninit",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::test_bit_operations",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::test_constants",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::test_debug_implementations",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::test_general_registers_operations",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::test_get_tr_base_logic",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::test_vm_cpu_mode_enum",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::test_vmx_exit_reason_enum",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::vmx_vcpu_tests::test_access_width_operations",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::vmx_vcpu_tests::test_cpuid_constants",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::vmx_vcpu_tests::test_cr_flags_operations",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::vmx_vcpu_tests::test_edx_eax_operations",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::vmx_vcpu_tests::test_general_registers_clone",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::vmx_vcpu_tests::test_gla2gva_logic",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::vmx_vcpu_tests::test_interrupt_vector_validation",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::vmx_vcpu_tests::test_page_walk_info_struct",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "vmx::vcpu::tests::vmx_vcpu_tests::test_register_bit_operations",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 235
            }
          ],
          "failed": 0,
          "duration_ms": 235,
          "pkg_tests_count": 58,
          "workspace_tests_count": 58
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Mingxian Su <aarkegz@gmail.com>",
          "Keyang Hu <keyang.hu@qq.com>"
        ],
        "description": "x86 Virtual CPU implementation for the Arceos Hypervisor",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "x86",
          "vcpu",
          "hypervisor",
          "arceos"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 75,
        "last_commit_time": "2025-07-26T02:42:51Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "arceos-hypervisor",
    "repo": "x86_vlapic",
    "timestamp": {
      "start": 1753667603586,
      "end": 1753754320322
    },
    "pkgs": {
      "x86_vlapic": {
        "version": "0.1.0",
        "dependencies": 9,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "x86_vlapic",
              "kind": "lib",
              "binary_name": "x86_vlapic",
              "testcases": [
                {
                  "name": "timer::tests::test_apic_timer_creation",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "timer::tests::test_divide_configuration_register",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "timer::tests::test_lvt_register_operations",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "timer::tests::test_multiple_timers",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "timer::tests::test_timer_mask",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "timer::tests::test_timer_mode",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "utils::tests::test_fls32",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "utils::tests::test_fls32_edge_cases",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 32
            }
          ],
          "failed": 0,
          "duration_ms": 32,
          "pkg_tests_count": 8,
          "workspace_tests_count": 8
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Keyang Hu <keyang.hu@qq.com>",
          "Mingxian Su <aarkegz@gmail.com>"
        ],
        "description": "x86 Virtual Local APIC",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 132,
        "last_commit_time": "2025-07-28T00:45:12Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "allocator",
    "timestamp": {
      "start": 1750123483050,
      "end": 1753754320548
    },
    "pkgs": {
      "allocator": {
        "version": "0.1.1",
        "dependencies": 8,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "allocator",
              "kind": "lib",
              "binary_name": "allocator",
              "testcases": [
                {
                  "name": "bitmap::tests::test_bitmap_page_allocator_one_page",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "bitmap::tests::test_bitmap_page_allocator_size_2g",
                  "status": "ok",
                  "duration_ms": 8,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 12
            },
            {
              "id": "allocator::allocator",
              "kind": "test",
              "binary_name": "allocator",
              "testcases": [
                {
                  "name": "buddy_alloc",
                  "status": "ok",
                  "duration_ms": 9534,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p allocator --test allocator -- buddy_alloc\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "slab_alloc",
                  "status": "ok",
                  "duration_ms": 5797,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p allocator --test allocator -- slab_alloc\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "system_alloc",
                  "status": "ok",
                  "duration_ms": 5711,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p allocator --test allocator -- system_alloc\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "tlsf_alloc",
                  "status": "ok",
                  "duration_ms": 5690,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.08s\n     Running tests/allocator.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/allocator-258add7c01eaf739)\nwarning: integer-to-pointer cast\n   --> /tmp/os-checker-plugin-cargo/arceos-org/allocator/src/tlsf.rs:34:56\n    |\n34  |             let pool = core::slice::from_raw_parts_mut(start as *mut u8, size);\n    |                                                        ^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `tlsf_alloc`:\n    = note: inside `<allocator::TlsfByteAllocator as allocator::BaseAllocator>::init` at /tmp/os-checker-plugin-cargo/arceos-org/allocator/src/tlsf.rs:34:56: 34:72\nnote: inside `allocator::AllocatorRc::<allocator::TlsfByteAllocator>::new`\n   --> /tmp/os-checker-plugin-cargo/arceos-org/allocator/src/lib.rs:170:13\n    |\n170 |             inner.init(pool.as_mut_ptr() as usize, pool.len());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> tests/allocator.rs:136:21\n    |\n136 |         let alloc = AllocatorRc::new(TlsfByteAllocator::new(), pool);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `run_test::<{closure@tests/allocator.rs:135:14: 135:20}>`\n   --> tests/allocator.rs:92:5\n    |\n92  |     f(pool);\n    |     ^^^^^^^\nnote: inside `tlsf_alloc`\n   --> tests/allocator.rs:135:5\n    |\n135 | /     run_test(|pool| {\n136 | |         let alloc = AllocatorRc::new(TlsfByteAllocator::new(), pool);\n137 | |         test_alignment(50, &alloc);\n138 | |         test_vec(3_000_000, &alloc);\n...   |\n141 | |         test_btree_map(50_000, &alloc);\n142 | |     })\n    | |______^\nnote: inside closure\n   --> tests/allocator.rs:134:16\n    |\n133 | #[test]\n    | ------- in this procedural macro expansion\n134 | fn tlsf_alloc() {\n    |                ^\n\nwarning: integer-to-pointer cast\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rlsf-0.2.1/src/tlsf.rs:481:49\n    |\n481 |             core::ptr::slice_from_raw_parts_mut(start as *mut u8, len),\n    |                                                 ^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = note: BACKTRACE on thread `tlsf_alloc`:\n    = note: inside `rlsf::tlsf::Tlsf::<'_, u32, u32, 28, 32>::insert_free_block_ptr` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rlsf-0.2.1/src/tlsf.rs:481:49: 481:65\nnote: inside `<allocator::TlsfByteAllocator as allocator::BaseAllocator>::init`\n   --> /tmp/os-checker-plugin-cargo/arceos-org/allocator/src/tlsf.rs:35:13\n    |\n35  | /             self.inner\n36  | |                 .insert_free_block_ptr(NonNull::new(pool).unwrap())\n    | |___________________________________________________________________^\nnote: inside `allocator::AllocatorRc::<allocator::TlsfByteAllocator>::new`\n   --> /tmp/os-checker-plugin-cargo/arceos-org/allocator/src/lib.rs:170:13\n    |\n170 |             inner.init(pool.as_mut_ptr() as usize, pool.len());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> tests/allocator.rs:136:21\n    |\n136 |         let alloc = AllocatorRc::new(TlsfByteAllocator::new(), pool);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `run_test::<{closure@tests/allocator.rs:135:14: 135:20}>`\n   --> tests/allocator.rs:92:5\n    |\n92  |     f(pool);\n    |     ^^^^^^^\nnote: inside `tlsf_alloc`\n   --> tests/allocator.rs:135:5\n    |\n135 | /     run_test(|pool| {\n136 | |         let alloc = AllocatorRc::new(TlsfByteAllocator::new(), pool);\n137 | |         test_alignment(50, &alloc);\n138 | |         test_vec(3_000_000, &alloc);\n...   |\n141 | |         test_btree_map(50_000, &alloc);\n142 | |     })\n    | |______^\nnote: inside closure\n   --> tests/allocator.rs:134:16\n    |\n133 | #[test]\n    | ------- in this procedural macro expansion\n134 | fn tlsf_alloc() {\n    |                ^\n\nwarning: integer-to-pointer cast\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rlsf-0.2.1/src/tlsf.rs:512:52\n    |\n512 |             let mut block = NonNull::new_unchecked(cursor as *mut FreeBlockHdr);\n    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = note: BACKTRACE on thread `tlsf_alloc`:\n    = note: inside `rlsf::tlsf::Tlsf::<'_, u32, u32, 28, 32>::insert_free_block_ptr_aligned` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rlsf-0.2.1/src/tlsf.rs:512:52: 512:79\n    = note: inside `rlsf::tlsf::Tlsf::<'_, u32, u32, 28, 32>::insert_free_block_ptr` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rlsf-0.2.1/src/tlsf.rs:480:24: 482:11\nnote: inside `<allocator::TlsfByteAllocator as allocator::BaseAllocator>::init`\n   --> /tmp/os-checker-plugin-cargo/arceos-org/allocator/src/tlsf.rs:35:13\n    |\n35  | /             self.inner\n36  | |                 .insert_free_block_ptr(NonNull::new(pool).unwrap())\n    | |___________________________________________________________________^\nnote: inside `allocator::AllocatorRc::<allocator::TlsfByteAllocator>::new`\n   --> /tmp/os-checker-plugin-cargo/arceos-org/allocator/src/lib.rs:170:13\n    |\n170 |             inner.init(pool.as_mut_ptr() as usize, pool.len());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> tests/allocator.rs:136:21\n    |\n136 |         let alloc = AllocatorRc::new(TlsfByteAllocator::new(), pool);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `run_test::<{closure@tests/allocator.rs:135:14: 135:20}>`\n   --> tests/allocator.rs:92:5\n    |\n92  |     f(pool);\n    |     ^^^^^^^\nnote: inside `tlsf_alloc`\n   --> tests/allocator.rs:135:5\n    |\n135 | /     run_test(|pool| {\n136 | |         let alloc = AllocatorRc::new(TlsfByteAllocator::new(), pool);\n137 | |         test_alignment(50, &alloc);\n138 | |         test_vec(3_000_000, &alloc);\n...   |\n141 | |         test_btree_map(50_000, &alloc);\n142 | |     })\n    | |______^\nnote: inside closure\n   --> tests/allocator.rs:134:16\n    |\n133 | #[test]\n    | ------- in this procedural macro expansion\n134 | fn tlsf_alloc() {\n    |                ^\n\nerror: Undefined Behavior: trying to retag from <169326> for Unique permission at alloc71395[0x7ffffe0], but that tag does not exist in the borrow stack for this location\n   --> /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs:469:18\n    |\n469 |         unsafe { &mut *self.as_ptr() }\n    |                  ^^^^^^^^^^^^^^^^^^^\n    |                  |\n    |                  trying to retag from <169326> for Unique permission at alloc71395[0x7ffffe0], but that tag does not exist in the borrow stack for this location\n    |                  this error occurs as part of retag at alloc71395[0x7ffffe0..0x7fffff0]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\nhelp: <169326> was created by a SharedReadOnly retag at offsets [0x0..0x10]\n   --> /tmp/os-checker-plugin-cargo/arceos-org/allocator/src/tlsf.rs:35:13\n    |\n35  | /             self.inner\n36  | |                 .insert_free_block_ptr(NonNull::new(pool).unwrap())\n    | |___________________________________________________________________^\n    = note: BACKTRACE (of the first span) on thread `tlsf_alloc`:\n    = note: inside `std::ptr::NonNull::<rlsf::tlsf::UsedBlockHdr>::as_mut::<'_>` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs:469:18: 469:37\n    = note: inside `rlsf::tlsf::Tlsf::<'_, u32, u32, 28, 32>::insert_free_block_ptr_aligned` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rlsf-0.2.1/src/tlsf.rs:527:13: 527:36\n    = note: inside `rlsf::tlsf::Tlsf::<'_, u32, u32, 28, 32>::insert_free_block_ptr` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rlsf-0.2.1/src/tlsf.rs:480:24: 482:11\nnote: inside `<allocator::TlsfByteAllocator as allocator::BaseAllocator>::init`\n   --> /tmp/os-checker-plugin-cargo/arceos-org/allocator/src/tlsf.rs:35:13\n    |\n35  | /             self.inner\n36  | |                 .insert_free_block_ptr(NonNull::new(pool).unwrap())\n    | |___________________________________________________________________^\nnote: inside `allocator::AllocatorRc::<allocator::TlsfByteAllocator>::new`\n   --> /tmp/os-checker-plugin-cargo/arceos-org/allocator/src/lib.rs:170:13\n    |\n170 |             inner.init(pool.as_mut_ptr() as usize, pool.len());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> tests/allocator.rs:136:21\n    |\n136 |         let alloc = AllocatorRc::new(TlsfByteAllocator::new(), pool);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `run_test::<{closure@tests/allocator.rs:135:14: 135:20}>`\n   --> tests/allocator.rs:92:5\n    |\n92  |     f(pool);\n    |     ^^^^^^^\nnote: inside `tlsf_alloc`\n   --> tests/allocator.rs:135:5\n    |\n135 | /     run_test(|pool| {\n136 | |         let alloc = AllocatorRc::new(TlsfByteAllocator::new(), pool);\n137 | |         test_alignment(50, &alloc);\n138 | |         test_vec(3_000_000, &alloc);\n...   |\n141 | |         test_btree_map(50_000, &alloc);\n142 | |     })\n    | |______^\nnote: inside closure\n   --> tests/allocator.rs:134:16\n    |\n133 | #[test]\n    | ------- in this procedural macro expansion\n134 | fn tlsf_alloc() {\n    |                ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 3 warnings emitted\n\nerror: test failed, to rerun pass `-p allocator --test allocator`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/allocator/target/miri/x86_64-unknown-linux-gnu/debug/deps/allocator-258add7c01eaf739 tlsf_alloc` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 26732
            }
          ],
          "failed": 0,
          "duration_ms": 26744,
          "pkg_tests_count": 6,
          "workspace_tests_count": 6
        },
        "tests": 1,
        "examples": 0,
        "benches": 1,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Various allocator algorithms in a unified interface",
        "documentation": "https://arceos-org.github.io/allocator",
        "readme": null,
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 14,
        "last_commit_time": "2025-06-16T10:00:46Z",
        "release_count": 1,
        "last_release_size": 4186,
        "last_release_time": "2015-07-09T00:40:40Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "arceos",
    "timestamp": {
      "start": 1753407984858,
      "end": 1753754320754
    },
    "err": "\n   0: Cloning into '/tmp/os-checker-plugin-cargo/arceos-org/arceos'...\n      Error: \n         0: The package `bwbench-client` is not in the repo.\n\n      Location:\n         src/config/deserialization.rs:126\n\n      Backtrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\n      Run with RUST_BACKTRACE=full to include source snippets.\n   0: \n\nLocation:\n   src/repo/os_checker.rs:27\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker_plugin_cargo::cache::cache with key=\"Api { branch: \\\"main\\\", sha: \\\"84b0b37852dc59f76915b0d61f9b3509fd5b5168\\\" }\"\n      at src/cache/mod.rs:60\n   1: os_checker_plugin_cargo::list with user_repo=\"arceos-org/arceos\"\n      at src/main.rs:16\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
  },
  {
    "user": "arceos-org",
    "repo": "arm_gicv2",
    "timestamp": {
      "start": 1740846061694,
      "end": 1753754320942
    },
    "pkgs": {
      "arm_gicv2": {
        "version": "0.1.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "ARM Generic Interrupt Controller version 2 (GICv2) register definitions and basic operations",
        "documentation": "https://docs.rs/arm_gicv2",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "arm",
          "aarch64",
          "gic",
          "interrupt-controller"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": 24,
        "last_commit_time": "2024-07-17T06:34:08Z",
        "release_count": 1,
        "last_release_size": 5493,
        "last_release_time": "2024-07-17T06:34:34Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "arm_pl011",
    "timestamp": {
      "start": 1740846065436,
      "end": 1753754321157
    },
    "pkgs": {
      "arm_pl011": {
        "version": "0.1.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Shiping Yuan <robert_yuan@pku.edu.com>",
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "ARM Uart pl011 register definitions and basic operations",
        "documentation": "https://docs.rs/arm_pl011",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arm",
          "pl011",
          "uart",
          "arceos"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": 22,
        "last_commit_time": "2024-07-17T06:20:30Z",
        "release_count": 1,
        "last_release_size": 3162,
        "last_release_time": "2024-07-17T06:21:28Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "arm_pl031",
    "timestamp": {
      "start": 1740846086345,
      "end": 1753754321367
    },
    "pkgs": {
      "arm_pl031": {
        "version": "0.2.1",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "arm_pl031",
              "kind": "lib",
              "binary_name": "arm_pl031",
              "testcases": [
                {
                  "name": "tests::test_get_timestamp",
                  "status": "ok",
                  "duration_ms": 10,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_set_timestamp",
                  "status": "ok",
                  "duration_ms": 10,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 20
            }
          ],
          "failed": 0,
          "duration_ms": 20,
          "pkg_tests_count": 2,
          "workspace_tests_count": 2
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Keyang Hu <keyang.hu@qq.com>"
        ],
        "description": "System Real Time Clock (RTC) Drivers for aarch64 based on PL031.",
        "documentation": "https://docs.rs/arm_pl031",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "aarch64",
          "rtc",
          "pl031"
        ],
        "categories": [
          "os",
          "hardware-support",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 8,
        "last_commit_time": "2024-07-24T16:38:58Z",
        "release_count": 4,
        "last_release_size": 4185,
        "last_release_time": "2024-07-24T16:40:56Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "axconfig-gen",
    "timestamp": {
      "start": 1752111961689,
      "end": 1753754321580
    },
    "pkgs": {
      "axconfig-gen": {
        "version": "0.2.1",
        "dependencies": 2,
        "lib": true,
        "bin": true,
        "testcases": {
          "tests": [
            {
              "id": "axconfig-gen",
              "kind": "lib",
              "binary_name": "axconfig_gen",
              "testcases": [
                {
                  "name": "tests::integration_test",
                  "status": "ok",
                  "duration_ms": 7,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling utf8parse v0.2.2\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstyle-parse v0.2.7\n   Compiling anstyle-query v1.1.3\n   Compiling anstyle v1.0.11\n   Compiling colorchoice v1.0.4\n   Compiling clap_lex v0.7.5\n   Compiling heck v0.5.0\n   Compiling anstream v0.6.19\n   Compiling strsim v0.11.1\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling clap_builder v4.5.40\n   Compiling toml_datetime v0.6.11\n   Compiling quote v1.0.40\n   Compiling syn v2.0.102\n   Compiling indexmap v2.9.0\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_edit v0.22.27\n   Compiling clap_derive v4.5.40\n   Compiling clap v4.5.40\n   Compiling axconfig-gen v0.2.1 (/tmp/os-checker-plugin-cargo/arceos-org/axconfig-gen/axconfig-gen)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 6.31s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/axconfig_gen-ad8d48b7081ac80d)\nerror: unsupported operation: `open` not available when isolation is enabled\n    --> /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/fs/unix.rs:1185:36\n     |\n1185 |         let fd = cvt_r(|| unsafe { open64(path.as_ptr(), flags, opts.mode as c_int) })?;\n     |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unsupported operation occurred here\n     |\n     = help: set `MIRIFLAGS=-Zmiri-disable-isolation` to disable isolation;\n     = help: or set `MIRIFLAGS=-Zmiri-isolation-error=warn` to make Miri return an error code from isolated operations (if supported for that operation) and continue with a warning\n     = note: BACKTRACE on thread `tests::integrat`:\n     = note: inside closure at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/fs/unix.rs:1185:36: 1185:84\n     = note: inside `std::sys::pal::unix::cvt_r::<i32, {closure@std::sys::fs::unix::File::open_c::{closure#0}}>` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/pal/unix/mod.rs:317:19: 317:22\n     = note: inside `std::sys::fs::unix::File::open_c` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/fs/unix.rs:1185:18: 1185:87\n     = note: inside closure at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/fs/unix.rs:1173:42: 1173:66\n     = note: inside `std::sys::pal::common::small_c_string::run_with_cstr_stack::<std::sys::fs::unix::File>` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/pal/common/small_c_string.rs:48:18: 48:22\n     = note: inside `std::sys::pal::common::small_c_string::run_with_cstr::<std::sys::fs::unix::File>` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/pal/common/small_c_string.rs:28:18: 28:47\n     = note: inside `std::sys::pal::common::small_c_string::run_path_with_cstr::<std::sys::fs::unix::File>` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/pal/common/small_c_string.rs:18:5: 18:58\n     = note: inside `std::sys::fs::unix::File::open` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/sys/fs/unix.rs:1173:9: 1173:67\n     = note: inside `std::fs::OpenOptions::_open` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/fs.rs:1711:9: 1711:42\n     = note: inside `std::fs::OpenOptions::open::<&std::path::Path>` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/fs.rs:1707:9: 1707:34\n     = note: inside `std::fs::File::open::<&std::path::Path>` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/fs.rs:453:9: 453:58\n     = note: inside `std::fs::read_to_string::inner` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/fs.rs:348:24: 348:40\n     = note: inside `std::fs::read_to_string::<&str>` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/fs.rs:355:5: 355:25\nnote: inside `tests::integration_test`\n    --> axconfig-gen/src/tests.rs:184:16\n     |\n184  |     let spec = std::fs::read_to_string(\"../example-configs/defconfig.toml\")?;\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n    --> axconfig-gen/src/tests.rs:183:26\n     |\n182  | #[test]\n     | ------- in this procedural macro expansion\n183  | fn integration_test() -> std::io::Result<()> {\n     |                          ^^^^^^^^^^^^^^^^^^^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p axconfig-gen --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/axconfig-gen/target/miri/x86_64-unknown-linux-gnu/debug/deps/axconfig_gen-ad8d48b7081ac80d axconfig_gen 'tests::integration_test'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_err",
                  "status": "ok",
                  "duration_ms": 6,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_to_rust",
                  "status": "ok",
                  "duration_ms": 7,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_type_infer",
                  "status": "ok",
                  "duration_ms": 9,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_type_match",
                  "status": "ok",
                  "duration_ms": 6,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 35
            }
          ],
          "failed": 0,
          "duration_ms": 35,
          "pkg_tests_count": 5,
          "workspace_tests_count": 6
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "A TOML-based configuration generation tool for ArceOS.",
        "documentation": "https://docs.rs/axconfig-gen",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "config",
          "toml"
        ],
        "categories": [
          "config",
          "parsing",
          "parser-implementations"
        ],
        "rust_version": "1.76.0",
        "diag_total_count": null,
        "last_commit_time": "2025-06-12T18:37:34Z",
        "release_count": 2,
        "last_release_size": 13823,
        "last_release_time": "2025-06-12T18:30:11Z"
      },
      "axconfig-macros": {
        "version": "0.2.1",
        "dependencies": 4,
        "lib": false,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "axconfig-macros::example_config",
              "kind": "test",
              "binary_name": "example_config",
              "testcases": [
                {
                  "name": "test_include_configs",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 5
            }
          ],
          "failed": 0,
          "duration_ms": 5,
          "pkg_tests_count": 1,
          "workspace_tests_count": 6
        },
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Procedural macros for converting TOML format configurations to Rust constant definitions.",
        "documentation": "https://docs.rs/axconfig-macros",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "config",
          "toml"
        ],
        "categories": [
          "development-tools::procedural-macro-helpers",
          "config",
          "parsing",
          "parser-implementations"
        ],
        "rust_version": "1.76.0",
        "diag_total_count": null,
        "last_commit_time": "2025-06-12T18:37:34Z",
        "release_count": 1,
        "last_release_size": 6275,
        "last_release_time": "2025-06-12T18:30:27Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "axcpu",
    "timestamp": {
      "start": 1752630282455,
      "end": 1753754321808
    },
    "pkgs": {
      "axcpu": {
        "version": "0.2.2",
        "dependencies": 15,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yfblock <321353225@qq.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Grow Zheng <hhmcn@outlook.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "hky1999 <keyang.hu@qq.com>",
          "RobertYuan <634954435@qq.com>"
        ],
        "description": "Privileged instruction and structure abstractions for various CPU architectures",
        "documentation": "https://docs.rs/axcpu",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/axcpu",
        "keywords": [
          "arceos",
          "cpu",
          "architecture",
          "hal"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": "1.88.0",
        "diag_total_count": null,
        "last_commit_time": "2025-07-15T02:55:42Z",
        "release_count": 9,
        "last_release_size": 32553,
        "last_release_time": "2025-07-08T15:44:04Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "axdriver_crates",
    "timestamp": {
      "start": 1740846107409,
      "end": 1753754322039
    },
    "pkgs": {
      "axdriver_base": {
        "version": "0.1.2",
        "dependencies": 0,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Common interfaces for all kinds of device drivers",
        "documentation": "https://arceos-org.github.io/axdriver_crates/axdriver_base",
        "readme": null,
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "driver"
        ],
        "categories": [
          "os",
          "no-std",
          "hardware-support"
        ],
        "rust_version": null,
        "diag_total_count": 8,
        "last_commit_time": "2025-03-01T05:45:24Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "axdriver_block": {
        "version": "0.1.2",
        "dependencies": 3,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Common traits and types for block storage drivers",
        "documentation": "https://arceos-org.github.io/axdriver_crates/axdriver_block",
        "readme": null,
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "driver",
          "blk"
        ],
        "categories": [
          "os",
          "no-std",
          "hardware-support"
        ],
        "rust_version": null,
        "diag_total_count": 8,
        "last_commit_time": "2025-03-01T05:45:24Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "axdriver_display": {
        "version": "0.1.2",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Common traits and types for graphics device drivers",
        "documentation": "https://arceos-org.github.io/axdriver_crates/axdriver_display",
        "readme": null,
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "driver",
          "gpu",
          "framebuffer"
        ],
        "categories": [
          "os",
          "no-std",
          "hardware-support"
        ],
        "rust_version": null,
        "diag_total_count": 8,
        "last_commit_time": "2025-03-01T05:45:24Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "axdriver_net": {
        "version": "0.1.2",
        "dependencies": 5,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "ChengXiang Qi <kuangjux@outlook.com>"
        ],
        "description": "Common traits and types for network device (NIC) drivers",
        "documentation": "https://arceos-org.github.io/axdriver_crates/axdriver_net",
        "readme": null,
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "driver",
          "nic"
        ],
        "categories": [
          "os",
          "no-std",
          "hardware-support"
        ],
        "rust_version": null,
        "diag_total_count": 22,
        "last_commit_time": "2025-03-01T05:45:24Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "axdriver_pci": {
        "version": "0.1.2",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Structures and functions for PCI bus operations",
        "documentation": "https://arceos-org.github.io/axdriver_crates/axdriver_pci",
        "readme": null,
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "driver",
          "pci"
        ],
        "categories": [
          "os",
          "no-std",
          "hardware-support"
        ],
        "rust_version": null,
        "diag_total_count": 12,
        "last_commit_time": "2025-03-01T05:45:24Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "axdriver_virtio": {
        "version": "0.1.2",
        "dependencies": 5,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Wrappers of some devices in the `virtio-drivers` crate, that implement traits in the `axdriver_base` series crates",
        "documentation": "https://arceos-org.github.io/axdriver_crates/axdriver_virtio",
        "readme": null,
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "driver",
          "vritio"
        ],
        "categories": [
          "os",
          "no-std",
          "hardware-support"
        ],
        "rust_version": null,
        "diag_total_count": 13,
        "last_commit_time": "2025-03-01T05:45:24Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "axerrno",
    "timestamp": {
      "start": 1740846116421,
      "end": 1753754322281
    },
    "pkgs": {
      "axerrno": {
        "version": "0.1.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "axerrno",
              "kind": "lib",
              "binary_name": "axerrno",
              "testcases": [
                {
                  "name": "tests::test_try_from",
                  "status": "ok",
                  "duration_ms": 18,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 18
            }
          ],
          "failed": 0,
          "duration_ms": 18,
          "pkg_tests_count": 1,
          "workspace_tests_count": 1
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Generic error code representation.",
        "documentation": "https://docs.rs/axerrno",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "errno"
        ],
        "categories": [
          "no-std",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": 16,
        "last_commit_time": "2024-07-17T08:52:27Z",
        "release_count": 1,
        "last_release_size": 8285,
        "last_release_time": "2024-07-17T08:53:16Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "axfs_crates",
    "timestamp": {
      "start": 1752111980914,
      "end": 1753754322534
    },
    "pkgs": {
      "axfs_devfs": {
        "version": "0.1.2",
        "dependencies": 3,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "axfs_devfs",
              "kind": "lib",
              "binary_name": "axfs_devfs",
              "testcases": [
                {
                  "name": "tests::test_devfs",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 5
            }
          ],
          "failed": 0,
          "duration_ms": 5,
          "pkg_tests_count": 1,
          "workspace_tests_count": 3
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Device filesystem used by ArceOS",
        "documentation": "https://docs.rs/axfs_devfs",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "filesystem",
          "devfs"
        ],
        "categories": [
          "os",
          "no-std",
          "filesystem"
        ],
        "rust_version": null,
        "diag_total_count": 11,
        "last_commit_time": "2025-06-30T18:46:26Z",
        "release_count": 3,
        "last_release_size": 5118,
        "last_release_time": "2025-06-30T18:47:50Z"
      },
      "axfs_ramfs": {
        "version": "0.1.2",
        "dependencies": 3,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "axfs_ramfs",
              "kind": "lib",
              "binary_name": "axfs_ramfs",
              "testcases": [
                {
                  "name": "tests::test_ramfs",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 4
            }
          ],
          "failed": 0,
          "duration_ms": 4,
          "pkg_tests_count": 1,
          "workspace_tests_count": 3
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "RAM filesystem used by ArceOS",
        "documentation": "https://docs.rs/axfs_ramfs",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "filesystem",
          "ramfs"
        ],
        "categories": [
          "os",
          "no-std",
          "filesystem"
        ],
        "rust_version": null,
        "diag_total_count": 10,
        "last_commit_time": "2025-06-30T18:46:26Z",
        "release_count": 3,
        "last_release_size": 5204,
        "last_release_time": "2025-06-30T18:47:40Z"
      },
      "axfs_vfs": {
        "version": "0.1.2",
        "dependencies": 3,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "axfs_vfs",
              "kind": "lib",
              "binary_name": "axfs_vfs",
              "testcases": [
                {
                  "name": "path::tests::test_path_canonicalize",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 5
            }
          ],
          "failed": 0,
          "duration_ms": 5,
          "pkg_tests_count": 1,
          "workspace_tests_count": 3
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Virtual filesystem interfaces used by ArceOS",
        "documentation": "https://docs.rs/axfs_vfs",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "filesystem",
          "vfs"
        ],
        "categories": [
          "os",
          "no-std",
          "filesystem"
        ],
        "rust_version": null,
        "diag_total_count": 6,
        "last_commit_time": "2025-06-30T18:46:26Z",
        "release_count": 3,
        "last_release_size": 6041,
        "last_release_time": "2025-06-30T18:47:32Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "axio",
    "timestamp": {
      "start": 1741655490816,
      "end": 1753754322782
    },
    "pkgs": {
      "axio": {
        "version": "0.1.1",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "`std::io`-like I/O traits for `no_std` environment",
        "documentation": "https://docs.rs/axio",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "io",
          "no-std"
        ],
        "categories": [
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 6,
        "last_commit_time": "2025-03-10T16:38:49Z",
        "release_count": 2,
        "last_release_size": 8336,
        "last_release_time": "2025-03-10T16:40:19Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "axmm_crates",
    "timestamp": {
      "start": 1749863945933,
      "end": 1753754322969
    },
    "pkgs": {
      "memory_addr": {
        "version": "0.4.0",
        "dependencies": 0,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "memory_addr",
              "kind": "lib",
              "binary_name": "memory_addr",
              "testcases": [
                {
                  "name": "addr::test::test_addr",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_add_overflow",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_arithmetic",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_checked_arithmetic",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_convert_and_comparison",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_fmt",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_offset_from_overflow",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_offset_from_underflow",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_offset_overflow",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_overflowing_arithmetic",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_sub_addr_overflow",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_sub_underflow",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_addr_wrapping_arithmetic",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_alignment",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "addr::test::test_virt_addr_ptr",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "range::test::test_range",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "range::test::test_range_format",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_align",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 76
            }
          ],
          "failed": 0,
          "duration_ms": 76,
          "pkg_tests_count": 18,
          "workspace_tests_count": 22
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "aarkegz <aarkegz@gmail.com>"
        ],
        "description": "Wrappers and helper functions for physical and virtual addresses",
        "documentation": "https://docs.rs/memory_addr",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "address",
          "virtual-memory"
        ],
        "categories": [
          "os",
          "memory-management",
          "no-std"
        ],
        "rust_version": "1.70.0",
        "diag_total_count": 2,
        "last_commit_time": "2025-06-12T06:54:20Z",
        "release_count": 8,
        "last_release_size": 9301,
        "last_release_time": "2025-06-12T06:59:51Z"
      },
      "memory_set": {
        "version": "0.4.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "memory_set",
              "kind": "lib",
              "binary_name": "memory_set",
              "testcases": [
                {
                  "name": "tests::test_find_free_area",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_map_unmap",
                  "status": "ok",
                  "duration_ms": 9,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_protect",
                  "status": "ok",
                  "duration_ms": 6,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_unmap_split",
                  "status": "ok",
                  "duration_ms": 6,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 26
            }
          ],
          "failed": 0,
          "duration_ms": 26,
          "pkg_tests_count": 4,
          "workspace_tests_count": 22
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "aarkegz <aarkegz@gmail.com>"
        ],
        "description": "Data structures and operations for managing memory mappings",
        "documentation": "https://docs.rs/memory_set",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "virtual-memory",
          "memory-area",
          "mmap"
        ],
        "categories": [
          "os",
          "memory-management",
          "no-std"
        ],
        "rust_version": "1.70.0",
        "diag_total_count": 6,
        "last_commit_time": "2025-06-12T06:54:20Z",
        "release_count": 5,
        "last_release_size": 7937,
        "last_release_time": "2025-06-12T07:00:01Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "axplat_crates",
    "timestamp": {
      "start": 1752889380510,
      "end": 1753754323195
    },
    "pkgs": {
      "axplat": {
        "version": "0.1.0",
        "dependencies": 7,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "This crate provides a unified abstraction layer for diverse hardware platforms.",
        "documentation": "https://docs.rs/axplat",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "os",
          "hal",
          "embedded"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 1,
        "last_release_size": 9152,
        "last_release_time": "2025-07-02T05:52:57Z"
      },
      "axplat-aarch64-bsta1000b": {
        "version": "0.1.0",
        "dependencies": 8,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "Implementation of `axplat` hardware abstraction layer for Black Sesame Technology A1000b SoC.",
        "documentation": "https://docs.rs/axplat-aarch64-bsta1000b",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "os",
          "hal",
          "embedded",
          "aarch64"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 1,
        "last_release_size": 13284,
        "last_release_time": "2025-07-02T08:33:06Z"
      },
      "axplat-aarch64-peripherals": {
        "version": "0.1.1",
        "dependencies": 11,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "ARM64 common peripheral drivers with `axplat` compatibility",
        "documentation": "https://docs.rs/axplat-aarch64-peripherals",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "os",
          "hal",
          "peripheral",
          "aarch64"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 2,
        "last_release_size": 9657,
        "last_release_time": "2025-07-02T06:29:40Z"
      },
      "axplat-aarch64-phytium-pi": {
        "version": "0.1.0",
        "dependencies": 6,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "Implementation of `axplat` hardware abstraction layer for Phytium Pi board.",
        "documentation": "https://docs.rs/axplat-aarch64-phytium-pi",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "os",
          "hal",
          "embedded",
          "aarch64"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 1,
        "last_release_size": 12248,
        "last_release_time": "2025-07-02T08:29:54Z"
      },
      "axplat-aarch64-qemu-virt": {
        "version": "0.1.0",
        "dependencies": 6,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "Implementation of `axplat` hardware abstraction layer for QEMU ARM64 virtual machine.",
        "documentation": "https://docs.rs/axplat-aarch64-qemu-virt",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "os",
          "hal",
          "embedded",
          "aarch64"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 1,
        "last_release_size": 12236,
        "last_release_time": "2025-07-02T07:43:36Z"
      },
      "axplat-aarch64-raspi": {
        "version": "0.1.0",
        "dependencies": 7,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "Implementation of `axplat` hardware abstraction layer for Raspberry Pi 4B board.",
        "documentation": "https://docs.rs/axplat-aarch64-raspi",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "os",
          "hal",
          "aarch64",
          "raspi"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 1,
        "last_release_size": 11923,
        "last_release_time": "2025-07-02T08:29:32Z"
      },
      "axplat-loongarch64-qemu-virt": {
        "version": "0.1.0",
        "dependencies": 10,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "Implementation of `axplat` hardware abstraction layer for QEMU LoongArch virtual machine.",
        "documentation": "https://docs.rs/axplat-loongarch64-qemu-virt",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "os",
          "hal",
          "embedded",
          "loongarch"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 1,
        "last_release_size": 14154,
        "last_release_time": "2025-07-02T07:54:59Z"
      },
      "axplat-macros": {
        "version": "0.1.0",
        "dependencies": 4,
        "lib": false,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "Procedural macros for the `axplat` crate",
        "documentation": "https://docs.rs/axplat-macros",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "os",
          "hal",
          "embedded",
          "macros"
        ],
        "categories": [
          "development-tools::procedural-macro-helpers"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 1,
        "last_release_size": 3183,
        "last_release_time": "2025-07-02T05:52:44Z"
      },
      "axplat-riscv64-qemu-virt": {
        "version": "0.1.0",
        "dependencies": 7,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "Implementation of `axplat` hardware abstraction layer for QEMU RISC-V virt board.",
        "documentation": "https://docs.rs/axplat-riscv64-qemu-virt",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "os",
          "hal",
          "embedded",
          "riscv"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 1,
        "last_release_size": 13876,
        "last_release_time": "2025-07-02T07:54:16Z"
      },
      "axplat-x86-pc": {
        "version": "0.1.1",
        "dependencies": 17,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "Implementation of `axplat` hardware abstraction layer for x86 Standard PC machine.",
        "documentation": "https://docs.rs/axplat-x86-pc",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "os",
          "hal",
          "x86"
        ],
        "categories": [
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 2,
        "last_release_size": 17477,
        "last_release_time": "2025-07-08T15:53:21Z"
      },
      "cargo-axplat": {
        "version": "0.2.2",
        "dependencies": 5,
        "lib": false,
        "bin": true,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "Manages hardware platform packages using `axplat`",
        "documentation": null,
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "hal",
          "hardware",
          "cargo-subcommand"
        ],
        "categories": [
          "development-tools",
          "development-tools::cargo-plugins",
          "embedded",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": 4,
        "last_release_size": 15258,
        "last_release_time": "2025-07-05T12:29:08Z"
      },
      "hello-kernel": {
        "version": "0.1.0",
        "dependencies": 7,
        "lib": false,
        "bin": true,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "",
        "documentation": null,
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "irq-kernel": {
        "version": "0.1.0",
        "dependencies": 9,
        "lib": false,
        "bin": true,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "",
        "documentation": null,
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "smp-kernel": {
        "version": "0.1.0",
        "dependencies": 12,
        "lib": false,
        "bin": true,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Youjie Zheng <Azure_stars@126.com>",
          "yanjuguang <coolyanjg@163.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "RobertYuan <634954435@qq.com>",
          "hky1999 <keyang.hu@qq.com>"
        ],
        "description": "",
        "documentation": null,
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-18T02:34:43Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "axsched",
    "timestamp": {
      "start": 1752112366979,
      "end": 1753754323398
    },
    "pkgs": {
      "axsched": {
        "version": "0.3.1",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "axsched",
              "kind": "lib",
              "binary_name": "axsched",
              "testcases": [
                {
                  "name": "tests::cfs::bench_remove",
                  "status": "ok",
                  "duration_ms": 39,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p axsched --lib axsched -- tests::cfs::bench_remove\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "tests::cfs::bench_yield",
                  "status": "ok",
                  "duration_ms": 6533,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p axsched --lib axsched -- tests::cfs::bench_yield\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "tests::cfs::test_sched",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::fifo::bench_remove",
                  "status": "ok",
                  "duration_ms": 9,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/axsched-344b8a759048c2cd)\nerror: Undefined Behavior: trying to retag from <4087524> for SharedReadWrite permission at alloc1620649[0x0], but that tag does not exist in the borrow stack for this location\n   --> /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs:437:18\n    |\n437 |         unsafe { &*self.as_ptr().cast_const() }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of retag at alloc1620649[0x0..0x30]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\nhelp: <4087524> was created by a SharedReadOnly retag at offsets [0x29..0x71]\n   --> src/fifo.rs:50:18\n    |\n50  |         unsafe { self.ready_queue.remove(task) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE (of the first span) on thread `tests::fifo::be`:\n    = note: inside `std::ptr::NonNull::<alloc::sync::ArcInner<fifo::FifoTask<usize>>>::as_ref::<'_>` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs:437:18: 437:46\n    = note: inside `std::sync::Arc::<fifo::FifoTask<usize>>::inner` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:1926:18: 1926:35\n    = note: inside `<std::sync::Arc<fifo::FifoTask<usize>> as std::ops::Deref>::deref` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2241:10: 2241:22\nnote: inside `tests::fifo::bench_remove`\n   --> src/tests.rs:69:33\n    |\n69  |                     assert_eq!(*t.inner(), i);\n    |                                 ^^^^^^^^^\n...\n82  | def_test_sched!(fifo, FifoScheduler::<usize>, FifoTask::<usize>);\n    | ---------------------------------------------------------------- in this macro invocation\nnote: inside closure\n   --> src/tests.rs:55:30\n    |\n55  |             fn bench_remove() {\n    |                              ^\n...\n82  | def_test_sched!(fifo, FifoScheduler::<usize>, FifoTask::<usize>);\n    | ---------------------------------------------------------------- in this macro invocation\n    = note: this error originates in the macro `def_test_sched` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p axsched --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/axsched/target/miri/x86_64-unknown-linux-gnu/debug/deps/axsched-344b8a759048c2cd axsched 'tests::fifo::bench_remove'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "tests::fifo::bench_yield",
                  "status": "ok",
                  "duration_ms": 761,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p axsched --lib axsched -- tests::fifo::bench_yield\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "tests::fifo::test_sched",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.02s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/axsched-344b8a759048c2cd)\nerror: Undefined Behavior: trying to retag from <183322> for SharedReadWrite permission at alloc77877[0x0], but that tag does not exist in the borrow stack for this location\n   --> /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs:437:18\n    |\n437 |         unsafe { &*self.as_ptr().cast_const() }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of retag at alloc77877[0x0..0x30]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\nhelp: <183322> was created by a SharedReadOnly retag at offsets [0x29..0x71]\n   --> src/fifo.rs:46:9\n    |\n46  |         self.ready_queue.push_back(task);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: BACKTRACE (of the first span) on thread `tests::fifo::te`:\n    = note: inside `std::ptr::NonNull::<alloc::sync::ArcInner<fifo::FifoTask<usize>>>::as_ref::<'_>` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/non_null.rs:437:18: 437:46\n    = note: inside `std::sync::Arc::<fifo::FifoTask<usize>>::inner` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:1926:18: 1926:35\n    = note: inside `<std::sync::Arc<fifo::FifoTask<usize>> as std::ops::Deref>::deref` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/sync.rs:2241:10: 2241:22\nnote: inside `tests::fifo::test_sched`\n   --> src/tests.rs:18:33\n    |\n18  |                     assert_eq!(*next.inner(), i % NUM_TASKS);\n    |                                 ^^^^^^^^^^^^\n...\n82  | def_test_sched!(fifo, FifoScheduler::<usize>, FifoTask::<usize>);\n    | ---------------------------------------------------------------- in this macro invocation\nnote: inside closure\n   --> src/tests.rs:8:28\n    |\n8   |             fn test_sched() {\n    |                            ^\n...\n82  | def_test_sched!(fifo, FifoScheduler::<usize>, FifoTask::<usize>);\n    | ---------------------------------------------------------------- in this macro invocation\n    = note: this error originates in the macro `def_test_sched` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p axsched --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/axsched/target/miri/x86_64-unknown-linux-gnu/debug/deps/axsched-344b8a759048c2cd axsched 'tests::fifo::test_sched'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "tests::rr::bench_remove",
                  "status": "ok",
                  "duration_ms": 1107,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p axsched --lib axsched -- tests::rr::bench_remove\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "tests::rr::bench_yield",
                  "status": "ok",
                  "duration_ms": 439,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p axsched --lib axsched -- tests::rr::bench_yield\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "tests::rr::test_sched",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 8902
            }
          ],
          "failed": 0,
          "duration_ms": 8902,
          "pkg_tests_count": 9,
          "workspace_tests_count": 9
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "guoweikang <guoweikang.kernel@gmail.com>"
        ],
        "description": "Various scheduler algorithms in a unified interface",
        "documentation": "https://docs.rs/axsched",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [],
        "categories": [],
        "rust_version": "1.76.0",
        "diag_total_count": null,
        "last_commit_time": "2025-07-07T18:40:24Z",
        "release_count": 1,
        "last_release_size": 6394,
        "last_release_time": "2025-07-07T18:37:20Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "cap_access",
    "timestamp": {
      "start": 1740846432452,
      "end": 1753754323618
    },
    "pkgs": {
      "cap_access": {
        "version": "0.1.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Provide basic capability-based access control to objects",
        "documentation": "https://docs.rs/cap_access",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "capabilities",
          "permission",
          "access-control"
        ],
        "categories": [
          "os",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 8,
        "last_commit_time": "2024-07-17T09:24:51Z",
        "release_count": 1,
        "last_release_size": 2923,
        "last_release_time": "2024-07-17T09:25:23Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "cpumask",
    "timestamp": {
      "start": 1740846437925,
      "end": 1753754323840
    },
    "pkgs": {
      "cpumask": {
        "version": "0.1.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "keyang.hu@qq.com"
        ],
        "description": "CPU mask library in Rust",
        "documentation": "https://docs.rs/cpumask",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "cpu-affinity",
          "cpumask"
        ],
        "categories": [
          "os",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 24,
        "last_commit_time": "2024-10-13T09:29:27Z",
        "release_count": 1,
        "last_release_size": 4998,
        "last_release_time": "2024-10-13T09:24:40Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "crate_interface",
    "timestamp": {
      "start": 1748827314061,
      "end": 1753754324058
    },
    "pkgs": {
      "crate_interface": {
        "version": "0.1.4",
        "dependencies": 3,
        "lib": false,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "crate_interface::test_crate_interface",
              "kind": "test",
              "binary_name": "test_crate_interface",
              "testcases": [
                {
                  "name": "test_crate_interface_call",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 3
            }
          ],
          "failed": 0,
          "duration_ms": 3,
          "pkg_tests_count": 1,
          "workspace_tests_count": 1
        },
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Provides a way to define an interface (trait) in a crate, but can implement or use it in any crate.",
        "documentation": "https://docs.rs/crate_interface",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "api",
          "macro"
        ],
        "categories": [
          "development-tools::procedural-macro-helpers",
          "no-std"
        ],
        "rust_version": "1.57.0",
        "diag_total_count": null,
        "last_commit_time": "2025-06-01T05:24:18Z",
        "release_count": 5,
        "last_release_size": 5058,
        "last_release_time": "2025-01-18T14:08:08Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "ctor_bare",
    "timestamp": {
      "start": 1752112394464,
      "end": 1753754324264
    },
    "pkgs": {
      "ctor_bare": {
        "version": "0.2.1",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "ctor_bare::test_ctor",
              "kind": "test",
              "binary_name": "test_ctor",
              "testcases": [
                {
                  "name": "test_ctor_bare",
                  "status": "ok",
                  "duration_ms": 9,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n   Compiling ctor_bare_macros v0.2.1\n   Compiling ctor_bare v0.2.1 (/tmp/os-checker-plugin-cargo/arceos-org/ctor_bare/ctor_bare)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 7.40s\n     Running tests/test_ctor.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test_ctor-530f9f7fcb7f744f)\nerror: test failed, to rerun pass `-p ctor_bare --test test_ctor`\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 9
            },
            {
              "id": "ctor_bare::test_empty",
              "kind": "test",
              "binary_name": "test_empty",
              "testcases": [
                {
                  "name": "test_empty",
                  "status": "ok",
                  "duration_ms": 9,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling ctor_bare v0.2.1 (/tmp/os-checker-plugin-cargo/arceos-org/ctor_bare/ctor_bare)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.09s\n     Running tests/test_empty.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test_empty-b1d812bd6ac1ff26)\nwarning: integer-to-pointer cast\n  --> /tmp/os-checker-plugin-cargo/arceos-org/ctor_bare/ctor_bare/src/lib.rs:27:18\n   |\n27 |                 *(ctor_ptr as *const *const core::ffi::c_void),\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n   |\n   = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n   = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n   = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n   = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n   = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n   = note: BACKTRACE on thread `test_empty`:\n   = note: inside `ctor_bare::call_ctors` at /tmp/os-checker-plugin-cargo/arceos-org/ctor_bare/ctor_bare/src/lib.rs:27:18: 27:63\nnote: inside `test_empty`\n  --> ctor_bare/tests/test_empty.rs:6:5\n   |\n6  |     ctor_bare::call_ctors();\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n  --> ctor_bare/tests/test_empty.rs:2:16\n   |\n1  | #[test]\n   | ------- in this procedural macro expansion\n2  | fn test_empty() {\n   |                ^\n\nerror: Undefined Behavior: accessing alloc70390 which contains a function\n  --> /tmp/os-checker-plugin-cargo/arceos-org/ctor_bare/ctor_bare/src/lib.rs:27:17\n   |\n27 |                 *(ctor_ptr as *const *const core::ffi::c_void),\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Undefined Behavior occurred here\n   |\n   = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n   = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n   = note: BACKTRACE on thread `test_empty`:\n   = note: inside `ctor_bare::call_ctors` at /tmp/os-checker-plugin-cargo/arceos-org/ctor_bare/ctor_bare/src/lib.rs:27:17: 27:63\nnote: inside `test_empty`\n  --> ctor_bare/tests/test_empty.rs:6:5\n   |\n6  |     ctor_bare::call_ctors();\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n  --> ctor_bare/tests/test_empty.rs:2:16\n   |\n1  | #[test]\n   | ------- in this procedural macro expansion\n2  | fn test_empty() {\n   |                ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p ctor_bare --test test_empty`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/ctor_bare/target/miri/x86_64-unknown-linux-gnu/debug/deps/test_empty-b1d812bd6ac1ff26 test_empty` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 9
            }
          ],
          "failed": 0,
          "duration_ms": 18,
          "pkg_tests_count": 2,
          "workspace_tests_count": 2
        },
        "tests": 2,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Youjie Zheng <Azure_stars@126.com>"
        ],
        "description": "Register constructor functions for Rust at complie time under no_std.",
        "documentation": "https://docs.rs/ctor_bare",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "constructor",
          "no_std"
        ],
        "categories": [
          "development-tools::procedural-macro-helpers",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-01-25T07:49:28Z",
        "release_count": 4,
        "last_release_size": 3358,
        "last_release_time": "2025-01-25T07:50:41Z"
      },
      "ctor_bare_macros": {
        "version": "0.2.1",
        "dependencies": 3,
        "lib": false,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Youjie Zheng <Azure_stars@126.com>"
        ],
        "description": "Macros for registering constructor functions for Rust under no_std.",
        "documentation": "https://docs.rs/ctor_bare_macros",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "constructor",
          "no_std"
        ],
        "categories": [
          "development-tools::procedural-macro-helpers",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-01-25T07:49:28Z",
        "release_count": 4,
        "last_release_size": 3353,
        "last_release_time": "2025-01-25T07:50:10Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "dw_apb_uart",
    "timestamp": {
      "start": 1752112399661,
      "end": 1753754324477
    },
    "pkgs": {
      "dw_apb_uart": {
        "version": "0.1.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Luoyuan Xiao <xiaoluoyuan@163.com>"
        ],
        "description": "Uart snps,dw-apb-uart driver in Rust for BST A1000b FADA board.",
        "documentation": "https://arceos-org.github.io/dw_apb_uart",
        "readme": null,
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2024-07-10T19:58:09Z",
        "release_count": 1,
        "last_release_size": 2924,
        "last_release_time": "2024-07-11T09:26:24Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "flatten_objects",
    "timestamp": {
      "start": 1752112412590,
      "end": 1753754324686
    },
    "pkgs": {
      "flatten_objects": {
        "version": "0.2.4",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "flatten_objects::test_clone_and_drop",
              "kind": "test",
              "binary_name": "test_clone_and_drop",
              "testcases": [
                {
                  "name": "test_arc",
                  "status": "ok",
                  "duration_ms": 8,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_object",
                  "status": "ok",
                  "duration_ms": 9,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 17
            }
          ],
          "failed": 0,
          "duration_ms": 17,
          "pkg_tests_count": 2,
          "workspace_tests_count": 2
        },
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "Asakura Mizu <asakuramizu111@gmail.com>",
          "Su Mingxian <aarkegz@gmail.com>"
        ],
        "description": "A container that stores numbered objects. Each object can be assigned with a unique ID.",
        "documentation": "https://docs.rs/flatten_objects",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "data-structures"
        ],
        "categories": [
          "no-std",
          "data-structures"
        ],
        "rust_version": "1.85.0",
        "diag_total_count": 1,
        "last_commit_time": "2025-06-30T18:37:00Z",
        "release_count": 6,
        "last_release_size": 4948,
        "last_release_time": "2025-06-30T18:38:23Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "handler_table",
    "timestamp": {
      "start": 1740846476792,
      "end": 1753754324951
    },
    "pkgs": {
      "handler_table": {
        "version": "0.1.2",
        "dependencies": 0,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "A lock-free table of event handlers",
        "documentation": "https://docs.rs/handler_table",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "event",
          "lock-free"
        ],
        "categories": [
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 8,
        "last_commit_time": "2025-01-15T17:13:24Z",
        "release_count": 3,
        "last_release_size": 2899,
        "last_release_time": "2025-01-15T17:14:33Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "int_ratio",
    "timestamp": {
      "start": 1749863959303,
      "end": 1753754325201
    },
    "pkgs": {
      "int_ratio": {
        "version": "0.1.2",
        "dependencies": 0,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "int_ratio",
              "kind": "lib",
              "binary_name": "int_ratio",
              "testcases": [
                {
                  "name": "tests::test_ratio",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_zero",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 8
            },
            {
              "id": "int_ratio::test_int_ratio",
              "kind": "test",
              "binary_name": "test_int_ratio",
              "testcases": [
                {
                  "name": "test_equivalence_of_simplified_ratios",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_inverse_operation",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_max_values",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_multiplication_trunc_vs_round",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_panic_on_inverse_of_regular_zero",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_panic_on_new_with_zero_denominator",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_zero_ratio_behaviors",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 27
            }
          ],
          "failed": 0,
          "duration_ms": 35,
          "pkg_tests_count": 9,
          "workspace_tests_count": 9
        },
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "The type of ratios represented by two integers.",
        "documentation": "https://docs.rs/int_ratio",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "ratio",
          "fraction",
          "integer",
          "approximation"
        ],
        "categories": [
          "mathematics"
        ],
        "rust_version": "1.57.0",
        "diag_total_count": 1,
        "last_commit_time": "2025-06-12T05:25:46Z",
        "release_count": 3,
        "last_release_size": 4833,
        "last_release_time": "2025-06-12T15:15:28Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "kernel_guard",
    "timestamp": {
      "start": 1740846501030,
      "end": 1753754325478
    },
    "pkgs": {
      "kernel_guard": {
        "version": "0.1.2",
        "dependencies": 2,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "RAII wrappers to create a critical section with local IRQs or preemption disabled",
        "documentation": "https://docs.rs/kernel_guard",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "synchronization",
          "preemption"
        ],
        "categories": [
          "os",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 17,
        "last_commit_time": "2025-01-13T12:54:25Z",
        "release_count": 3,
        "last_release_size": 4882,
        "last_release_time": "2025-01-13T14:16:50Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "kspin",
    "timestamp": {
      "start": 1740846556462,
      "end": 1753754325709
    },
    "pkgs": {
      "kspin": {
        "version": "0.1.0",
        "dependencies": 2,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "kspin",
              "kind": "lib",
              "binary_name": "kspin",
              "testcases": [
                {
                  "name": "base::tests::smoke",
                  "status": "ok",
                  "duration_ms": 16,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "base::tests::test_into_inner",
                  "status": "ok",
                  "duration_ms": 16,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "base::tests::test_into_inner_drop",
                  "status": "ok",
                  "duration_ms": 19,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "base::tests::test_mutex_arc_access_in_unwind",
                  "status": "ok",
                  "duration_ms": 16,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "base::tests::test_mutex_arc_nested",
                  "status": "ok",
                  "duration_ms": 15,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "base::tests::test_mutex_force_lock",
                  "status": "ok",
                  "duration_ms": 8,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "base::tests::test_mutex_unsized",
                  "status": "ok",
                  "duration_ms": 15,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 105
            }
          ],
          "failed": 0,
          "duration_ms": 105,
          "pkg_tests_count": 7,
          "workspace_tests_count": 7
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Spinlocks used for kernel space that can disable preemption or IRQs in the critical section.",
        "documentation": "https://docs.rs/kspin",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "synchronization",
          "spinlock",
          "no-irq"
        ],
        "categories": [
          "os",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 8,
        "last_commit_time": "2025-01-20T03:31:03Z",
        "release_count": 1,
        "last_release_size": 5984,
        "last_release_time": "2024-07-17T07:45:50Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "lazyinit",
    "timestamp": {
      "start": 1749604842131,
      "end": 1753754325963
    },
    "pkgs": {
      "lazyinit": {
        "version": "0.2.2",
        "dependencies": 0,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "lazyinit",
              "kind": "lib",
              "binary_name": "lazyinit",
              "testcases": [
                {
                  "name": "tests::lazyinit_basic",
                  "status": "ok",
                  "duration_ms": 5,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::lazyinit_concurrent",
                  "status": "ok",
                  "duration_ms": 16,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::lazyinit_get_mut_unchecked",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::lazyinit_get_unchecked",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::panic_on_deref_before_init",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::panic_on_double_init",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 37
            }
          ],
          "failed": 0,
          "duration_ms": 37,
          "pkg_tests_count": 6,
          "workspace_tests_count": 6
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Initialize a static value lazily.",
        "documentation": "https://docs.rs/lazyinit",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "lazy",
          "initialization",
          "static"
        ],
        "categories": [
          "no-std",
          "rust-patterns"
        ],
        "rust_version": "1.56.1",
        "diag_total_count": 2,
        "last_commit_time": "2025-06-10T17:35:56Z",
        "release_count": 4,
        "last_release_size": 4687,
        "last_release_time": "2025-06-10T17:38:23Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "linked_list_r4l",
    "timestamp": {
      "start": 1740846593304,
      "end": 1753754326246
    },
    "pkgs": {
      "linked_list_r4l": {
        "version": "0.2.1",
        "dependencies": 0,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "linked_list_r4l",
              "kind": "lib",
              "binary_name": "linked_list_r4l",
              "testcases": [
                {
                  "name": "linked_list::tests::test_push_back",
                  "status": "ok",
                  "duration_ms": 21,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling linked_list_r4l v0.2.1 (/tmp/os-checker-plugin-cargo/arceos-org/linked_list_r4l)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.23s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/linked_list_r4l-813127ec5d33deec)\nerror: Undefined Behavior: trying to retag from <295300> for Unique permission at alloc123876[0x0], but that tag only grants SharedReadOnly permission for this location\n    --> /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1157:9\n     |\n1157 |         Box(unsafe { Unique::new_unchecked(raw) }, alloc)\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |         |\n     |         trying to retag from <295300> for Unique permission at alloc123876[0x0], but that tag only grants SharedReadOnly permission for this location\n     |         this error occurs as part of retag at alloc123876[0x0..0x20]\n     |\n     = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n     = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\nhelp: <295300> was created by a SharedReadOnly retag at offsets [0x0..0x8]\n    --> src/raw_list.rs:162:28\n     |\n162  |         let new_ptr = Some(NonNull::from(new));\n     |                            ^^^^^^^^^^^^^^^^^^\n     = note: BACKTRACE (of the first span) on thread `linked_list::te`:\n     = note: inside `std::boxed::Box::<linked_list::tests::Example>::from_raw_in` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1157:9: 1157:58\n     = note: inside `std::boxed::Box::<linked_list::tests::Example>::from_raw` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:1047:18: 1047:48\nnote: inside `<std::boxed::Box<linked_list::tests::Example> as linked_list::Wrapper<linked_list::tests::Example>>::from_pointer`\n    --> src/linked_list.rs:41:18\n     |\n41   |         unsafe { Box::from_raw(ptr.as_ptr()) }\n     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `linked_list::List::<std::boxed::Box<linked_list::tests::Example>>::pop_front`\n    --> src/linked_list.rs:216:23\n     |\n216  |         Some(unsafe { G::Wrapped::from_pointer(front) })\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `<linked_list::List<std::boxed::Box<linked_list::tests::Example>> as std::ops::Drop>::drop`\n    --> src/linked_list.rs:233:15\n     |\n233  |         while self.pop_front().is_some() {}\n     |               ^^^^^^^^^^^^^^^^\n     = note: inside `std::ptr::drop_in_place::<linked_list::List<std::boxed::Box<linked_list::tests::Example>>> - shim(Some(linked_list::List<std::boxed::Box<linked_list::tests::Example>>))` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/ptr/mod.rs:523:1: 523:56\nnote: inside closure\n    --> src/linked_list.rs:342:24\n     |\n341  |     #[test]\n     |     ------- in this procedural macro expansion\n342  |     fn test_push_back() {\n     |                        ^\n     = note: this error originates in the attribute macro `test` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p linked_list_r4l --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/linked_list_r4l/target/miri/x86_64-unknown-linux-gnu/debug/deps/linked_list_r4l-813127ec5d33deec linked_list_r4l 'linked_list::tests::test_push_back'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "raw_list::tests::test_one_insert_after",
                  "status": "ok",
                  "duration_ms": 18,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.01s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/linked_list_r4l-813127ec5d33deec)\nerror: Undefined Behavior: trying to retag from <294217> for SharedReadWrite permission at alloc123355[0x0], but that tag does not exist in the borrow stack for this location\n   --> src/raw_list.rs:357:23\n    |\n357 |         Some(unsafe { &*cur.as_ptr() })\n    |                       ^^^^^^^^^^^^^^\n    |                       |\n    |                       trying to retag from <294217> for SharedReadWrite permission at alloc123355[0x0], but that tag does not exist in the borrow stack for this location\n    |                       this error occurs as part of retag at alloc123355[0x0..0x18]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\nhelp: <294217> was created by a SharedReadWrite retag at offsets [0x0..0x11]\n   --> src/raw_list.rs:149:58\n    |\n149 |         self.insert_after_priv(existing, new_entry, Some(NonNull::from(new)));\n    |                                                          ^^^^^^^^^^^^^^^^^^\nhelp: <294217> was later invalidated at offsets [0x0..0x18] by a Unique retag\n   --> src/raw_list.rs:592:29\n    |\n592 |             v.insert(i + 1, extra);\n    |                             ^^^^^\n    = note: BACKTRACE (of the first span) on thread `raw_list::tests`:\n    = note: inside `raw_list::Cursor::<'_, raw_list::tests::Example>::current` at src/raw_list.rs:357:23: 357:37\nnote: inside `<raw_list::Iterator<'_, raw_list::tests::Example> as std::iter::Iterator>::next`\n   --> src/raw_list.rs:452:19\n    |\n452 |         let ret = self.cursor_front.current()?;\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: inside `<std::iter::Enumerate<raw_list::Iterator<'_, raw_list::tests::Example>> as std::iter::Iterator>::next` at /home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/iter/adapters/enumerate.rs:47:17: 47:33\nnote: inside `raw_list::tests::test_one_insert_after`\n   --> src/raw_list.rs:586:9\n    |\n586 | /         test_each_element(1, 10, |v, list, i, extra| {\n...   |\n592 | |             v.insert(i + 1, extra);\n593 | |         });\n    | |__________^\nnote: inside closure\n   --> src/raw_list.rs:585:31\n    |\n584 |     #[test]\n    |     ------- in this procedural macro expansion\n585 |     fn test_one_insert_after() {\n    |                               ^\n    = note: this error originates in the attribute macro `test` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p linked_list_r4l --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/linked_list_r4l/target/miri/x86_64-unknown-linux-gnu/debug/deps/linked_list_r4l-813127ec5d33deec linked_list_r4l 'raw_list::tests::test_one_insert_after'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "raw_list::tests::test_one_removal",
                  "status": "ok",
                  "duration_ms": 21,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "raw_list::tests::test_push_back",
                  "status": "ok",
                  "duration_ms": 15,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "raw_list::tests::test_push_front",
                  "status": "ok",
                  "duration_ms": 13,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 88
            }
          ],
          "failed": 0,
          "duration_ms": 88,
          "pkg_tests_count": 5,
          "workspace_tests_count": 5
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Wedson Almeida Filho <wedsonaf@google.com>",
          "WeiKang Guo <guoweikang.kernel@gmail.com>"
        ],
        "description": "Linked lists that supports arbitrary removal in constant time",
        "documentation": "https://docs.rs/linked_list_r4l",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "list"
        ],
        "categories": [
          "no-std",
          "rust-patterns"
        ],
        "rust_version": null,
        "diag_total_count": 24,
        "last_commit_time": "2024-10-28T13:25:25Z",
        "release_count": 3,
        "last_release_size": 8930,
        "last_release_time": "2024-10-29T01:57:15Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "page_table_multiarch",
    "timestamp": {
      "start": 1752716740629,
      "end": 1753754326440
    },
    "pkgs": {
      "page_table_entry": {
        "version": "0.5.5",
        "dependencies": 4,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Page table entry definition for various hardware architectures",
        "documentation": "https://docs.rs/page_table_entry",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "paging",
          "page-table",
          "virtual-memory"
        ],
        "categories": [
          "os",
          "hardware-support",
          "memory-management",
          "no-std"
        ],
        "rust_version": "1.85.0",
        "diag_total_count": null,
        "last_commit_time": "2025-07-16T03:02:53Z",
        "release_count": 18,
        "last_release_size": 7356,
        "last_release_time": "2025-07-05T06:39:54Z"
      },
      "page_table_multiarch": {
        "version": "0.5.5",
        "dependencies": 7,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Generic page table structures for various hardware architectures",
        "documentation": "https://docs.rs/page_table_multiarch",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "paging",
          "page-table",
          "virtual-memory"
        ],
        "categories": [
          "os",
          "hardware-support",
          "memory-management",
          "no-std"
        ],
        "rust_version": "1.85.0",
        "diag_total_count": null,
        "last_commit_time": "2025-07-16T03:02:53Z",
        "release_count": 17,
        "last_release_size": 12139,
        "last_release_time": "2025-07-05T06:40:07Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "percpu",
    "timestamp": {
      "start": 1740846619098,
      "end": 1753754326760
    },
    "pkgs": {
      "percpu": {
        "version": "0.2.0",
        "dependencies": 5,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "hky1999 <976929993@qq.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "yufeng <321353225@qq.com>"
        ],
        "description": "Define and access per-CPU data structures",
        "documentation": "https://docs.rs/percpu",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "percpu"
        ],
        "categories": [
          "development-tools::procedural-macro-helpers",
          "no-std"
        ],
        "rust_version": "1.66.0",
        "diag_total_count": 13,
        "last_commit_time": "2025-01-25T13:08:27Z",
        "release_count": 9,
        "last_release_size": 7212,
        "last_release_time": "2025-01-25T13:41:22Z"
      },
      "percpu_macros": {
        "version": "0.2.0",
        "dependencies": 3,
        "lib": false,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>",
          "hky1999 <976929993@qq.com>",
          "Su Mingxian <aarkegz@gmail.com>",
          "yufeng <321353225@qq.com>"
        ],
        "description": "Macros to define and access a per-CPU data structure",
        "documentation": "https://docs.rs/percpu_macros",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "percpu"
        ],
        "categories": [
          "development-tools::procedural-macro-helpers",
          "no-std"
        ],
        "rust_version": "1.66.0",
        "diag_total_count": 5,
        "last_commit_time": "2025-01-25T13:08:27Z",
        "release_count": 9,
        "last_release_size": 6949,
        "last_release_time": "2025-01-25T13:41:07Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "riscv_goldfish",
    "timestamp": {
      "start": 1752112431984,
      "end": 1753754326990
    },
    "pkgs": {
      "riscv_goldfish": {
        "version": "0.1.1",
        "dependencies": 0,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Keyang Hu <keyang.hu@qq.com>"
        ],
        "description": "System Real Time Clock (RTC) Drivers for riscv based on goldfish.",
        "documentation": "https://docs.rs/riscv_goldfish",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "riscv",
          "rtc"
        ],
        "categories": [
          "os",
          "hardware-support",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2024-07-15T15:41:29Z",
        "release_count": 2,
        "last_release_size": 2686,
        "last_release_time": "2024-07-15T15:44:26Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "riscv_plic",
    "timestamp": {
      "start": 1752112437079,
      "end": 1753754327209
    },
    "pkgs": {
      "riscv_plic": {
        "version": "0.1.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Keyang Hu <keyang.hu@qq.com>"
        ],
        "description": "RISC-V platform-level interrupt controller (PLIC) register definitions and basic operations",
        "documentation": "https://docs.rs/riscv_plic",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "riscv",
          "riscv64",
          "plic",
          "interrupt-controller"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support",
          "os"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2024-12-18T06:10:25Z",
        "release_count": 1,
        "last_release_size": 4415,
        "last_release_time": "2024-12-18T06:08:08Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "slab_allocator",
    "timestamp": {
      "start": 1752112462039,
      "end": 1753754327446
    },
    "pkgs": {
      "slab_allocator": {
        "version": "0.3.1",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "slab_allocator",
              "kind": "lib",
              "binary_name": "slab_allocator",
              "testcases": [
                {
                  "name": "tests::allocate_and_free_double_usize",
                  "status": "ok",
                  "duration_ms": 22,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling buddy_system_allocator v0.10.0\n   Compiling slab_allocator v0.3.1 (/tmp/os-checker-plugin-cargo/arceos-org/slab_allocator)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.39s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58)\nwarning: integer-to-pointer cast\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65\n   |\n94 |             self.free_list[size.trailing_zeros() as usize].push(current_start as *mut usize);\n   |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n   |\n   = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n   = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n   = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n   = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n   = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n   = note: BACKTRACE on thread `tests::allocate`:\n   = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65: 94:92\n   = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n  --> src/lib.rs:82:17\n   |\n82 |                 buddy.init(heap_start_addr, heap_size);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_heap`\n  --> src/tests.rs:22:25\n   |\n22 |     let heap = unsafe { Heap::new(&test_heap.heap_space[0] as *const u8 as usize, HEAP_SIZE) };\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::allocate_and_free_double_usize`\n  --> src/tests.rs:58:20\n   |\n58 |     let mut heap = new_heap();\n   |                    ^^^^^^^^^^\nnote: inside closure\n  --> src/tests.rs:57:36\n   |\n56 | #[test]\n   | ------- in this procedural macro expansion\n57 | fn allocate_and_free_double_usize() {\n   |                                    ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc76275[0x0], but no exposed tags have suitable permission in the borrow stack for this location\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9\n   |\n34 |         *item = self.head as usize;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc76275[0x0..0x8]\n   |\n   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n   = note: BACKTRACE on thread `tests::allocate`:\n   = note: inside `buddy_system_allocator::linked_list::LinkedList::push` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9: 34:35\n   = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:13: 94:93\n   = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n  --> src/lib.rs:82:17\n   |\n82 |                 buddy.init(heap_start_addr, heap_size);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_heap`\n  --> src/tests.rs:22:25\n   |\n22 |     let heap = unsafe { Heap::new(&test_heap.heap_space[0] as *const u8 as usize, HEAP_SIZE) };\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::allocate_and_free_double_usize`\n  --> src/tests.rs:58:20\n   |\n58 |     let mut heap = new_heap();\n   |                    ^^^^^^^^^^\nnote: inside closure\n  --> src/tests.rs:57:36\n   |\n56 | #[test]\n   | ------- in this procedural macro expansion\n57 | fn allocate_and_free_double_usize() {\n   |                                    ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p slab_allocator --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/slab_allocator/target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58 slab_allocator 'tests::allocate_and_free_double_usize'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "tests::allocate_double_usize",
                  "status": "ok",
                  "duration_ms": 16,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.03s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58)\nwarning: integer-to-pointer cast\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65\n   |\n94 |             self.free_list[size.trailing_zeros() as usize].push(current_start as *mut usize);\n   |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n   |\n   = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n   = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n   = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n   = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n   = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n   = note: BACKTRACE on thread `tests::allocate`:\n   = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65: 94:92\n   = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n  --> src/lib.rs:82:17\n   |\n82 |                 buddy.init(heap_start_addr, heap_size);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_heap`\n  --> src/tests.rs:22:25\n   |\n22 |     let heap = unsafe { Heap::new(&test_heap.heap_space[0] as *const u8 as usize, HEAP_SIZE) };\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::allocate_double_usize`\n  --> src/tests.rs:49:20\n   |\n49 |     let mut heap = new_heap();\n   |                    ^^^^^^^^^^\nnote: inside closure\n  --> src/tests.rs:48:27\n   |\n47 | #[test]\n   | ------- in this procedural macro expansion\n48 | fn allocate_double_usize() {\n   |                           ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc77453[0x0], but no exposed tags have suitable permission in the borrow stack for this location\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9\n   |\n34 |         *item = self.head as usize;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc77453[0x0..0x8]\n   |\n   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n   = note: BACKTRACE on thread `tests::allocate`:\n   = note: inside `buddy_system_allocator::linked_list::LinkedList::push` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9: 34:35\n   = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:13: 94:93\n   = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n  --> src/lib.rs:82:17\n   |\n82 |                 buddy.init(heap_start_addr, heap_size);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_heap`\n  --> src/tests.rs:22:25\n   |\n22 |     let heap = unsafe { Heap::new(&test_heap.heap_space[0] as *const u8 as usize, HEAP_SIZE) };\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::allocate_double_usize`\n  --> src/tests.rs:49:20\n   |\n49 |     let mut heap = new_heap();\n   |                    ^^^^^^^^^^\nnote: inside closure\n  --> src/tests.rs:48:27\n   |\n47 | #[test]\n   | ------- in this procedural macro expansion\n48 | fn allocate_double_usize() {\n   |                           ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p slab_allocator --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/slab_allocator/target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58 slab_allocator 'tests::allocate_double_usize'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "tests::allocate_multiple_4096_blocks",
                  "status": "ok",
                  "duration_ms": 12,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.05s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58)\nwarning: integer-to-pointer cast\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65\n    |\n94  |             self.free_list[size.trailing_zeros() as usize].push(current_start as *mut usize);\n    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `tests::allocate`:\n    = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65: 94:92\n    = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n   --> src/lib.rs:82:17\n    |\n82  |                 buddy.init(heap_start_addr, heap_size);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_big_heap`\n   --> src/tests.rs:31:9\n    |\n31  | /         Heap::new(\n32  | |             &test_heap.heap_space[0] as *const u8 as usize,\n33  | |             BIG_HEAP_SIZE,\n34  | |         )\n    | |_________^\nnote: inside `tests::allocate_multiple_4096_blocks`\n   --> src/tests.rs:136:20\n    |\n136 |     let mut heap = new_big_heap();\n    |                    ^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/tests.rs:135:35\n    |\n134 | #[test]\n    | ------- in this procedural macro expansion\n135 | fn allocate_multiple_4096_blocks() {\n    |                                   ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc76687[0x0], but no exposed tags have suitable permission in the borrow stack for this location\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9\n    |\n34  |         *item = self.head as usize;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc76687[0x0..0x8]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n    = note: BACKTRACE on thread `tests::allocate`:\n    = note: inside `buddy_system_allocator::linked_list::LinkedList::push` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9: 34:35\n    = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:13: 94:93\n    = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n   --> src/lib.rs:82:17\n    |\n82  |                 buddy.init(heap_start_addr, heap_size);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_big_heap`\n   --> src/tests.rs:31:9\n    |\n31  | /         Heap::new(\n32  | |             &test_heap.heap_space[0] as *const u8 as usize,\n33  | |             BIG_HEAP_SIZE,\n34  | |         )\n    | |_________^\nnote: inside `tests::allocate_multiple_4096_blocks`\n   --> src/tests.rs:136:20\n    |\n136 |     let mut heap = new_big_heap();\n    |                    ^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/tests.rs:135:35\n    |\n134 | #[test]\n    | ------- in this procedural macro expansion\n135 | fn allocate_multiple_4096_blocks() {\n    |                                   ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p slab_allocator --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/slab_allocator/target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58 slab_allocator 'tests::allocate_multiple_4096_blocks'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "tests::allocate_multiple_sizes",
                  "status": "ok",
                  "duration_ms": 16,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.04s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58)\nwarning: integer-to-pointer cast\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65\n   |\n94 |             self.free_list[size.trailing_zeros() as usize].push(current_start as *mut usize);\n   |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n   |\n   = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n   = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n   = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n   = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n   = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n   = note: BACKTRACE on thread `tests::allocate`:\n   = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65: 94:92\n   = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n  --> src/lib.rs:82:17\n   |\n82 |                 buddy.init(heap_start_addr, heap_size);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_heap`\n  --> src/tests.rs:22:25\n   |\n22 |     let heap = unsafe { Heap::new(&test_heap.heap_space[0] as *const u8 as usize, HEAP_SIZE) };\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::allocate_multiple_sizes`\n  --> src/tests.rs:91:20\n   |\n91 |     let mut heap = new_heap();\n   |                    ^^^^^^^^^^\nnote: inside closure\n  --> src/tests.rs:90:29\n   |\n89 | #[test]\n   | ------- in this procedural macro expansion\n90 | fn allocate_multiple_sizes() {\n   |                             ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc76894[0x0], but no exposed tags have suitable permission in the borrow stack for this location\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9\n   |\n34 |         *item = self.head as usize;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc76894[0x0..0x8]\n   |\n   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n   = note: BACKTRACE on thread `tests::allocate`:\n   = note: inside `buddy_system_allocator::linked_list::LinkedList::push` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9: 34:35\n   = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:13: 94:93\n   = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n  --> src/lib.rs:82:17\n   |\n82 |                 buddy.init(heap_start_addr, heap_size);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_heap`\n  --> src/tests.rs:22:25\n   |\n22 |     let heap = unsafe { Heap::new(&test_heap.heap_space[0] as *const u8 as usize, HEAP_SIZE) };\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::allocate_multiple_sizes`\n  --> src/tests.rs:91:20\n   |\n91 |     let mut heap = new_heap();\n   |                    ^^^^^^^^^^\nnote: inside closure\n  --> src/tests.rs:90:29\n   |\n89 | #[test]\n   | ------- in this procedural macro expansion\n90 | fn allocate_multiple_sizes() {\n   |                             ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p slab_allocator --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/slab_allocator/target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58 slab_allocator 'tests::allocate_multiple_sizes'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "tests::allocate_one_4096_block",
                  "status": "ok",
                  "duration_ms": 13,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.03s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58)\nwarning: integer-to-pointer cast\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65\n    |\n94  |             self.free_list[size.trailing_zeros() as usize].push(current_start as *mut usize);\n    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n    |\n    = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n    = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n    = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n    = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n    = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n    = note: BACKTRACE on thread `tests::allocate`:\n    = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65: 94:92\n    = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n   --> src/lib.rs:82:17\n    |\n82  |                 buddy.init(heap_start_addr, heap_size);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_big_heap`\n   --> src/tests.rs:31:9\n    |\n31  | /         Heap::new(\n32  | |             &test_heap.heap_space[0] as *const u8 as usize,\n33  | |             BIG_HEAP_SIZE,\n34  | |         )\n    | |_________^\nnote: inside `tests::allocate_one_4096_block`\n   --> src/tests.rs:121:20\n    |\n121 |     let mut heap = new_big_heap();\n    |                    ^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/tests.rs:120:29\n    |\n119 | #[test]\n    | ------- in this procedural macro expansion\n120 | fn allocate_one_4096_block() {\n    |                             ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc76894[0x0], but no exposed tags have suitable permission in the borrow stack for this location\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9\n    |\n34  |         *item = self.head as usize;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc76894[0x0..0x8]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n    = note: BACKTRACE on thread `tests::allocate`:\n    = note: inside `buddy_system_allocator::linked_list::LinkedList::push` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9: 34:35\n    = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:13: 94:93\n    = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n   --> src/lib.rs:82:17\n    |\n82  |                 buddy.init(heap_start_addr, heap_size);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_big_heap`\n   --> src/tests.rs:31:9\n    |\n31  | /         Heap::new(\n32  | |             &test_heap.heap_space[0] as *const u8 as usize,\n33  | |             BIG_HEAP_SIZE,\n34  | |         )\n    | |_________^\nnote: inside `tests::allocate_one_4096_block`\n   --> src/tests.rs:121:20\n    |\n121 |     let mut heap = new_big_heap();\n    |                    ^^^^^^^^^^^^^^\nnote: inside closure\n   --> src/tests.rs:120:29\n    |\n119 | #[test]\n    | ------- in this procedural macro expansion\n120 | fn allocate_one_4096_block() {\n    |                             ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p slab_allocator --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/slab_allocator/target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58 slab_allocator 'tests::allocate_one_4096_block'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "tests::oom",
                  "status": "ok",
                  "duration_ms": 12,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.03s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58)\nwarning: integer-to-pointer cast\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65\n   |\n94 |             self.free_list[size.trailing_zeros() as usize].push(current_start as *mut usize);\n   |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n   |\n   = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n   = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n   = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n   = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n   = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n   = note: BACKTRACE on thread `tests::oom`:\n   = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65: 94:92\n   = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n  --> src/lib.rs:82:17\n   |\n82 |                 buddy.init(heap_start_addr, heap_size);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_heap`\n  --> src/tests.rs:22:25\n   |\n22 |     let heap = unsafe { Heap::new(&test_heap.heap_space[0] as *const u8 as usize, HEAP_SIZE) };\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::oom`\n  --> src/tests.rs:41:20\n   |\n41 |     let mut heap = new_heap();\n   |                    ^^^^^^^^^^\nnote: inside closure\n  --> src/tests.rs:40:9\n   |\n39 | #[test]\n   | ------- in this procedural macro expansion\n40 | fn oom() {\n   |         ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc78878[0x0], but no exposed tags have suitable permission in the borrow stack for this location\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9\n   |\n34 |         *item = self.head as usize;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc78878[0x0..0x8]\n   |\n   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n   = note: BACKTRACE on thread `tests::oom`:\n   = note: inside `buddy_system_allocator::linked_list::LinkedList::push` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9: 34:35\n   = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:13: 94:93\n   = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n  --> src/lib.rs:82:17\n   |\n82 |                 buddy.init(heap_start_addr, heap_size);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_heap`\n  --> src/tests.rs:22:25\n   |\n22 |     let heap = unsafe { Heap::new(&test_heap.heap_space[0] as *const u8 as usize, HEAP_SIZE) };\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::oom`\n  --> src/tests.rs:41:20\n   |\n41 |     let mut heap = new_heap();\n   |                    ^^^^^^^^^^\nnote: inside closure\n  --> src/tests.rs:40:9\n   |\n39 | #[test]\n   | ------- in this procedural macro expansion\n40 | fn oom() {\n   |         ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p slab_allocator --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/slab_allocator/target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58 slab_allocator 'tests::oom'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "tests::reallocate_double_usize",
                  "status": "ok",
                  "duration_ms": 10,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.03s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58)\nwarning: integer-to-pointer cast\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65\n   |\n94 |             self.free_list[size.trailing_zeros() as usize].push(current_start as *mut usize);\n   |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ integer-to-pointer cast\n   |\n   = help: this program is using integer-to-pointer casts or (equivalently) `ptr::with_exposed_provenance`, which means that Miri might miss pointer bugs in this program\n   = help: see https://doc.rust-lang.org/nightly/std/ptr/fn.with_exposed_provenance.html for more details on that operation\n   = help: to ensure that Miri does not miss bugs in your program, use Strict Provenance APIs (https://doc.rust-lang.org/nightly/std/ptr/index.html#strict-provenance, https://crates.io/crates/sptr) instead\n   = help: you can then set `MIRIFLAGS=-Zmiri-strict-provenance` to ensure you are not relying on `with_exposed_provenance` semantics\n   = help: alternatively, `MIRIFLAGS=-Zmiri-permissive-provenance` disables this warning\n   = note: BACKTRACE on thread `tests::realloca`:\n   = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:65: 94:92\n   = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n  --> src/lib.rs:82:17\n   |\n82 |                 buddy.init(heap_start_addr, heap_size);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_heap`\n  --> src/tests.rs:22:25\n   |\n22 |     let heap = unsafe { Heap::new(&test_heap.heap_space[0] as *const u8 as usize, HEAP_SIZE) };\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::reallocate_double_usize`\n  --> src/tests.rs:72:20\n   |\n72 |     let mut heap = new_heap();\n   |                    ^^^^^^^^^^\nnote: inside closure\n  --> src/tests.rs:71:29\n   |\n70 | #[test]\n   | ------- in this procedural macro expansion\n71 | fn reallocate_double_usize() {\n   |                             ^\n\nerror: Undefined Behavior: attempting a write access using <wildcard> at alloc76894[0x0], but no exposed tags have suitable permission in the borrow stack for this location\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9\n   |\n34 |         *item = self.head as usize;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ this error occurs as part of an access at alloc76894[0x0..0x8]\n   |\n   = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n   = note: BACKTRACE on thread `tests::realloca`:\n   = note: inside `buddy_system_allocator::linked_list::LinkedList::push` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/linked_list.rs:34:9: 34:35\n   = note: inside `buddy_system_allocator::Heap::<32>::add_to_heap` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:94:13: 94:93\n   = note: inside `buddy_system_allocator::Heap::<32>::init` at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/buddy_system_allocator-0.10.0/src/lib.rs:103:9: 103:46\nnote: inside `Heap::new`\n  --> src/lib.rs:82:17\n   |\n82 |                 buddy.init(heap_start_addr, heap_size);\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::new_heap`\n  --> src/tests.rs:22:25\n   |\n22 |     let heap = unsafe { Heap::new(&test_heap.heap_space[0] as *const u8 as usize, HEAP_SIZE) };\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside `tests::reallocate_double_usize`\n  --> src/tests.rs:72:20\n   |\n72 |     let mut heap = new_heap();\n   |                    ^^^^^^^^^^\nnote: inside closure\n  --> src/tests.rs:71:29\n   |\n70 | #[test]\n   | ------- in this procedural macro expansion\n71 | fn reallocate_double_usize() {\n   |                             ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error; 1 warning emitted\n\nerror: test failed, to rerun pass `-p slab_allocator --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/arceos-org/slab_allocator/target/miri/x86_64-unknown-linux-gnu/debug/deps/slab_allocator-78f5ffd783d52d58 slab_allocator 'tests::reallocate_double_usize'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 101
            }
          ],
          "failed": 0,
          "duration_ms": 101,
          "pkg_tests_count": 7,
          "workspace_tests_count": 7
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Robert Węcławski <r.weclawski@gmail.com>",
          "Yiren Zhang <zyr_ms@outlook.com>"
        ],
        "description": "Slab allocator for `no_std` systems. Uses multiple slabs with blocks of different sizes and a linked list for blocks larger than 4096 bytes",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "slab",
          "allocator",
          "no_std",
          "heap",
          "kernel"
        ],
        "categories": [],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2024-07-10T20:00:16Z",
        "release_count": 8,
        "last_release_size": 6035,
        "last_release_time": "2018-09-06T15:07:43Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "timer_list",
    "timestamp": {
      "start": 1740847161768,
      "end": 1753754327675
    },
    "pkgs": {
      "timer_list": {
        "version": "0.1.0",
        "dependencies": 0,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "timer_list",
              "kind": "lib",
              "binary_name": "timer_list",
              "testcases": [
                {
                  "name": "tests::test_timer_list",
                  "status": "ok",
                  "duration_ms": 4041,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "tests::test_timer_list_fn",
                  "status": "ok",
                  "duration_ms": 1029,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 5070
            }
          ],
          "failed": 0,
          "duration_ms": 5070,
          "pkg_tests_count": 2,
          "workspace_tests_count": 2
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "A list of timed events that will be triggered sequentially when the timer expires",
        "documentation": "https://docs.rs/timer_list",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "timer",
          "events"
        ],
        "categories": [
          "no-std",
          "data-structures",
          "date-and-time"
        ],
        "rust_version": null,
        "diag_total_count": 8,
        "last_commit_time": "2024-07-17T07:51:55Z",
        "release_count": 1,
        "last_release_size": 3939,
        "last_release_time": "2024-07-17T07:52:41Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "tuple_for_each",
    "timestamp": {
      "start": 1752112493109,
      "end": 1753754327867
    },
    "pkgs": {
      "tuple_for_each": {
        "version": "0.1.0",
        "dependencies": 3,
        "lib": false,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "tuple_for_each::test_tuple_for_each",
              "kind": "test",
              "binary_name": "test_tuple_for_each",
              "testcases": [
                {
                  "name": "test_enumerate",
                  "status": "ok",
                  "duration_ms": 10,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_enumerate_mut",
                  "status": "ok",
                  "duration_ms": 10,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_for_each",
                  "status": "ok",
                  "duration_ms": 14,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test_for_each_mut",
                  "status": "ok",
                  "duration_ms": 13,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 47
            }
          ],
          "failed": 0,
          "duration_ms": 47,
          "pkg_tests_count": 4,
          "workspace_tests_count": 4
        },
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Yuekai Jia <equation618@gmail.com>"
        ],
        "description": "Provides macros and methods to iterate over the fields of a tuple struct",
        "documentation": "https://docs.rs/tuple_for_each",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "tuple",
          "macro",
          "iterator"
        ],
        "categories": [
          "development-tools::procedural-macro-helpers"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2024-07-17T05:48:29Z",
        "release_count": 1,
        "last_release_size": 3782,
        "last_release_time": "2024-07-17T05:49:29Z"
      }
    }
  },
  {
    "user": "arceos-org",
    "repo": "x86_rtc",
    "timestamp": {
      "start": 1752112501247,
      "end": 1753754328046
    },
    "pkgs": {
      "x86_rtc": {
        "version": "0.1.1",
        "dependencies": 2,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Keyang Hu <keyang.hu@qq.com>"
        ],
        "description": "System Real Time Clock (RTC) Drivers for x86_64 based on CMOS.",
        "documentation": "https://docs.rs/x86_rtc",
        "readme": "README.md",
        "homepage": "https://github.com/arceos-org/arceos",
        "keywords": [
          "arceos",
          "x86_64",
          "rtc"
        ],
        "categories": [
          "os",
          "hardware-support",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-01-05T15:04:06Z",
        "release_count": 2,
        "last_release_size": 4663,
        "last_release_time": "2024-07-15T15:43:08Z"
      }
    }
  },
  {
    "user": "bullhh",
    "repo": "igb_driver",
    "timestamp": {
      "start": 1752112506072,
      "end": 1753754328253
    },
    "pkgs": {
      "igb_driver": {
        "version": "0.1.0",
        "dependencies": 7,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "KuangjuX <kuangjux@outlook.com>"
        ],
        "description": "",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 52,
        "last_commit_time": "2025-07-09T08:05:31Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "drivercraft",
    "repo": "CrabUSB",
    "timestamp": {
      "start": 1753754335064,
      "end": 1753754335074
    },
    "pkgs": {
      "crab-usb": {
        "version": "0.1.0",
        "dependencies": 18,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "dbydd <dbydd@outlook.com>",
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "A simple usb host",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "os",
          "usb",
          "xhci",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 17,
        "last_commit_time": "2025-07-29T01:55:50Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "drivercraft",
    "repo": "aarch64-cpu-ext",
    "timestamp": {
      "start": 1753235234189,
      "end": 1753754335610
    },
    "pkgs": {
      "aarch64-cpu-ext": {
        "version": "0.1.4",
        "dependencies": 2,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "aarch64-cpu-ext",
              "kind": "lib",
              "binary_name": "aarch64_cpu_ext",
              "testcases": [
                {
                  "name": "structures::tte::tests::test_address_extraction_16k_48bit",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "structures::tte::tests::test_address_extraction_16k_52bit",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "structures::tte::tests::test_address_extraction_4k_48bit",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "structures::tte::tests::test_address_extraction_4k_52bit",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "structures::tte::tests::test_address_extraction_64k_48bit",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "structures::tte::tests::test_address_extraction_64k_52bit",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "structures::tte::tests::test_granule_constants",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "structures::tte::tests::test_invalid_tte_address",
                  "status": "ok",
                  "duration_ms": 4,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test::it_works",
                  "status": "ok",
                  "duration_ms": 3,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 35
            }
          ],
          "failed": 0,
          "duration_ms": 35,
          "pkg_tests_count": 9,
          "workspace_tests_count": 9
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "zrufo747@outlook.com"
        ],
        "description": "Extended AArch64 CPU utilities and cache management operations",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "aarch64",
          "arm64",
          "cache",
          "cpu",
          "no-std"
        ],
        "categories": [
          "embedded",
          "hardware-support",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 2,
        "last_commit_time": "2025-07-22T06:22:55Z",
        "release_count": 5,
        "last_release_size": 15640,
        "last_release_time": "2025-07-22T06:23:12Z"
      }
    }
  },
  {
    "user": "drivercraft",
    "repo": "dma-api",
    "timestamp": {
      "start": 1752889391253,
      "end": 1753754336267
    },
    "pkgs": {
      "dma-api": {
        "version": "0.4.3",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Trait for DMA alloc and some collections",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "os",
          "dma"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 3,
        "last_commit_time": "2025-07-18T07:29:59Z",
        "release_count": 21,
        "last_release_size": 5449,
        "last_release_time": "2025-07-18T07:30:13Z"
      }
    }
  },
  {
    "user": "drivercraft",
    "repo": "fdt-parser",
    "timestamp": {
      "start": 1752113765712,
      "end": 1753754336495
    },
    "pkgs": {
      "dtb-tool": {
        "version": "0.1.0",
        "dependencies": 4,
        "lib": false,
        "bin": true,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "Zhourui <zrufo747@outlook.com>"
        ],
        "description": "A pure-Rust `#![no_std]` crate for parsing FDT",
        "documentation": "https://docs.rs/fdt-parser",
        "readme": null,
        "homepage": null,
        "keywords": [
          "devicetree",
          "fdt",
          "dt",
          "dtb"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 12,
        "last_commit_time": "2025-06-24T01:08:26Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "fdt-parser": {
        "version": "0.4.17",
        "dependencies": 2,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "fdt-parser::node",
              "kind": "test",
              "binary_name": "node",
              "testcases": [
                {
                  "name": "test::test_all_compatibles",
                  "status": "ok",
                  "duration_ms": 14,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test::test_chosen",
                  "status": "ok",
                  "duration_ms": 25,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test::test_clocks",
                  "status": "ok",
                  "duration_ms": 17,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_clocks\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_clocks_cell_0",
                  "status": "ok",
                  "duration_ms": 19,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_clocks_cell_0\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_clocks_cell_1",
                  "status": "ok",
                  "duration_ms": 54,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_clocks_cell_1\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_compatibles",
                  "status": "ok",
                  "duration_ms": 9,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_compatibles\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_debugcon",
                  "status": "ok",
                  "duration_ms": 11,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_debugcon\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_debugcon2",
                  "status": "ok",
                  "duration_ms": 53,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_debugcon2\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_find_aliases",
                  "status": "ok",
                  "duration_ms": 16,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "test::test_find_compatible",
                  "status": "ok",
                  "duration_ms": 11,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_find_compatible\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_find_node2",
                  "status": "ok",
                  "duration_ms": 18,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_find_node2\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_find_node_aliases",
                  "status": "ok",
                  "duration_ms": 15,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_find_node_aliases\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_find_nodes",
                  "status": "ok",
                  "duration_ms": 20,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_find_nodes\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_interrupt",
                  "status": "ok",
                  "duration_ms": 19,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_interrupt\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_interrupt2",
                  "status": "ok",
                  "duration_ms": 25,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_interrupt2\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_interrupts",
                  "status": "ok",
                  "duration_ms": 28,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_interrupts\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_pci2",
                  "status": "ok",
                  "duration_ms": 15,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_pci2\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_pci_irq_map",
                  "status": "ok",
                  "duration_ms": 20,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_pci_irq_map\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_pci_irq_map2",
                  "status": "ok",
                  "duration_ms": 22,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_pci_irq_map2\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_pcie",
                  "status": "ok",
                  "duration_ms": 21,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_pcie\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_reg",
                  "status": "ok",
                  "duration_ms": 18,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "cmd=cargo miri test -p fdt-parser --test node -- test::test_reg\nProcess timed out for 1 minutes.",
                  "miri_timeout": true
                },
                {
                  "name": "test::test_str_list",
                  "status": "ok",
                  "duration_ms": 12,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 462
            }
          ],
          "failed": 0,
          "duration_ms": 462,
          "pkg_tests_count": 22,
          "workspace_tests_count": 22
        },
        "tests": 1,
        "examples": 2,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "A crate for parsing FDT",
        "documentation": "https://docs.rs/fdt-parser",
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "devicetree",
          "fdt",
          "dt",
          "dtb"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 31,
        "last_commit_time": "2025-06-24T01:08:26Z",
        "release_count": 35,
        "last_release_size": 17320,
        "last_release_time": "2025-06-24T01:08:39Z"
      }
    }
  },
  {
    "user": "drivercraft",
    "repo": "mbarrier",
    "timestamp": {
      "start": 1752113773347,
      "end": 1753754336740
    },
    "pkgs": {
      "mbarrier": {
        "version": "0.1.3",
        "dependencies": 0,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "mbarrier",
              "kind": "lib",
              "binary_name": "mbarrier",
              "testcases": [
                {
                  "name": "tests::test_barriers_compile",
                  "status": "ok",
                  "duration_ms": 10,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling mbarrier v0.1.3 (/tmp/os-checker-plugin-cargo/drivercraft/mbarrier)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.29s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/mbarrier-da35dc7f51006354)\nerror: unsupported operation: inline assembly is not supported\n   --> src/arch/x86.rs:32:9\n    |\n32  |         asm!(\"sfence\", options(nostack, preserves_flags));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unsupported operation occurred here\n    |\n    = help: this is likely not a bug in the program; it indicates that the program performed an operation that Miri does not support\n    = note: BACKTRACE on thread `tests::test_bar`:\n    = note: inside `arch::x86::wmb_impl` at src/arch/x86.rs:32:9: 32:58\nnote: inside `wmb`\n   --> src/lib.rs:54:5\n    |\n54  |     arch::wmb_impl()\n    |     ^^^^^^^^^^^^^^^^\nnote: inside `tests::test_barriers_compile`\n   --> src/lib.rs:122:9\n    |\n122 |         wmb();\n    |         ^^^^^\nnote: inside closure\n   --> src/lib.rs:119:31\n    |\n118 |     #[test]\n    |     ------- in this procedural macro expansion\n119 |     fn test_barriers_compile() {\n    |                               ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p mbarrier --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/drivercraft/mbarrier/target/miri/x86_64-unknown-linux-gnu/debug/deps/mbarrier-da35dc7f51006354 mbarrier 'tests::test_barriers_compile'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 10
            }
          ],
          "failed": 0,
          "duration_ms": 10,
          "pkg_tests_count": 1,
          "workspace_tests_count": 1
        },
        "tests": 0,
        "examples": 2,
        "benches": 0,
        "authors": [
          "zrufo747@outlook.com"
        ],
        "description": "Cross-platform memory barrier implementations for Rust, inspired by Linux kernel",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "memory",
          "barrier",
          "sync",
          "atomic",
          "kernel"
        ],
        "categories": [
          "concurrency",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": null,
        "last_commit_time": "2025-07-03T00:53:30Z",
        "release_count": 4,
        "last_release_size": 14402,
        "last_release_time": "2025-07-03T00:53:53Z"
      }
    }
  },
  {
    "user": "drivercraft",
    "repo": "nvme",
    "timestamp": {
      "start": 1752113780516,
      "end": 1753754336961
    },
    "pkgs": {
      "nvme-driver": {
        "version": "0.3.1",
        "dependencies": 7,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "nvme driver",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "os",
          "nvme",
          "block",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 10,
        "last_commit_time": "2025-07-09T06:21:56Z",
        "release_count": 4,
        "last_release_size": 30497,
        "last_release_time": "2025-07-09T06:22:21Z"
      }
    }
  },
  {
    "user": "drivercraft",
    "repo": "pcie",
    "timestamp": {
      "start": 1752113787605,
      "end": 1753754337201
    },
    "pkgs": {
      "pcie": {
        "version": "0.3.0",
        "dependencies": 6,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "A simple PCIE driver for enumerating devices.",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "os",
          "pci",
          "pcie",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 11,
        "last_commit_time": "2025-06-17T08:37:24Z",
        "release_count": 8,
        "last_release_size": 8938,
        "last_release_time": "2024-11-28T01:56:14Z"
      }
    }
  },
  {
    "user": "drivercraft",
    "repo": "phytium-mci",
    "timestamp": {
      "start": 1752198213570,
      "end": 1753754337409
    },
    "pkgs": {
      "phytium-mci": {
        "version": "0.1.0",
        "dependencies": 13,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [],
        "description": "",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 881,
        "last_commit_time": "2025-07-03T08:36:31Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "drivercraft",
    "repo": "rdrive",
    "timestamp": {
      "start": 1752113902714,
      "end": 1753754337634
    },
    "pkgs": {
      "enumerate": {
        "version": "0.1.0",
        "dependencies": 3,
        "lib": false,
        "bin": true,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [],
        "description": "",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 13,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 2,
        "last_release_size": 5303,
        "last_release_time": "2019-07-07T16:49:45Z"
      },
      "rdif-base": {
        "version": "0.6.0",
        "dependencies": 5,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "rdif-base",
              "kind": "lib",
              "binary_name": "rdif_base",
              "testcases": [
                {
                  "name": "io::test::test_async_r",
                  "status": "ok",
                  "duration_ms": 13,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "io::test::test_async_r2",
                  "status": "ok",
                  "duration_ms": 11,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "io::test::test_async_w",
                  "status": "ok",
                  "duration_ms": 16,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "io::test::test_r",
                  "status": "ok",
                  "duration_ms": 11,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "io::test::test_w",
                  "status": "ok",
                  "duration_ms": 12,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 63
            }
          ],
          "failed": 0,
          "duration_ms": 63,
          "pkg_tests_count": 5,
          "workspace_tests_count": 12
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Driver Interface base definition.",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 1,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 21,
        "last_release_size": 6218,
        "last_release_time": "2025-06-24T08:05:16Z"
      },
      "rdif-block": {
        "version": "0.5.0",
        "dependencies": 2,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Driver Interface block definition.",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 2,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 5,
        "last_release_size": 2190,
        "last_release_time": "2025-06-24T08:14:37Z"
      },
      "rdif-clk": {
        "version": "0.4.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Driver Interface clk definition.",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 1,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 4,
        "last_release_size": 1910,
        "last_release_time": "2025-06-24T08:14:47Z"
      },
      "rdif-def": {
        "version": "0.2.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Driver Interface base definition.",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 1,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 4,
        "last_release_size": 2316,
        "last_release_time": "2025-05-30T02:59:17Z"
      },
      "rdif-intc": {
        "version": "0.11.0",
        "dependencies": 3,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Driver Interface of interrupt controller.",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 1,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 20,
        "last_release_size": 2685,
        "last_release_time": "2025-06-24T08:14:56Z"
      },
      "rdif-net": {
        "version": "0.1.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Driver Interface net definition.",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 1,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 1,
        "last_release_size": 2059,
        "last_release_time": "2025-06-25T07:30:51Z"
      },
      "rdif-power": {
        "version": "0.6.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Driver Interface of interrupt controller.",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 1,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 7,
        "last_release_size": 1794,
        "last_release_time": "2025-06-24T08:15:06Z"
      },
      "rdif-serial": {
        "version": "0.4.0",
        "dependencies": 4,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Driver Interface base definition.",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 2,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 7,
        "last_release_size": 3225,
        "last_release_time": "2025-06-24T08:15:24Z"
      },
      "rdif-systick": {
        "version": "0.5.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Driver Interface of system timer.",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 1,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 6,
        "last_release_size": 1988,
        "last_release_time": "2025-06-24T08:15:39Z"
      },
      "rdif-timer": {
        "version": "0.5.0",
        "dependencies": 1,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Driver Interface of system timer.",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 1,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 9,
        "last_release_size": 1968,
        "last_release_time": "2025-06-24T08:15:50Z"
      },
      "rdrive": {
        "version": "0.15.3",
        "dependencies": 14,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "rdrive",
              "kind": "lib",
              "binary_name": "rdrive",
              "testcases": [
                {
                  "name": "manager::tests::test_device_container",
                  "status": "ok",
                  "duration_ms": 11,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "manager::tests::test_device_downcast",
                  "status": "ok",
                  "duration_ms": 10,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.05s\n     Running unittests src/lib.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/rdrive-444e717ea2a70970)\nerror: Undefined Behavior: trying to retag from <182361> for Unique permission at alloc77527[0x0], but that tag only grants SharedReadOnly permission for this location\n   --> rdrive/src/lock.rs:196:31\n    |\n196 |         let t2_any = unsafe { &mut *self.ptr }\n    |                               ^^^^^^^^^^^^^^ this error occurs as part of retag at alloc77527[0x0..0x10]\n    |\n    = help: this indicates a potential bug in the program: it performed an invalid operation, but the Stacked Borrows rules it violated are still experimental\n    = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\nhelp: <182361> was created by a SharedReadOnly retag at offsets [0x0..0x10]\n   --> rdrive/src/lock.rs:149:24\n    |\n149 |             Some(v) => v as *const T as *mut T,\n    |                        ^\n    = note: BACKTRACE (of the first span) on thread `manager::tests:`:\n    = note: inside `lock::Device::<driver::intc::Intc>::downcast::<manager::tests::IrqTest>` at rdrive/src/lock.rs:196:31: 196:45\nnote: inside `manager::tests::test_device_downcast`\n   --> rdrive/src/manager.rs:242:26\n    |\n242 |         let intc_typed = weak.downcast::<IrqTest>().unwrap();\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\nnote: inside closure\n   --> rdrive/src/manager.rs:236:30\n    |\n235 |     #[test]\n    |     ------- in this procedural macro expansion\n236 |     fn test_device_downcast() {\n    |                              ^\n\nnote: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p rdrive --lib`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/drivercraft/rdrive/target/miri/x86_64-unknown-linux-gnu/debug/deps/rdrive-444e717ea2a70970 rdrive 'manager::tests::test_device_downcast'` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "manager::tests::test_devices",
                  "status": "ok",
                  "duration_ms": 12,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "manager::tests::test_get_one",
                  "status": "ok",
                  "duration_ms": 13,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "manager::tests::test_inner_type",
                  "status": "ok",
                  "duration_ms": 13,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "manager::tests::test_locked_device",
                  "status": "ok",
                  "duration_ms": 13,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                },
                {
                  "name": "manager::tests::test_not_found",
                  "status": "ok",
                  "duration_ms": 11,
                  "error": null,
                  "miri_pass": true,
                  "miri_output": null,
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 83
            }
          ],
          "failed": 0,
          "duration_ms": 83,
          "pkg_tests_count": 7,
          "workspace_tests_count": 12
        },
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "A dyn driver manager.",
        "documentation": null,
        "readme": "../README.md",
        "homepage": null,
        "keywords": [
          "os",
          "driver"
        ],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 11,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 47,
        "last_release_size": 15905,
        "last_release_time": "2025-06-27T07:34:01Z"
      },
      "rdrive-macros": {
        "version": "0.4.1",
        "dependencies": 3,
        "lib": false,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "macros for rdrive",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [],
        "categories": [
          "embedded",
          "no-std"
        ],
        "rust_version": null,
        "diag_total_count": 2,
        "last_commit_time": "2025-06-27T07:32:03Z",
        "release_count": 6,
        "last_release_size": 2237,
        "last_release_time": "2025-06-24T08:05:26Z"
      }
    }
  },
  {
    "user": "drivercraft",
    "repo": "sdmmc",
    "timestamp": {
      "start": 1752198215574,
      "end": 1753754337865
    },
    "err": "\n   0: 无法读取 cargo metadata 的结果：\n      `cargo metadata` exited with an error:     Updating crates.io index\n          Updating git repository `https://github.com/YanLien/rk3568_clk.git`\n      error: failed to get `rk3568_clk` as a dependency of package `sdmmc v0.1.0 (/tmp/os-checker-plugin-cargo/drivercraft/sdmmc)`\n\n      Caused by:\n        failed to load source for dependency `rk3568_clk`\n\n      Caused by:\n        Unable to update https://github.com/YanLien/rk3568_clk.git#2120c28f\n\n      Caused by:\n        failed to fetch into: /home/runner/.cargo/git/db/rk3568_clk-59c502460d8bd49d\n\n      Caused by:\n        revision 2120c28f91674bece2d1e1dea349919f929e7d89 not found\n\n      Caused by:\n        failed to authenticate when downloading repository\n\n        * attempted to find username/password via git's `credential.helper` support, but failed\n\n        if the git CLI succeeds then `net.git-fetch-with-cli` may help here\n        https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli\n\n      Caused by:\n        failed to acquire username/password from local configuration\n   0: \n\nLocation:\n   src/repo/mod.rs:217\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker_plugin_cargo::cache::cache with key=\"Api { branch: \\\"main\\\", sha: \\\"7ba0222ada46fd5759af24f405780d73581e36fd\\\" }\"\n      at src/cache/mod.rs:60\n   1: os_checker_plugin_cargo::list with user_repo=\"drivercraft/sdmmc\"\n      at src/main.rs:16\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
  },
  {
    "user": "rcore-os",
    "repo": "any-uart",
    "timestamp": {
      "start": 1752113931406,
      "end": 1753754338092
    },
    "pkgs": {
      "any-uart": {
        "version": "0.2.11",
        "dependencies": 5,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "Init early console from device tree, mostly for Arm",
        "documentation": null,
        "readme": "../README.md",
        "homepage": null,
        "keywords": [
          "pl011",
          "8250",
          "no-std",
          "earlycon",
          "dtb"
        ],
        "categories": [
          "no-std",
          "embedded",
          "hardware-support"
        ],
        "rust_version": null,
        "diag_total_count": 4,
        "last_commit_time": "2025-05-23T12:48:37Z",
        "release_count": 14,
        "last_release_size": 6352,
        "last_release_time": "2025-05-23T09:31:03Z"
      },
      "hello": {
        "version": "0.1.0",
        "dependencies": 4,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [],
        "description": "",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 6,
        "last_commit_time": "2025-05-23T12:48:37Z",
        "release_count": 5,
        "last_release_size": 518,
        "last_release_time": "2015-07-09T00:36:16Z"
      }
    }
  },
  {
    "user": "rcore-os",
    "repo": "arm-gic-driver",
    "timestamp": {
      "start": 1753494186464,
      "end": 1753754338299
    },
    "pkgs": {
      "arm-gic-driver": {
        "version": "0.15.0",
        "dependencies": 6,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 0,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "A driver for the Arm Generic Interrupt Controller.",
        "documentation": null,
        "readme": "../README.md",
        "homepage": null,
        "keywords": [
          "arm",
          "aarch64",
          "driver",
          "gic",
          "interrupt-controller"
        ],
        "categories": [
          "embedded",
          "no-std",
          "hardware-support"
        ],
        "rust_version": null,
        "diag_total_count": 34,
        "last_commit_time": "2025-07-25T09:33:38Z",
        "release_count": 32,
        "last_release_size": 33541,
        "last_release_time": "2025-07-25T09:33:52Z"
      },
      "test-base": {
        "version": "0.1.0",
        "dependencies": 7,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [],
        "description": "",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 33,
        "last_commit_time": "2025-07-25T09:33:38Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "test-gicv2": {
        "version": "0.1.0",
        "dependencies": 4,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [],
        "description": "",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 33,
        "last_commit_time": "2025-07-25T09:33:38Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      },
      "test-gicv3": {
        "version": "0.1.0",
        "dependencies": 4,
        "lib": true,
        "bin": false,
        "testcases": null,
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [],
        "description": "",
        "documentation": null,
        "readme": null,
        "homepage": null,
        "keywords": [],
        "categories": [],
        "rust_version": null,
        "diag_total_count": 33,
        "last_commit_time": "2025-07-25T09:33:38Z",
        "release_count": null,
        "last_release_size": null,
        "last_release_time": null
      }
    }
  },
  {
    "user": "rcore-os",
    "repo": "serial-async",
    "timestamp": {
      "start": 1752114034585,
      "end": 1753754338525
    },
    "pkgs": {
      "serial-async": {
        "version": "0.2.0",
        "dependencies": 3,
        "lib": true,
        "bin": false,
        "testcases": {
          "tests": [
            {
              "id": "serial-async::test",
              "kind": "test",
              "binary_name": "test",
              "testcases": [
                {
                  "name": "test_rx_async",
                  "status": "ok",
                  "duration_ms": 259,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling libc v0.2.172\n   Compiling futures-sink v0.3.31\n   Compiling pin-project-lite v0.2.16\n   Compiling futures-core v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling thiserror v2.0.12\n   Compiling autocfg v1.4.0\n   Compiling futures-task v0.3.31\n   Compiling parking_lot_core v0.9.10\n   Compiling lock_api v0.4.12\n   Compiling futures-util v0.3.31\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n   Compiling futures-channel v0.3.31\n   Compiling smallvec v1.15.0\n   Compiling scopeguard v1.2.0\n   Compiling futures-io v0.3.31\n   Compiling cfg-if v1.0.0\n   Compiling spin_on v0.1.1\n   Compiling signal-hook-registry v1.4.5\n   Compiling parking_lot v0.12.3\n   Compiling mio v1.0.4\n   Compiling socket2 v0.5.9\n   Compiling bytes v1.10.1\n   Compiling futures v0.3.31\n   Compiling thiserror-impl v2.0.12\n   Compiling tokio-macros v2.5.0\n   Compiling tokio v1.45.1\n   Compiling rdif-base v0.3.3\n   Compiling rdif-serial v0.1.3\n   Compiling serial-async v0.2.0 (/tmp/os-checker-plugin-cargo/rcore-os/serial-async)\n    Finished `test` profile [unoptimized + debuginfo] target(s) in 14.24s\n     Running tests/test.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test-40e85c9e6a4ad16d)\nerror: test failed, to rerun pass `-p serial-async --test test`\n",
                  "miri_timeout": false
                },
                {
                  "name": "test_take",
                  "status": "ok",
                  "duration_ms": 16,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.09s\n     Running tests/test.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test-40e85c9e6a4ad16d)\nerror: the main thread terminated without waiting for all remaining threads\n\nnote: set `MIRIFLAGS=-Zmiri-ignore-leaks` to disable this check\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p serial-async --test test`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/rcore-os/serial-async/target/miri/x86_64-unknown-linux-gnu/debug/deps/test-40e85c9e6a4ad16d test_take` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                },
                {
                  "name": "test_tx",
                  "status": "ok",
                  "duration_ms": 275,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.04s\n     Running tests/test.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test-40e85c9e6a4ad16d)\nerror: test failed, to rerun pass `-p serial-async --test test`\n",
                  "miri_timeout": false
                },
                {
                  "name": "test_tx_async",
                  "status": "ok",
                  "duration_ms": 686,
                  "error": null,
                  "miri_pass": false,
                  "miri_output": "    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.10s\n     Running tests/test.rs (target/miri/x86_64-unknown-linux-gnu/debug/deps/test-40e85c9e6a4ad16d)\nerror: the main thread terminated without waiting for all remaining threads\n\nnote: set `MIRIFLAGS=-Zmiri-ignore-leaks` to disable this check\n\nerror: aborting due to 1 previous error\n\nerror: test failed, to rerun pass `-p serial-async --test test`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo-miri runner /tmp/os-checker-plugin-cargo/rcore-os/serial-async/target/miri/x86_64-unknown-linux-gnu/debug/deps/test-40e85c9e6a4ad16d test_tx_async` (exit status: 1)\nnote: test exited abnormally; to see the full output pass --nocapture to the harness.\n",
                  "miri_timeout": false
                }
              ],
              "failed": 0,
              "duration_ms": 1236
            }
          ],
          "failed": 0,
          "duration_ms": 1236,
          "pkg_tests_count": 4,
          "workspace_tests_count": 4
        },
        "tests": 1,
        "examples": 0,
        "benches": 0,
        "authors": [
          "周睿 <zrufo747@outlook.com>"
        ],
        "description": "A library that makes creating asynchronous serial drivers even simpler.",
        "documentation": null,
        "readme": "README.md",
        "homepage": null,
        "keywords": [
          "no-std",
          "serial",
          "uart",
          "async"
        ],
        "categories": [
          "no-std",
          "embedded",
          "hardware-support",
          "asynchronous"
        ],
        "rust_version": null,
        "diag_total_count": 3,
        "last_commit_time": "2025-05-26T06:32:33Z",
        "release_count": 2,
        "last_release_size": 8785,
        "last_release_time": "2025-05-26T06:32:49Z"
      }
    }
  }
]