{
  "repo": {
    "user": "Azure-stars",
    "repo": "kernel_elf_parser"
  },
  "data": [
    {
      "user": "Azure-stars",
      "repo": "kernel_elf_parser",
      "pkg": "kernel-elf-parser",
      "count": 10,
      "raw_reports": [
        {
          "file": "src/info.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] possible attempt to add with overflow\n   --> src/info.rs:118:9\n    |\n118 | /         self.elf.header.pt2.ph_offset() as usize\n119 | |             + self.base\n120 | |             + self\n121 | |                 .elf\n...   |\n124 | |                 .map(|ph| ph.virtual_addr() as usize)\n125 | |                 .unwrap_or(0)\n    | |_____________________________^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: lifetime flowing from input to output with different syntax can be confusing\n   --> src/info.rs:134:16\n    |\n134 |     pub fn elf(&self) -> &xmas_elf::ElfFile {\n    |                ^^^^^     ------------------\n    |                |         ||\n    |                |         |the lifetimes get resolved as `'_`\n    |                |         the lifetimes get resolved as `'_`\n    |                this lifetime flows to the output\n    |\n    = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n    |\n134 |     pub fn elf(&self) -> &xmas_elf::ElfFile<'_> {\n    |                                            ++++\n\n"
            ]
          }
        },
        {
          "file": "src/user_stack.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] possible attempt to add with overflow\n  --> src/user_stack.rs:98:8\n   |\n98 |     if (envs.len() + args.len() + 3) & 1 != 0 {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] possible attempt to add with overflow\n  --> src/user_stack.rs:98:9\n   |\n98 |     if (envs.len() + args.len() + 3) & 1 != 0 {\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=kernel-elf-parser, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-06-28 12:11:33.460697856 +08:00:00\n     Removed 0 files\n   Compiling rustversion v1.0.21\n    Checking volatile v0.4.6\n    Checking bitflags v2.9.1\n    Checking bit_field v0.10.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/volatile-9c3a5d9b8a46e4be.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/build/rustversion-0768b5f6fd8db8b7/build_script_build-0768b5f6fd8db8b7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/bit_field-1cb827c223858202.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/bitflags-7c3693fde2daac8d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libvolatile-9c3a5d9b8a46e4be.rmeta\",\"emit\":\"metadata\"}\n   Compiling axerrno v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/build/axerrno-09d22c82c598154d/build_script_build-09d22c82c598154d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libbit_field-1cb827c223858202.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libbitflags-7c3693fde2daac8d.rmeta\",\"emit\":\"metadata\"}\n    Checking log v0.4.27\n    Checking zero v0.1.3\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/zero-cd31b2550fb381f3.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/log-61ee3d839ec629a2.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libzero-cd31b2550fb381f3.rmeta\",\"emit\":\"metadata\"}\n    Checking memory_addr v0.4.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/memory_addr-05cd10bcf213a3f9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/liblog-61ee3d839ec629a2.rmeta\",\"emit\":\"metadata\"}\n    Checking xmas-elf v0.9.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libmemory_addr-05cd10bcf213a3f9.rmeta\",\"emit\":\"metadata\"}\n    Checking cfg-if v1.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/build/rustversion-0768b5f6fd8db8b7/build_script_build-0768b5f6fd8db8b7\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/build/axerrno-09d22c82c598154d/build_script_build-09d22c82c598154d\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/cfg_if-375191e112da1984.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libcfg_if-375191e112da1984.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/xmas_elf-dc9f8f31f4f223a1.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/axerrno-3f3f9d83a23d7841.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/rustversion-0cd5cbeb9eaceaca.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libaxerrno-3f3f9d83a23d7841.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libxmas_elf-dc9f8f31f4f223a1.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/librustversion-0cd5cbeb9eaceaca.so\",\"emit\":\"link\"}\n    Checking x86_64 v0.15.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/x86_64-a80375a8fc1428dd.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libx86_64-a80375a8fc1428dd.rmeta\",\"emit\":\"metadata\"}\n    Checking page_table_entry v0.5.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/page_table_entry-25341f235714fd04.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libpage_table_entry-25341f235714fd04.rmeta\",\"emit\":\"metadata\"}\n    Checking kernel-elf-parser v0.3.3 (/home/runner/check/batch_1/Azure-stars/kernel_elf_parser)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/kernel_elf_parser-064b7ce656f1f5c4.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"lifetime flowing from input to output with different syntax can be confusing\",\"code\":{\"code\":\"mismatched_lifetime_syntaxes\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"src/info.rs\",\"byte_start\":4667,\"byte_end\":4672,\"line_start\":134,\"line_end\":134,\"column_start\":16,\"column_end\":21,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn elf(&self) -> &xmas_elf::ElfFile {\",\"highlight_start\":16,\"highlight_end\":21}],\"label\":\"this lifetime flows to the output\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"src/info.rs\",\"byte_start\":4677,\"byte_end\":4695,\"line_start\":134,\"line_end\":134,\"column_start\":26,\"column_end\":44,\"is_primary\":false,\"text\":[{\"text\":\"    pub fn elf(&self) -> &xmas_elf::ElfFile {\",\"highlight_start\":26,\"highlight_end\":44}],\"label\":\"the lifetimes get resolved as `'_`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"src/info.rs\",\"byte_start\":4678,\"byte_end\":4695,\"line_start\":134,\"line_end\":134,\"column_start\":27,\"column_end\":44,\"is_primary\":false,\"text\":[{\"text\":\"    pub fn elf(&self) -> &xmas_elf::ElfFile {\",\"highlight_start\":27,\"highlight_end\":44}],\"label\":\"the lifetimes get resolved as `'_`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"`#[warn(mismatched_lifetime_syntaxes)]` on by default\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"one option is to remove the lifetime for references and use the anonymous lifetime for paths\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/info.rs\",\"byte_start\":4695,\"byte_end\":4695,\"line_start\":134,\"line_end\":134,\"column_start\":44,\"column_end\":44,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn elf(&self) -> &xmas_elf::ElfFile {\",\"highlight_start\":44,\"highlight_end\":44}],\"label\":null,\"suggested_replacement\":\"<'_>\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"one option is to consistently use `'_`\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"src/info.rs\",\"byte_start\":4668,\"byte_end\":4668,\"line_start\":134,\"line_end\":134,\"column_start\":17,\"column_end\":17,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn elf(&self) -> &xmas_elf::ElfFile {\",\"highlight_start\":17,\"highlight_end\":17}],\"label\":null,\"suggested_replacement\":\"'_ \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"src/info.rs\",\"byte_start\":4678,\"byte_end\":4678,\"line_start\":134,\"line_end\":134,\"column_start\":27,\"column_end\":27,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn elf(&self) -> &xmas_elf::ElfFile {\",\"highlight_start\":27,\"highlight_end\":27}],\"label\":null,\"suggested_replacement\":\"'_ \",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"src/info.rs\",\"byte_start\":4695,\"byte_end\":4695,\"line_start\":134,\"line_end\":134,\"column_start\":44,\"column_end\":44,\"is_primary\":true,\"text\":[{\"text\":\"    pub fn elf(&self) -> &xmas_elf::ElfFile {\",\"highlight_start\":44,\"highlight_end\":44}],\"label\":null,\"suggested_replacement\":\"<'_>\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: lifetime flowing from input to output with different syntax can be confusing\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0msrc/info.rs:134:16\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m134\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    pub fn elf(&self) -> &xmas_elf::ElfFile {\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m^^^^^\\u001b[0m\\u001b[0m     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m------------------\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m|\\u001b[0m\\u001b[0m         \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m||\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m|\\u001b[0m\\u001b[0m         \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12mthe lifetimes get resolved as `'_`\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33m|\\u001b[0m\\u001b[0m         \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12mthe lifetimes get resolved as `'_`\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[33mthis lifetime flows to the output\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m: `#[warn(mismatched_lifetime_syntaxes)]` on by default\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: one option is to remove the lifetime for references and use the anonymous lifetime for paths\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m134\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m| \\u001b[0m\\u001b[0m    pub fn elf(&self) -> &xmas_elf::ElfFile\\u001b[0m\\u001b[0m\\u001b[38;5;10m<'_>\\u001b[0m\\u001b[0m {\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                            \\u001b[0m\\u001b[0m\\u001b[38;5;10m++++\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/deps/libkernel_elf_parser-064b7ce656f1f5c4.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"1 warning emitted\",\"code\":null,\"level\":\"warning\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[33mwarning\\u001b[0m\\u001b[0m\\u001b[1m: 1 warning emitted\\u001b[0m\\n\\n\"}\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 1.35s\n    Scanning done\nWARNING: Dependency file was never scanned: /home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/debug/build/rustversion-ca9b03d8f6561861/out/version.expr\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/page_table_entry-0.5.4/README.md\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/axerrno-0.1.0/README.md\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memory_addr-0.4.0/README.md\nWARNING: Dependency file was never scanned: /home/runner/check/batch_1/Azure-stars/kernel_elf_parser/README.md\nerror: Found 5 warnings\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=kernel-elf-parser, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-06-28 12:11:35.211252602 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        6/6          0/0    0/0     0/0      !  kernel-elf-parser 0.3.3\n0/0        1/1          0/0    0/0     0/0      !  |-- axerrno 0.1.0\n2/2        18/18        1/1    0/0     0/0      !  |   `-- log 0.4.27\n0/0        0/0          0/0    0/0     0/0      ?  |-- cfg-if 1.0.1\n2/2        18/18        1/1    0/0     0/0      !  |-- log 0.4.27\n0/0        3/3          0/0    0/0     2/2      !  |-- memory_addr 0.4.0\n0/0        0/0          0/0    0/0     0/0      ?  |-- page_table_entry 0.5.4\n0/0        0/0          0/0    0/0     0/0      ?  |   |-- bitflags 2.9.1\n0/0        3/3          0/0    0/0     2/2      !  |   |-- memory_addr 0.4.0\n9/9        1054/1054    1/1    3/3     100/100  !  |   `-- x86_64 0.15.2\n0/0        0/0          0/0    0/0     0/0      ?  |       |-- bit_field 0.10.2\n0/0        0/0          0/0    0/0     0/0      ?  |       |-- bitflags 2.9.1\n0/1        0/1          0/0    0/0     0/0      ?  |       |-- rustversion 1.0.21\n0/0        24/24        0/0    0/0     0/0      !  |       `-- volatile 0.4.6\n0/0        36/36        18/18  0/0     0/0      !  `-- xmas-elf 0.9.1\n3/3        15/15        10/10  1/1     0/0      !      `-- zero 0.1.3\n\n14/15      1157/1158    30/30  4/4     102/102\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:11:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:11:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=kernel-elf-parser, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 12:11:36.594644304 +08:00:00\n\n\nstdout:\nunused dependencies:\n`kernel-elf-parser v0.3.3 (/home/runner/check/batch_1/Azure-stars/kernel_elf_parser)`\n└─── dependencies\n     ├─── \"axerrno\"\n     ├─── \"cfg-if\"\n     └─── \"log\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\n    Checking volatile v0.4.6\n    Checking bit_field v0.10.2\n   Compiling axerrno v0.1.0\n    Checking log v0.4.27\n    Checking zero v0.1.3\n    Checking memory_addr v0.4.0\n    Checking xmas-elf v0.9.1\n    Checking cfg-if v1.0.1\n    Checking x86_64 v0.15.2\n    Checking page_table_entry v0.5.4\n    Checking kernel-elf-parser v0.3.3 (/home/runner/check/batch_1/Azure-stars/kernel_elf_parser)\nwarning: lifetime flowing from input to output with different syntax can be confusing\n   --> src/info.rs:134:16\n    |\n134 |     pub fn elf(&self) -> &xmas_elf::ElfFile {\n    |                ^^^^^     ------------------\n    |                |         ||\n    |                |         |the lifetimes get resolved as `'_`\n    |                |         the lifetimes get resolved as `'_`\n    |                this lifetime flows to the output\n    |\n    = note: `#[warn(mismatched_lifetime_syntaxes)]` on by default\nhelp: one option is to remove the lifetime for references and use the anonymous lifetime for paths\n    |\n134 |     pub fn elf(&self) -> &xmas_elf::ElfFile<'_> {\n    |                                            ++++\n\nwarning: `kernel-elf-parser` (lib) generated 1 warning\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 1.35s\ninfo: Loading depinfo from \"/home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/x86_64-unknown-linux-gnu/debug/deps/kernel_elf_parser-656da85911129bc4.d\"\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=kernel-elf-parser, checker=Outdated\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 12:11:32.897129771 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nxmas-elf  0.9.1    ---     0.10.0  Normal  ---\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}