{
  "repo": {
    "user": "drivercraft",
    "repo": "sdmmc"
  },
  "data": [
    {
      "user": "drivercraft",
      "repo": "sdmmc",
      "pkg": "sdmmc",
      "count": 21,
      "raw_reports": [
        {
          "file": "src/emmc/block.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this operation has no effect\n   --> src/emmc/block.rs:543:32\n    |\n543 |             let mut val: u32 = (buffer[i] as u32) << 0;\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(buffer[i] as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
            ],
            "Unformatted": [
              "file: /home/runner/check/batch_4/drivercraft/sdmmc/src/emmc/block.rs (original lines from 8 to 8)\n-    dma_api::DVec,\n",
              "file: /home/runner/check/batch_4/drivercraft/sdmmc/src/emmc/block.rs (original lines from 10 to 10)\n+    dma_api::DVec,\n"
            ]
          }
        },
        {
          "file": "src/emmc/cmd.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the loop variable `i` is used to index `response`\n  --> src/emmc/cmd.rs:63:18\n   |\n63 |         for i in 0..4 {\n   |                  ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n   = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n   |\n63 -         for i in 0..4 {\n63 +         for (i, <item>) in response.iter_mut().enumerate() {\n   |\n\n",
              "warning: useless conversion to the same type: `u16`\n   --> src/emmc/cmd.rs:193:21\n    |\n193 |                     (cmd.block_size & 0xFFF).try_into().unwrap(),\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider removing `.try_into()`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n",
              "warning: this boolean expression can be simplified\n   --> src/emmc/cmd.rs:610:9\n    |\n610 |         !(present_state & EMMC_DATA_0_LVL != 0)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(present_state & EMMC_DATA_0_LVL == 0)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "tests/test.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/drivercraft/sdmmc/tests/test.rs (original lines from 18 to 18)\n-    use rk3588_clk::{constant::*, Rk3588Cru};\n+    use rk3588_clk::{Rk3588Cru, constant::*};\n",
              "file: /home/runner/check/batch_4/drivercraft/sdmmc/tests/test.rs (original lines from 48 to 48)\n-        \n+\n",
              "file: /home/runner/check/batch_4/drivercraft/sdmmc/tests/test.rs (original lines from 257 to 257)\n+\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sdmmc, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/sdmmc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-10-22 4:36:10.65296467 +08:00:00\n    Building sdmmc v0.1.0 (current)\nerror: running cargo-doc on crate 'sdmmc' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling quote v1.0.41\n   Compiling unicode-ident v1.0.20\n    Checking tock-registers v0.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sdmmc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/sdmmc --features default,dma,pio &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sdmmc v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sdmmc, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/sdmmc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-10-22 4:36:24.158884931 +08:00:00\n   Compiling proc-macro2 v1.0.101\n   Compiling quote v1.0.41\n   Compiling unicode-ident v1.0.20\n    Checking tock-registers v0.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── sdmmc 0.1.0\n├── rdrive 0.18.11\n│   └── sparreal-kernel 0.12.2\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── sdmmc 0.1.0\n│       └── bare-test 0.7.0\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.11\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.2\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.2\n│   ├── rdif-pcie 0.1.4\n│   │   ├── rdrive 0.18.11\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.11\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.2\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 855,\n    \"last-commit\": \"1d7429a9296c858cd71632bc65da17df2fe584ff\",\n    \"last-updated\": \"2025-10-21T22:30:05+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 328\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-10-21T20:36:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-10-21T20:36:13Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=sdmmc, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/sdmmc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-10-22 4:36:24.710309967 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.101\n   Compiling quote v1.0.41\n   Compiling unicode-ident v1.0.20\n    Checking tock-registers v0.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sdmmc, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/sdmmc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-10-22 4:36:24.157886554 +08:00:00\n\nName         Project  Compat  Latest  Kind         Platform\n----         -------  ------  ------  ----         --------\naarch64-cpu  10.0.0   ---     11.1.0  Normal       ---\ndma-api      0.3.1    ---     0.5.1   Normal       ---\nfdt-parser   0.4.18   ---     0.5.0   Normal       ---\npcie         0.2.7    ---     0.4.5   Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sdmmc, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/sdmmc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-10-22 4:36:11.603694959 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sdmmc v0.1.0 (current)\nerror: running cargo-doc on crate 'sdmmc' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling quote v1.0.41\n   Compiling unicode-ident v1.0.20\n    Checking tock-registers v0.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sdmmc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/sdmmc --features default,dma,pio &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sdmmc v0.1.0\n"
            ]
          }
        },
        {
          "file": "src/emmc/aux.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: value assigned to `val` is never read\n  --> src/emmc/aux.rs:77:9\n   |\n77 |         val <<= 1;\n   |         ^^^^^^^^^\n   |\n   = help: maybe it is overwritten before being read?\n   = note: `#[warn(unused_assignments)]` (part of `#[warn(unused)]`) on by default\n\n"
            ]
          }
        },
        {
          "file": "src/emmc/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/drivercraft/sdmmc/src/emmc/mod.rs (original lines from 1002 to 1004)\n-            (MMC_SWITCH_MODE_WRITE_BYTE << 24)\n-                | (index << 16)\n-                | ((value as u32) << 8),\n+            (MMC_SWITCH_MODE_WRITE_BYTE << 24) | (index << 16) | ((value as u32) << 8),\n"
            ]
          }
        },
        {
          "file": "src/emmc/rockchip.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this boolean expression can be simplified\n   --> src/emmc/rockchip.rs:347:12\n    |\n347 |         if !(timing == MMC_TIMING_LEGACY) && (self.quirks & SDHCI_QUIRK_NO_HISPD_BIT) == 0 {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(timing != MMC_TIMING_LEGACY)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unsafe function's docs are missing a `# Safety` section\n  --> src/lib.rs:12:1\n   |\n12 | pub unsafe fn dump_memory_region(addr: usize, size: usize) {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}