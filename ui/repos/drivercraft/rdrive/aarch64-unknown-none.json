{
  "repo": {
    "user": "drivercraft",
    "repo": "rdrive"
  },
  "data": [
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-pcie",
      "count": 35,
      "raw_reports": [
        {
          "file": "interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs",
          "features": "",
          "count": 9,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:46:12\n   |\n46 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
              "warning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:62:12\n   |\n62 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
              "warning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:497:12\n    |\n497 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
              "warning: methods `search_superset` and `free` are never used\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:511:8\n    |\n502 | impl IntervalTree {\n    | ----------------- methods in this implementation\n...\n511 |     fn search_superset(&self, key: &RangeInclusive) -> Option<&InnerNode> {\n    |        ^^^^^^^^^^^^^^^\n...\n605 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n    |            ^^^^\n\n",
              "warning: methods `search_superset` and `free` are never used\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:511:8\n    |\n502 | impl IntervalTree {\n    | ----------------- methods in this implementation\n...\n511 |     fn search_superset(&self, key: &RangeInclusive) -> Option<&InnerNode> {\n    |        ^^^^^^^^^^^^^^^\n...\n605 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n    |            ^^^^\n\n",
              "warning: this `if` statement can be collapsed\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:611:9\n    |\n611 | /         if range.start() > 0 {\n612 | |             if let Some(node) = self.search_superset(&RangeInclusive::new(\n613 | |                 range.start().checked_sub(2).ok_or(Error::Underflow)?,\n614 | |                 range.start().checked_sub(1).ok_or(Error::Underflow)?,\n...   |\n620 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n611 ~         if range.start() > 0\n612 ~             && let Some(node) = self.search_superset(&RangeInclusive::new(\n613 |                 range.start().checked_sub(2).ok_or(Error::Underflow)?,\n...\n618 |                 }\n619 ~             }\n    |\n\n",
              "warning: this `if` statement can be collapsed\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:612:13\n    |\n612 | /             if let Some(node) = self.search_superset(&RangeInclusive::new(\n613 | |                 range.start().checked_sub(2).ok_or(Error::Underflow)?,\n614 | |                 range.start().checked_sub(1).ok_or(Error::Underflow)?,\n615 | |             )?) {\n...   |\n619 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n615 ~             )?)\n616 ~                 && node.node_state == NodeState::Free {\n617 |                     range = RangeInclusive::new(node.key.start(), range.end())?;\n618 ~                 }\n    |\n\n",
              "warning: this `if` statement can be collapsed\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:623:9\n    |\n623 | /         if range.end() < u64::MAX {\n624 | |             if let Some(node) = self.search_superset(&RangeInclusive::new(\n625 | |                 range.end().checked_add(1).ok_or(Error::Overflow)?,\n626 | |                 range.end().checked_add(2).ok_or(Error::Overflow)?,\n...   |\n632 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n623 ~         if range.end() < u64::MAX\n624 ~             && let Some(node) = self.search_superset(&RangeInclusive::new(\n625 |                 range.end().checked_add(1).ok_or(Error::Overflow)?,\n...\n630 |                 }\n631 ~             }\n    |\n\n",
              "warning: this `if` statement can be collapsed\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:624:13\n    |\n624 | /             if let Some(node) = self.search_superset(&RangeInclusive::new(\n625 | |                 range.end().checked_add(1).ok_or(Error::Overflow)?,\n626 | |                 range.end().checked_add(2).ok_or(Error::Overflow)?,\n627 | |             )?) {\n...   |\n631 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n627 ~             )?)\n628 ~                 && node.node_state == NodeState::Free {\n629 |                     range = RangeInclusive::new(range.start(), node.key.end())?;\n630 ~                 }\n    |\n\n"
            ]
          }
        },
        {
          "file": "interface/rdif-pcie/src/addr_alloc/mod.rs",
          "features": "",
          "count": 7,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:164:12\n    |\n164 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\n",
              "warning: constant `DEFAULT_CONSTRAINT_ALIGN` is never used\n  --> interface/rdif-pcie/src/addr_alloc/mod.rs:93:11\n   |\n93 | pub const DEFAULT_CONSTRAINT_ALIGN: u64 = 4;\n   |           ^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` (part of `#[warn(unused)]`) on by default\n\n",
              "warning: method `align` is never used\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:280:12\n    |\n246 | impl Constraint {\n    | --------------- method in this implementation\n...\n280 |     pub fn align(self) -> u64 {\n    |            ^^^^^\n\n",
              "warning: variants `LastMatch` and `ExactMatch` are never constructed\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:297:5\n    |\n292 | pub enum AllocPolicy {\n    |          ----------- variants in this enum\n...\n297 |     LastMatch,\n    |     ^^^^^^^^^\n...\n300 |     ExactMatch(u64),\n    |     ^^^^^^^^^^\n    |\n    = note: `AllocPolicy` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\n\n",
              "warning: variants `LastMatch` and `ExactMatch` are never constructed\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:297:5\n    |\n292 | pub enum AllocPolicy {\n    |          ----------- variants in this enum\n...\n297 |     LastMatch,\n    |     ^^^^^^^^^\n...\n300 |     ExactMatch(u64),\n    |     ^^^^^^^^^^\n    |\n    = note: `AllocPolicy` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\n\n",
              "warning: this `if` statement can be collapsed\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:266:9\n    |\n266 | /         if let AllocPolicy::ExactMatch(start_address) = policy {\n267 | |             if start_address % align != 0 {\n268 | |                 return Err(Error::UnalignedAddress);\n269 | |             }\n270 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n266 ~         if let AllocPolicy::ExactMatch(start_address) = policy\n267 ~             && start_address % align != 0 {\n268 |                 return Err(Error::UnalignedAddress);\n269 ~             }\n    |\n\n",
              "warning: all variants have the same postfix: `Match`\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:292:1\n    |\n292 | / pub enum AllocPolicy {\n293 | |     /// Allocate the first matched entry.\n294 | |     #[default]\n295 | |     FirstMatch,\n...   |\n300 | |     ExactMatch(u64),\n301 | | }\n    | |_^\n    |\n    = help: remove the postfixes and use full paths to the variants instead of glob imports\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_variant_names\n    = note: `#[warn(clippy::enum_variant_names)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "interface/rdif-pcie/src/addr_alloc/id_allocator.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `IdAllocator` is never constructed\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:21:12\n   |\n21 | pub struct IdAllocator {\n   |            ^^^^^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n",
              "warning: this `if` statement can be collapsed\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:85:9\n   |\n85 | /         if let Some(next_id) = self.next_id {\n86 | |             if next_id < id {\n87 | |                 return Err(Error::NeverAllocated(id));\n88 | |             }\n89 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n85 ~         if let Some(next_id) = self.next_id\n86 ~             && next_id < id {\n87 |                 return Err(Error::NeverAllocated(id));\n88 ~             }\n   |\n\n"
            ]
          }
        },
        {
          "file": "interface/rdif-pcie/src/addr_alloc/address_allocator.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: methods `free`, `base`, and `end` are never used\n  --> interface/rdif-pcie/src/addr_alloc/address_allocator.rs:71:12\n   |\n34 | impl AddressAllocator {\n   | --------------------- methods in this implementation\n...\n71 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n   |            ^^^^\n...\n76 |     pub fn base(&self) -> u64 {\n   |            ^^^^\n...\n81 |     pub fn end(&self) -> u64 {\n   |            ^^^\n\n",
              "warning: methods `free`, `base`, and `end` are never used\n  --> interface/rdif-pcie/src/addr_alloc/address_allocator.rs:71:12\n   |\n34 | impl AddressAllocator {\n   | --------------------- methods in this implementation\n...\n71 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n   |            ^^^^\n...\n76 |     pub fn base(&self) -> u64 {\n   |            ^^^^\n...\n81 |     pub fn end(&self) -> u64 {\n   |            ^^^\n\n",
              "warning: methods `free`, `base`, and `end` are never used\n  --> interface/rdif-pcie/src/addr_alloc/address_allocator.rs:71:12\n   |\n34 | impl AddressAllocator {\n   | --------------------- methods in this implementation\n...\n71 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n   |            ^^^^\n...\n76 |     pub fn base(&self) -> u64 {\n   |            ^^^^\n...\n81 |     pub fn end(&self) -> u64 {\n   |            ^^^\n\n"
            ]
          }
        },
        {
          "file": "src/addr_alloc/id_allocator.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie/src/addr_alloc/id_allocator.rs (original lines from 102 to 102)\n-    use crate::id_allocator::IdAllocator;\n",
              "file: /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie/src/addr_alloc/id_allocator.rs (original lines from 104 to 104)\n+    use crate::id_allocator::IdAllocator;\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-pcie, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-26 4:31:25.010379367 +08:00:00\n   Compiling rdif-pcie v0.1.3 (/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie)\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:49:16\n   |\n49 |             && let Some(set) = self.mem32_pref.as_mut()\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:50:16\n   |\n50 |             && let Ok(addr) = set.allocate(size as _, size as _, AllocPolicy::FirstMatch)\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:65:16\n   |\n65 |             && let Some(set) = self.mem64_pref.as_mut()\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:66:16\n   |\n66 |             && let Ok(addr) = set.allocate(size as _, size as _, AllocPolicy::FirstMatch)\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nwarning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:164:12\n    |\n164 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:46:12\n   |\n46 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:62:12\n   |\n62 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:497:12\n    |\n497 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nFor more information about this error, try `rustc --explain E0658`.\nwarning: `rdif-pcie` (lib) generated 4 warnings\nerror: could not compile `rdif-pcie` (lib) due to 4 previous errors; 4 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-pcie, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:54.886320498 +08:00:00\n    Building rdif-pcie v0.1.3 (current)\nerror: running cargo-doc on crate 'rdif-pcie' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking bitflags v2.9.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-pcie v0.1.3\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-pcie v0.1.3\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-pcie, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:23.373031415 +08:00:00\n    Checking bitflags v2.9.4\n    Checking as-any v0.3.2\n    Checking thiserror v2.0.16\n    Checking bit_field v0.10.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `thiserror` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `as-any` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `bit_field` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-pcie, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:23.654379486 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking bitflags v2.9.4\n    Checking as-any v0.3.2\n    Checking thiserror v2.0.16\n    Checking bit_field v0.10.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `thiserror` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `as-any` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `bit_field` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-pcie, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:55.658225402 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-pcie v0.1.3 (current)\nerror: running cargo-doc on crate 'rdif-pcie' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking bitflags v2.9.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-pcie v0.1.3\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-pcie v0.1.3\n"
            ]
          }
        },
        {
          "file": "src/addr_alloc/address_allocator.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie/src/addr_alloc/address_allocator.rs (original lines from 291 to 293)\n-        assert!(pool\n-            .free(&RangeInclusive::new(0x500, 0x9FD).unwrap())\n-            .is_ok());\n+        assert!(\n+            pool.free(&RangeInclusive::new(0x500, 0x9FD).unwrap())\n+                .is_ok()\n+        );\n"
            ]
          }
        },
        {
          "file": "src/addr_alloc/allocation_engine/interval_tree.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs (original lines from 5 to 5)\n-use core::cmp::{max, Ordering};\n+use core::cmp::{Ordering, max};\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "pcie",
      "count": 26,
      "raw_reports": [
        {
          "file": "interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:46:12\n   |\n46 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
              "warning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:62:12\n   |\n62 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
              "warning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:497:12\n    |\n497 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
              "warning: methods `search_superset` and `free` are never used\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:511:8\n    |\n502 | impl IntervalTree {\n    | ----------------- methods in this implementation\n...\n511 |     fn search_superset(&self, key: &RangeInclusive) -> Option<&InnerNode> {\n    |        ^^^^^^^^^^^^^^^\n...\n605 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n    |            ^^^^\n\n",
              "warning: methods `search_superset` and `free` are never used\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:511:8\n    |\n502 | impl IntervalTree {\n    | ----------------- methods in this implementation\n...\n511 |     fn search_superset(&self, key: &RangeInclusive) -> Option<&InnerNode> {\n    |        ^^^^^^^^^^^^^^^\n...\n605 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n    |            ^^^^\n\n"
            ]
          }
        },
        {
          "file": "interface/rdif-pcie/src/addr_alloc/id_allocator.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `IdAllocator` is never constructed\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:21:12\n   |\n21 | pub struct IdAllocator {\n   |            ^^^^^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "interface/rdif-pcie/src/addr_alloc/mod.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:164:12\n    |\n164 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\n",
              "warning: constant `DEFAULT_CONSTRAINT_ALIGN` is never used\n  --> interface/rdif-pcie/src/addr_alloc/mod.rs:93:11\n   |\n93 | pub const DEFAULT_CONSTRAINT_ALIGN: u64 = 4;\n   |           ^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` (part of `#[warn(unused)]`) on by default\n\n",
              "warning: method `align` is never used\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:280:12\n    |\n246 | impl Constraint {\n    | --------------- method in this implementation\n...\n280 |     pub fn align(self) -> u64 {\n    |            ^^^^^\n\n",
              "warning: variants `LastMatch` and `ExactMatch` are never constructed\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:297:5\n    |\n292 | pub enum AllocPolicy {\n    |          ----------- variants in this enum\n...\n297 |     LastMatch,\n    |     ^^^^^^^^^\n...\n300 |     ExactMatch(u64),\n    |     ^^^^^^^^^^\n    |\n    = note: `AllocPolicy` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\n\n",
              "warning: variants `LastMatch` and `ExactMatch` are never constructed\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:297:5\n    |\n292 | pub enum AllocPolicy {\n    |          ----------- variants in this enum\n...\n297 |     LastMatch,\n    |     ^^^^^^^^^\n...\n300 |     ExactMatch(u64),\n    |     ^^^^^^^^^^\n    |\n    = note: `AllocPolicy` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\n\n"
            ]
          }
        },
        {
          "file": "interface/rdif-pcie/src/addr_alloc/address_allocator.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: methods `free`, `base`, and `end` are never used\n  --> interface/rdif-pcie/src/addr_alloc/address_allocator.rs:71:12\n   |\n34 | impl AddressAllocator {\n   | --------------------- methods in this implementation\n...\n71 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n   |            ^^^^\n...\n76 |     pub fn base(&self) -> u64 {\n   |            ^^^^\n...\n81 |     pub fn end(&self) -> u64 {\n   |            ^^^\n\n",
              "warning: methods `free`, `base`, and `end` are never used\n  --> interface/rdif-pcie/src/addr_alloc/address_allocator.rs:71:12\n   |\n34 | impl AddressAllocator {\n   | --------------------- methods in this implementation\n...\n71 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n   |            ^^^^\n...\n76 |     pub fn base(&self) -> u64 {\n   |            ^^^^\n...\n81 |     pub fn end(&self) -> u64 {\n   |            ^^^\n\n",
              "warning: methods `free`, `base`, and `end` are never used\n  --> interface/rdif-pcie/src/addr_alloc/address_allocator.rs:71:12\n   |\n34 | impl AddressAllocator {\n   | --------------------- methods in this implementation\n...\n71 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n   |            ^^^^\n...\n76 |     pub fn base(&self) -> u64 {\n   |            ^^^^\n...\n81 |     pub fn end(&self) -> u64 {\n   |            ^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=pcie, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/bus/pcie\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-26 4:31:08.918541273 +08:00:00\n   Compiling bit_field v0.10.3\n   Compiling quote v1.0.40\n   Compiling bitflags v2.9.4\n   Compiling as-any v0.3.2\n   Compiling log v0.4.28\n   Compiling pci_types v0.10.0\n[2025-09-25T20:31:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-25T20:31:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v2.0.106\n   Compiling thiserror-impl v2.0.16\n   Compiling async-trait v0.1.89\n   Compiling bare-test-macros v0.2.0\n   Compiling pcie v0.4.5 (/home/runner/check/batch_4/drivercraft/rdrive/bus/pcie)\n   Compiling thiserror v2.0.16\n   Compiling rdif-def v0.2.0\n   Compiling rdif-base v0.7.0 (/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-base)\n   Compiling rdif-pcie v0.1.3 (/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie)\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:49:16\n   |\n49 |             && let Some(set) = self.mem32_pref.as_mut()\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:50:16\n   |\n50 |             && let Ok(addr) = set.allocate(size as _, size as _, AllocPolicy::FirstMatch)\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:65:16\n   |\n65 |             && let Some(set) = self.mem64_pref.as_mut()\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:66:16\n   |\n66 |             && let Ok(addr) = set.allocate(size as _, size as _, AllocPolicy::FirstMatch)\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nwarning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:164:12\n    |\n164 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:46:12\n   |\n46 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:62:12\n   |\n62 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:497:12\n    |\n497 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nFor more information about this error, try `rustc --explain E0658`.\nwarning: `rdif-pcie` (lib) generated 4 warnings\nerror: could not compile `rdif-pcie` (lib) due to 4 previous errors; 4 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=pcie, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/bus/pcie\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:46.971519748 +08:00:00\n    Building pcie v0.4.5 (current)\nerror: running cargo-doc on crate 'pcie' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking bitflags v2.9.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate pcie v0.4.5\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/bus/pcie &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate pcie v0.4.5\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=pcie, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/bus/pcie\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:15.643327784 +08:00:00\n   Compiling proc-macro2 v1.0.101\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking bitflags v2.9.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-09-25T20:31:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-25T20:31:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=pcie, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/bus/pcie\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:16.136806998 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.101\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking bitflags v2.9.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=pcie, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/bus/pcie\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:47.790732382 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building pcie v0.4.5 (current)\nerror: running cargo-doc on crate 'pcie' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking bitflags v2.9.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bitflags` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate pcie v0.4.5\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/bus/pcie &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate pcie v0.4.5\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdrive",
      "count": 26,
      "raw_reports": [
        {
          "file": "interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:46:12\n   |\n46 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
              "warning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:62:12\n   |\n62 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
              "warning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:497:12\n    |\n497 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n",
              "warning: methods `search_superset` and `free` are never used\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:511:8\n    |\n502 | impl IntervalTree {\n    | ----------------- methods in this implementation\n...\n511 |     fn search_superset(&self, key: &RangeInclusive) -> Option<&InnerNode> {\n    |        ^^^^^^^^^^^^^^^\n...\n605 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n    |            ^^^^\n\n",
              "warning: methods `search_superset` and `free` are never used\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:511:8\n    |\n502 | impl IntervalTree {\n    | ----------------- methods in this implementation\n...\n511 |     fn search_superset(&self, key: &RangeInclusive) -> Option<&InnerNode> {\n    |        ^^^^^^^^^^^^^^^\n...\n605 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n    |            ^^^^\n\n"
            ]
          }
        },
        {
          "file": "interface/rdif-pcie/src/addr_alloc/id_allocator.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: struct `IdAllocator` is never constructed\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:21:12\n   |\n21 | pub struct IdAllocator {\n   |            ^^^^^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n",
              "warning: associated items `new`, `id_in_range`, `allocate_id`, and `free_id` are never used\n  --> interface/rdif-pcie/src/addr_alloc/id_allocator.rs:36:12\n   |\n32 | impl IdAllocator {\n   | ---------------- associated items in this implementation\n...\n36 |     pub fn new(range_base: u32, range_end: u32) -> Result<Self> {\n   |            ^^^\n...\n48 |     fn id_in_range(&self, id: u32) -> bool {\n   |        ^^^^^^^^^^^\n...\n56 |     pub fn allocate_id(&mut self) -> Result<u32> {\n   |            ^^^^^^^^^^^\n...\n79 |     pub fn free_id(&mut self, id: u32) -> Result<u32> {\n   |            ^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "interface/rdif-pcie/src/addr_alloc/mod.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:164:12\n    |\n164 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\n",
              "warning: constant `DEFAULT_CONSTRAINT_ALIGN` is never used\n  --> interface/rdif-pcie/src/addr_alloc/mod.rs:93:11\n   |\n93 | pub const DEFAULT_CONSTRAINT_ALIGN: u64 = 4;\n   |           ^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` (part of `#[warn(unused)]`) on by default\n\n",
              "warning: method `align` is never used\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:280:12\n    |\n246 | impl Constraint {\n    | --------------- method in this implementation\n...\n280 |     pub fn align(self) -> u64 {\n    |            ^^^^^\n\n",
              "warning: variants `LastMatch` and `ExactMatch` are never constructed\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:297:5\n    |\n292 | pub enum AllocPolicy {\n    |          ----------- variants in this enum\n...\n297 |     LastMatch,\n    |     ^^^^^^^^^\n...\n300 |     ExactMatch(u64),\n    |     ^^^^^^^^^^\n    |\n    = note: `AllocPolicy` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\n\n",
              "warning: variants `LastMatch` and `ExactMatch` are never constructed\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:297:5\n    |\n292 | pub enum AllocPolicy {\n    |          ----------- variants in this enum\n...\n297 |     LastMatch,\n    |     ^^^^^^^^^\n...\n300 |     ExactMatch(u64),\n    |     ^^^^^^^^^^\n    |\n    = note: `AllocPolicy` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis\n\n"
            ]
          }
        },
        {
          "file": "interface/rdif-pcie/src/addr_alloc/address_allocator.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: methods `free`, `base`, and `end` are never used\n  --> interface/rdif-pcie/src/addr_alloc/address_allocator.rs:71:12\n   |\n34 | impl AddressAllocator {\n   | --------------------- methods in this implementation\n...\n71 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n   |            ^^^^\n...\n76 |     pub fn base(&self) -> u64 {\n   |            ^^^^\n...\n81 |     pub fn end(&self) -> u64 {\n   |            ^^^\n\n",
              "warning: methods `free`, `base`, and `end` are never used\n  --> interface/rdif-pcie/src/addr_alloc/address_allocator.rs:71:12\n   |\n34 | impl AddressAllocator {\n   | --------------------- methods in this implementation\n...\n71 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n   |            ^^^^\n...\n76 |     pub fn base(&self) -> u64 {\n   |            ^^^^\n...\n81 |     pub fn end(&self) -> u64 {\n   |            ^^^\n\n",
              "warning: methods `free`, `base`, and `end` are never used\n  --> interface/rdif-pcie/src/addr_alloc/address_allocator.rs:71:12\n   |\n34 | impl AddressAllocator {\n   | --------------------- methods in this implementation\n...\n71 |     pub fn free(&mut self, key: &RangeInclusive) -> Result<()> {\n   |            ^^^^\n...\n76 |     pub fn base(&self) -> u64 {\n   |            ^^^^\n...\n81 |     pub fn end(&self) -> u64 {\n   |            ^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdrive, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/rdrive\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-26 4:31:25.742111073 +08:00:00\n[2025-09-25T20:31:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-25T20:31:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rdrive-macros v0.4.1 (/home/runner/check/batch_4/drivercraft/rdrive/rdrive-macros)\n   Compiling fdt-parser v0.4.17\n   Compiling rdif-pcie v0.1.3 (/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-pcie)\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:10:12\n   |\n10 |         if let syn::Item::Static(st) = c\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:11:16\n   |\n11 |             && let syn::Expr::Struct(expr_struct) = st.expr.as_ref()\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:14:20\n   |\n14 |                 if let syn::Member::Named(ident) = &field.member\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:16:24\n   |\n16 |                     && let syn::Expr::Group(expr_group) = &field.expr\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:17:24\n   |\n17 |                     && let syn::Expr::Lit(expr_lit) = expr_group.expr.as_ref()\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:18:24\n   |\n18 |                     && let syn::Lit::Str(lit_str) = &expr_lit.lit\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:49:16\n   |\n49 |             && let Some(set) = self.mem32_pref.as_mut()\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:50:16\n   |\n50 |             && let Ok(addr) = set.allocate(size as _, size as _, AllocPolicy::FirstMatch)\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:65:16\n   |\n65 |             && let Some(set) = self.mem64_pref.as_mut()\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> interface/rdif-pcie/src/bar_alloc.rs:66:16\n   |\n66 |             && let Ok(addr) = set.allocate(size as _, size as _, AllocPolicy::FirstMatch)\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nwarning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/mod.rs:164:12\n    |\n164 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:46:12\n   |\n46 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `serde`\n  --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:62:12\n   |\n62 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n   |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `serde` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition value: `serde`\n   --> interface/rdif-pcie/src/addr_alloc/allocation_engine/interval_tree.rs:497:12\n    |\n497 | #[cfg_attr(feature = \"serde\", derive(serde::Serialize, serde::Deserialize))]\n    |            ^^^^^^^^^^^^^^^^^ help: remove the condition\n    |\n    = note: no expected values for `feature`\n    = help: consider adding `serde` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `rdrive-macros` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\nwarning: `rdif-pcie` (lib) generated 4 warnings\nerror: could not compile `rdif-pcie` (lib) due to 4 previous errors; 4 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdrive, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/rdrive\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:58.723610522 +08:00:00\n    Building rdrive v0.18.5 (current)\nerror: running cargo-doc on crate 'rdrive' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n   Compiling autocfg v1.5.0\n    Checking bit_field v0.10.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdrive v0.18.5\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/rdrive &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdrive v0.18.5\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdrive, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/rdrive\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:24.75768666 +08:00:00\n   Compiling lock_api v0.4.13\n    Checking as-any v0.3.2\n   Compiling syn v2.0.106\n    Checking bit_field v0.10.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `as-any` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-09-25T20:31:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1525:11: 1525:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.28/src/lib.rs:1528:13: 1528:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-25T20:31:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdrive, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/rdrive\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:27.631478819 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling lock_api v0.4.13\n    Checking as-any v0.3.2\n   Compiling syn v2.0.106\n    Checking bit_field v0.10.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `as-any` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdrive, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/rdrive\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:31:00.036942162 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdrive v0.18.5 (current)\nerror: running cargo-doc on crate 'rdrive' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n   Compiling autocfg v1.5.0\n    Checking bit_field v0.10.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `bit_field` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdrive v0.18.5\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/rdrive &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdrive v0.18.5\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-block",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dma-api-0.5.1/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"init\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dma-api-0.5.1/src/lib.rs:72:8: 72:56 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dma-api-0.5.1/src/lib.rs:79:5: 79:60 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-block, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-block\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:48.563438249 +08:00:00\n    Building rdif-block v0.6.2 (current)\nerror: running cargo-doc on crate 'rdif-block' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling autocfg v1.5.0\n    Checking futures-sink v0.3.31\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `futures-sink` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-block v0.6.2\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-block &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-block v0.6.2\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-block, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-block\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:16.721679058 +08:00:00\n   Compiling quote v1.0.40\n   Compiling autocfg v1.5.0\n    Checking futures-sink v0.3.31\n    Checking pin-utils v0.1.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `pin-utils` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `futures-sink` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-09-25T20:31:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dma-api-0.5.1/src/lib.rs:72:8: 72:56 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dma-api-0.5.1/src/lib.rs:79:5: 79:60 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-25T20:31:21Z WARN  lockbud::callbacks] crate dma_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-09-25T20:31:21Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at interface/rdif-block/src/blk.rs:282:50: 286:22 (#0) after dropped at interface/rdif-block/src/blk.rs:304:17: 304:18 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-09-25T20:31:21Z WARN  lockbud::callbacks] crate rdif_block contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-block, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-block\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:17.213219385 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling quote v1.0.40\n   Compiling autocfg v1.5.0\n    Checking futures-sink v0.3.31\n    Checking pin-utils v0.1.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `pin-utils` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `futures-sink` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-block, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-block\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:49.452818172 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-block v0.6.2 (current)\nerror: running cargo-doc on crate 'rdif-block' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling autocfg v1.5.0\n    Checking futures-sink v0.3.31\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `futures-sink` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-block v0.6.2\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-block &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-block v0.6.2\n"
            ]
          }
        },
        {
          "file": "interface/rdif-block/src/blk.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at interface/rdif-block/src/blk.rs:282:50: 286:22 (#0) after dropped at interface/rdif-block/src/blk.rs:304:17: 304:18 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "enumerate",
      "count": 6,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.6/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.6/src/lib.rs:198:1\n    |\n198 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=enumerate, checker=Clippy\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/examples/enumerate\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-09-26 4:30:29.17532481 +08:00:00\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n   Compiling autocfg v1.5.0\n    Checking memchr v2.7.6\n    Checking as-any v0.3.2\nerror: could not compile `memchr` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=enumerate, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/examples/enumerate\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-26 4:31:07.839255806 +08:00:00\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n   Compiling memchr v2.7.6\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.6/src/lib.rs:198:1\n    |\n198 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `aarch64-unknown-none` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\n   Compiling autocfg v1.5.0\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `memchr` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=enumerate, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/examples/enumerate\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:15.058019144 +08:00:00\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking memchr v2.7.6\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `memchr` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=enumerate, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/examples/enumerate\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:15.641279148 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking memchr v2.7.6\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `memchr` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-clk",
      "count": 6,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-clk, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-clk\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-26 4:31:21.707710562 +08:00:00\n   Compiling rdif-clk v0.4.2 (/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-clk)\nerror[E0658]: cannot cast `dyn Interface` to `dyn rdif_base::Any`, trait upcasting coercion is experimental\n  --> interface/rdif-clk/src/lib.rs:20:1\n   |\n20 | def_driver!(Clk, Interface);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `&dyn Interface` into `&(dyn rdif_base::Any + 'static)`\n   = note: this error originates in the macro `def_driver` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0658]: cannot cast `dyn Interface` to `dyn rdif_base::Any`, trait upcasting coercion is experimental\n  --> interface/rdif-clk/src/lib.rs:20:1\n   |\n20 | def_driver!(Clk, Interface);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `&mut (dyn Interface + 'static)` into `&mut (dyn rdif_base::Any + 'static)`\n   = note: this error originates in the macro `def_driver` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `rdif-clk` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-clk, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-clk\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:49.454411989 +08:00:00\n    Building rdif-clk v0.4.2 (current)\nerror: running cargo-doc on crate 'rdif-clk' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-clk v0.4.2\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-clk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-clk v0.4.2\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-clk, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-clk\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:17.215096741 +08:00:00\n   Compiling syn v2.0.106\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-clk, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-clk\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:19.618725435 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling syn v2.0.106\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-clk, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-clk\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:50.220844161 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-clk v0.4.2 (current)\nerror: running cargo-doc on crate 'rdif-clk' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-clk v0.4.2\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-clk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-clk v0.4.2\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-intc",
      "count": 6,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-intc, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-intc\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-26 4:31:24.761260751 +08:00:00\n   Compiling rdif-intc v0.12.1 (/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-intc)\nerror[E0658]: cannot cast `dyn Interface` to `dyn rdif_base::Any`, trait upcasting coercion is experimental\n  --> interface/rdif-intc/src/lib.rs:20:1\n   |\n20 | def_driver!(Intc, Interface);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `&dyn Interface` into `&(dyn rdif_base::Any + 'static)`\n   = note: this error originates in the macro `def_driver` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0658]: cannot cast `dyn Interface` to `dyn rdif_base::Any`, trait upcasting coercion is experimental\n  --> interface/rdif-intc/src/lib.rs:20:1\n   |\n20 | def_driver!(Intc, Interface);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `&mut (dyn Interface + 'static)` into `&mut (dyn rdif_base::Any + 'static)`\n   = note: this error originates in the macro `def_driver` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `rdif-intc` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-intc, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-intc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:53.350625302 +08:00:00\n    Building rdif-intc v0.12.1 (current)\nerror: running cargo-doc on crate 'rdif-intc' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-intc v0.12.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-intc &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-intc v0.12.1\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-intc, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-intc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:21.974406666 +08:00:00\n   Compiling thiserror-impl v2.0.16\n   Compiling async-trait v0.1.89\n    Checking as-any v0.3.2\n    Checking cfg-if v1.0.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `as-any` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-intc, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-intc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:23.095246083 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling thiserror-impl v2.0.16\n   Compiling async-trait v0.1.89\n    Checking as-any v0.3.2\n    Checking cfg-if v1.0.3\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `as-any` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-intc, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-intc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:54.11574954 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-intc v0.12.1 (current)\nerror: running cargo-doc on crate 'rdif-intc' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-intc v0.12.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-intc &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-intc v0.12.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-power",
      "count": 6,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-power, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-power\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-26 4:31:25.219433049 +08:00:00\n   Compiling rdif-power v0.6.1 (/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-power)\nerror[E0658]: cannot cast `dyn Interface` to `dyn rdif_base::Any`, trait upcasting coercion is experimental\n  --> interface/rdif-power/src/lib.rs:12:1\n   |\n12 | def_driver!(Power, Interface);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `&dyn Interface` into `&(dyn rdif_base::Any + 'static)`\n   = note: this error originates in the macro `def_driver` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0658]: cannot cast `dyn Interface` to `dyn rdif_base::Any`, trait upcasting coercion is experimental\n  --> interface/rdif-power/src/lib.rs:12:1\n   |\n12 | def_driver!(Power, Interface);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `&mut (dyn Interface + 'static)` into `&mut (dyn rdif_base::Any + 'static)`\n   = note: this error originates in the macro `def_driver` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `rdif-power` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-power, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-power\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:55.659970089 +08:00:00\n    Building rdif-power v0.6.1 (current)\nerror: running cargo-doc on crate 'rdif-power' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-power v0.6.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-power &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-power v0.6.1\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-power, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-power\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:23.656213741 +08:00:00\n    Checking thiserror v2.0.16\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `thiserror` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-power, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-power\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:23.926988465 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking thiserror v2.0.16\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `thiserror` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-power, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-power\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:56.429886647 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-power v0.6.1 (current)\nerror: running cargo-doc on crate 'rdif-power' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-power v0.6.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-power &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-power v0.6.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-serial",
      "count": 6,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-serial, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-serial\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-26 4:31:25.35029166 +08:00:00\n   Compiling rdif-serial v0.4.2 (/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-serial)\nerror[E0658]: cannot cast `dyn Interface` to `dyn rdif_base::Any`, trait upcasting coercion is experimental\n  --> interface/rdif-serial/src/lib.rs:59:1\n   |\n59 | def_driver!(Serial, Interface);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `&dyn Interface` into `&(dyn rdif_base::Any + 'static)`\n   = note: this error originates in the macro `def_driver` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0658]: cannot cast `dyn Interface` to `dyn rdif_base::Any`, trait upcasting coercion is experimental\n  --> interface/rdif-serial/src/lib.rs:59:1\n   |\n59 | def_driver!(Serial, Interface);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `&mut (dyn Interface + 'static)` into `&mut (dyn rdif_base::Any + 'static)`\n   = note: this error originates in the macro `def_driver` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `rdif-serial` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-serial, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-serial\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:56.431788929 +08:00:00\n    Building rdif-serial v0.4.2 (current)\nerror: running cargo-doc on crate 'rdif-serial' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n    Checking futures-sink v0.3.31\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `futures-sink` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-serial v0.4.2\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-serial &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-serial v0.4.2\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-serial, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-serial\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:23.928829231 +08:00:00\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n    Checking futures-sink v0.3.31\n    Checking thiserror v2.0.16\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `pin-utils` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `futures-core` (lib) due to 1 previous error\nerror: could not compile `thiserror` (lib) due to 1 previous error\nerror: could not compile `futures-sink` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-serial, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-serial\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:24.210320915 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n    Checking futures-sink v0.3.31\n    Checking thiserror v2.0.16\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `pin-utils` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `futures-core` (lib) due to 1 previous error\nerror: could not compile `thiserror` (lib) due to 1 previous error\nerror: could not compile `futures-sink` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-serial, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-serial\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:57.185438119 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-serial v0.4.2 (current)\nerror: running cargo-doc on crate 'rdif-serial' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n    Checking futures-sink v0.3.31\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `futures-sink` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-serial v0.4.2\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-serial &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-serial v0.4.2\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-systick",
      "count": 6,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-systick, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-systick\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-26 4:31:25.494173436 +08:00:00\n   Compiling rdif-systick v0.5.1 (/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-systick)\nerror[E0658]: cannot cast `dyn Interface` to `dyn rdif_base::Any`, trait upcasting coercion is experimental\n  --> interface/rdif-systick/src/lib.rs:29:1\n   |\n29 | def_driver!(Systick, Interface);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `&dyn Interface` into `&(dyn rdif_base::Any + 'static)`\n   = note: this error originates in the macro `def_driver` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0658]: cannot cast `dyn Interface` to `dyn rdif_base::Any`, trait upcasting coercion is experimental\n  --> interface/rdif-systick/src/lib.rs:29:1\n   |\n29 | def_driver!(Systick, Interface);\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `&mut (dyn Interface + 'static)` into `&mut (dyn rdif_base::Any + 'static)`\n   = note: this error originates in the macro `def_driver` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `rdif-systick` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-systick, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-systick\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:57.187027185 +08:00:00\n    Building rdif-systick v0.5.1 (current)\nerror: running cargo-doc on crate 'rdif-systick' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-systick v0.5.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-systick &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-systick v0.5.1\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-systick, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-systick\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:24.21243313 +08:00:00\n    Checking thiserror v2.0.16\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `thiserror` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-systick, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-systick\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:24.482666498 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking thiserror v2.0.16\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `thiserror` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-systick, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-systick\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:57.952625702 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-systick v0.5.1 (current)\nerror: running cargo-doc on crate 'rdif-systick' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-systick v0.5.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-systick &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-systick v0.5.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-net",
      "count": 5,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-net, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-net\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:54.11753849 +08:00:00\n    Building rdif-net v0.1.0 (current)\nerror: running cargo-doc on crate 'rdif-net' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-net v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-net v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-net, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-net\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:23.09720423 +08:00:00\n    Checking as-any v0.3.2\n    Checking thiserror v2.0.16\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `thiserror` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-net, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-net\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:23.371001855 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking as-any v0.3.2\n    Checking thiserror v2.0.16\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `thiserror` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-net, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-net\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:54.884507651 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-net v0.1.0 (current)\nerror: running cargo-doc on crate 'rdif-net' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-net v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-net v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-timer",
      "count": 5,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_4/drivercraft/rdrive/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.18.5\n│   └── sparreal-kernel 0.12.0\n│       ├── sparreal-rt 0.12.1\n│       │   └── bare-test 0.7.0\n│       │       └── pcie 0.4.5\n│       │           └── rdrive 0.18.5\n│       │               └── enumerate 0.1.0\n│       └── bare-test 0.7.0\n├── rdrive 0.18.5\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-systick 0.5.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-power 0.6.1\n│   │   ├── sparreal-rt 0.12.1\n│   │   └── sparreal-kernel 0.12.0\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   │       └── rdrive 0.18.5\n│   └── rdif-intc 0.12.1\n│       ├── sparreal-rt 0.12.1\n│       ├── sparreal-kernel 0.12.0\n│       └── arm-gic-driver 0.15.8\n│           └── sparreal-rt 0.12.1\n├── rdif-base 0.7.0\n│   ├── rdrive 0.18.5\n│   ├── rdif-timer 0.5.0\n│   ├── rdif-systick 0.5.1\n│   ├── rdif-serial 0.4.2\n│   │   └── rdrive 0.18.5\n│   ├── rdif-power 0.6.1\n│   ├── rdif-pcie 0.1.3\n│   │   ├── rdrive 0.18.5\n│   │   └── pcie 0.4.5\n│   ├── rdif-net 0.1.0\n│   ├── rdif-intc 0.12.1\n│   │   ├── rdrive 0.18.5\n│   │   └── enumerate 0.1.0\n│   ├── rdif-clk 0.4.2\n│   └── rdif-block 0.6.2\n└── arm-gic-driver 0.15.8\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 359\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-timer, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-timer\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:57.954291199 +08:00:00\n    Building rdif-timer v0.5.0 (current)\nerror: running cargo-doc on crate 'rdif-timer' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-timer v0.5.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-timer &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-timer v0.5.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-timer, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-timer\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:24.484823638 +08:00:00\n    Checking thiserror v2.0.16\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `thiserror` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-timer, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-timer\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:24.755708245 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking thiserror v2.0.16\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `thiserror` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-timer, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-timer\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:58.72198057 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-timer v0.5.0 (current)\nerror: running cargo-doc on crate 'rdif-timer' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-timer v0.5.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-timer &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-timer v0.5.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-base",
      "count": 4,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-base, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-base\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:47.79239536 +08:00:00\n    Building rdif-base v0.7.0 (current)\nerror: running cargo-doc on crate 'rdif-base' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-base v0.7.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-base &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-base v0.7.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-base, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-base\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:16.138652203 +08:00:00\n   Compiling proc-macro2 v1.0.101\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-base, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-base\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:16.719724479 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.101\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-base, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-base\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:48.561703575 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-base v0.7.0 (current)\nerror: running cargo-doc on crate 'rdif-base' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling paste v1.0.15\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rdif-base v0.7.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-base &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-base v0.7.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdif-def",
      "count": 4,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-def, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-def\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-26 4:30:50.222471541 +08:00:00\n    Building rdif-def v0.2.0 (current)\nerror: running cargo-doc on crate 'rdif-def' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling quote v1.0.40\n   Compiling syn v2.0.106\n   Compiling thiserror-impl v2.0.16\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `thiserror` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate rdif-def v0.2.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-def &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-def v0.2.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdif-def, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-def\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \n// timestamp=2025-09-26 4:32:19.620676749 +08:00:00\n   Compiling syn v2.0.106\n   Compiling thiserror-impl v2.0.16\n    Checking thiserror v2.0.16\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `thiserror` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=rdif-def, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-def\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none \ntimestamp=2025-09-26 4:32:21.972411791 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling syn v2.0.106\n   Compiling thiserror-impl v2.0.16\n    Checking thiserror v2.0.16\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `thiserror` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=rdif-def, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-def\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-26 4:30:53.348980846 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building rdif-def v0.2.0 (current)\nerror: running cargo-doc on crate 'rdif-def' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling thiserror v2.0.16\n   Compiling quote v1.0.40\n   Compiling syn v2.0.106\n   Compiling thiserror-impl v2.0.16\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `thiserror` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate rdif-def v0.2.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/drivercraft/rdrive/interface/rdif-def &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rdif-def v0.2.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "drivercraft",
      "repo": "rdrive",
      "pkg": "rdrive-macros",
      "count": 1,
      "raw_reports": [
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rdrive-macros, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/drivercraft/rdrive/rdrive-macros\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-26 4:31:26.162813493 +08:00:00\n   Compiling syn v2.0.106\n   Compiling rdrive-macros v0.4.1 (/home/runner/check/batch_4/drivercraft/rdrive/rdrive-macros)\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:10:12\n   |\n10 |         if let syn::Item::Static(st) = c\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:11:16\n   |\n11 |             && let syn::Expr::Struct(expr_struct) = st.expr.as_ref()\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:14:20\n   |\n14 |                 if let syn::Member::Named(ident) = &field.member\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:16:24\n   |\n16 |                     && let syn::Expr::Group(expr_group) = &field.expr\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:17:24\n   |\n17 |                     && let syn::Expr::Lit(expr_lit) = expr_group.expr.as_ref()\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> rdrive-macros/src/lib.rs:18:24\n   |\n18 |                     && let syn::Lit::Str(lit_str) = &expr_lit.lit\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `rdrive-macros` (lib) due to 6 previous errors\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}