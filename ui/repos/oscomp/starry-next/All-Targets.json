{
  "repo": {
    "user": "oscomp",
    "repo": "starry-next"
  },
  "data": [
    {
      "user": "oscomp",
      "repo": "starry-next",
      "pkg": "starry-api",
      "count": 79,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:121:5\n    |\n121 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:143:5\n    |\n143 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:182:5\n    |\n182 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:3\n    |\n115 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:3\n    |\n139 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:3\n    |\n178 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
              "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:172:38\n    |\n172 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n",
              "error[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:202:38\n    |\n202 |         entry = sym crate::platform::rust_entry_secondary,\n    |                                      ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:1\n    |\n115 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:1\n    |\n139 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:1\n    |\n178 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_6/oscomp/starry-next/Cargo.lock",
          "features": "",
          "count": 5,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-api, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:23.130512533 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry-api, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:23.471830973 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry-api, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:22.36349024 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry-api, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:22.043395896 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry-api, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:22.81053545 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-api, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo clippy --target x86_64-unknown-none  --no-deps\n// timestamp=2025-06-19 4:38:14.950831659 +08:00:00\n    Checking axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking heapless v0.7.17\n   Compiling num-traits v0.2.19\n    Checking axfs_devfs v0.1.1\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking memory_set v0.3.2\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-api, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo clippy --target loongarch64-unknown-none  --no-deps\n// timestamp=2025-06-19 4:38:14.000598348 +08:00:00\n    Checking axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking virtio-drivers v0.7.4\n    Checking cpumask v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axfs_vfs v0.1.1\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axio v0.1.1\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-api, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf  --no-deps\n// timestamp=2025-06-19 4:38:10.693924843 +08:00:00\n    Checking axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking virtio-drivers v0.7.4\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axio v0.1.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-api, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-06-19 4:38:11.687576972 +08:00:00\n    Checking axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling ctor_bare_macros v0.2.1\n    Checking zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking xmas-elf v0.9.1\n   Compiling strum_macros v0.27.1\nerror: could not compile `axhal` (lib) due to 20 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-api, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf  --no-deps\n// timestamp=2025-06-19 4:38:13.298677923 +08:00:00\n    Checking axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking memory_set v0.3.2\n    Checking cap_access v0.1.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking num-traits v0.2.19\n    Checking zero v0.1.3\n    Checking xmas-elf v0.9.1\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-api, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-06-19 4:39:56.700496493 +08:00:00\n[2025-06-18T20:39:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axfs_devfs v0.1.1\n   Compiling axfs_ramfs v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling memory_set v0.3.2\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-api, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-06-19 4:39:52.716117844 +08:00:00\n[2025-06-18T20:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling cap_access v0.1.0\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:121:5\n    |\n121 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:143:5\n    |\n143 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:182:5\n    |\n182 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling unicode-xid v0.2.6\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:347:9\n    |\n347 |         naked_asm!(\n    |         ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:3\n    |\n115 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:3\n    |\n139 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:3\n    |\n178 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:3\n    |\n344 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n   Compiling bitflags v1.3.2\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:172:38\n    |\n172 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:202:38\n    |\n202 |         entry = sym crate::platform::rust_entry_secondary,\n    |                                      ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:1\n    |\n115 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:1\n    |\n139 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:1\n    |\n178 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:1\n    |\n344 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling managed v0.8.0\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling derive_more-impl v2.0.1\n   Compiling num-traits v0.2.19\nSome errors have detailed explanations: E0425, E0432, E0658.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 20 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-api, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target loongarch64-unknown-none \n// timestamp=2025-06-19 4:39:57.222464571 +08:00:00\n[2025-06-18T20:39:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n   Compiling virtio-drivers v0.7.4\n   Compiling cpumask v0.1.0\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:379:5\n    |\n379 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:3\n    |\n377 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n   Compiling scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:1\n    |\n377 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling timer_list v0.1.0\n   Compiling axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axfs_vfs v0.1.1\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-api, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-19 4:39:58.582596922 +08:00:00\n[2025-06-18T20:39:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling virtio-drivers v0.7.4\n   Compiling heapless v0.7.17\n   Compiling hash32 v0.2.1\n   Compiling axio v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-api, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-19 4:39:59.909272925 +08:00:00\n[2025-06-18T20:39:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axfs_vfs v0.1.1\n   Compiling heapless v0.7.17\n   Compiling hash32 v0.2.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:453:5\n    |\n453 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:3\n    |\n451 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:1\n    |\n451 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:1:12\n  |\n1 | use core::{arch::naked_asm, fmt};\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axio v0.1.1\n   Compiling stable_deref_trait v1.2.0\nFor more information about this error, try `rustc --explain E0658`.\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-api, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-19 4:38:48.33600315 +08:00:00\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n   Compiling lock_api v0.4.13\n    Checking kspin v0.1.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking scopeguard v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking critical-section v1.2.0\n    Checking bitmap-allocator v0.2.0\n    Checking rlsf v0.2.1\n   Compiling riscv v0.12.1\n    Checking page_table_entry v0.5.3\n    Checking lazyinit v0.2.2\n    Checking byteorder v1.5.0\n   Compiling percpu v0.2.0\n   Compiling riscv v0.13.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking sbi-spec v0.0.7\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.2\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking page_table_multiarch v0.5.3\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n    Checking timer_list v0.1.0\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking cpumask v0.1.0\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\nFor more information about this error, try `rustc --explain E0658`.\n    Checking axfs_vfs v0.1.1\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n",
              "// pkg_name=starry-api, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none \n// timestamp=2025-06-19 4:38:46.429258938 +08:00:00\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.13\n    Checking kspin v0.1.0\n    Checking const-default v1.0.0\n    Checking scopeguard v1.2.0\n    Checking bitmap-allocator v0.2.0\n    Checking page_table_entry v0.5.3\n    Checking rlsf v0.2.1\n    Checking lazyinit v0.2.2\n    Checking byteorder v1.5.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking page_table_multiarch v0.5.3\n    Checking loongArch64 v0.2.5\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking static_assertions v1.1.0\n    Checking ns16550a v0.5.0\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking int_ratio v0.1.2\n    Checking handler_table v0.1.2\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:379:5\n    |\n379 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:3\n    |\n377 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:1\n    |\n377 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking timer_list v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n",
              "// pkg_name=starry-api, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-06-19 4:38:43.206878861 +08:00:00\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n   Compiling lock_api v0.4.13\n    Checking kspin v0.1.0\n    Checking scopeguard v1.2.0\n   Compiling riscv v0.12.1\n    Checking embedded-hal v1.0.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking critical-section v1.2.0\n    Checking riscv-pac v0.2.0\n    Checking bitmap-allocator v0.2.0\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3\n   Compiling riscv v0.13.0\n    Checking lazyinit v0.2.2\n    Checking byteorder v1.5.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling riscv-macros v0.2.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking sbi-spec v0.0.7\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking sbi-rt v0.0.3\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking int_ratio v0.1.2\n    Checking handler_table v0.1.2\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking page_table_multiarch v0.5.3\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axfs_vfs v0.1.1\n    Checking cpumask v0.1.0\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axio v0.1.1\n    Checking stable_deref_trait v1.2.0\n    Checking virtio-drivers v0.7.4\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\n    Checking axfs_devfs v0.1.1\n    Checking axfs_ramfs v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n",
              "// pkg_name=starry-api, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-06-19 4:38:36.37571252 +08:00:00\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking tock-registers v0.9.0\n   Compiling lock_api v0.4.13\n    Checking kspin v0.1.0\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.2.0\n    Checking rlsf v0.2.1\n    Checking byteorder v1.5.0\n    Checking lazyinit v0.2.2\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking arm_gicv2 v0.1.0\n    Checking dw_apb_uart v0.1.0\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking arm_pl011 v0.1.0\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.2\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axfs_vfs v0.1.1\n   Compiling heapless v0.7.17\n    Checking cpumask v0.1.0\n    Checking hash32 v0.2.1\n    Checking virtio-drivers v0.7.4\n    Checking axio v0.1.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling convert_case v0.7.1\n   Compiling num-traits v0.2.19\n    Checking axfs_devfs v0.1.1\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking cap_access v0.1.0\n    Checking memory_set v0.3.2\n   Compiling unicode-xid v0.2.6\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling derive_more-impl v2.0.1\n    Checking page_table_entry v0.5.3\n    Checking page_table_multiarch v0.5.3\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:121:5\n    |\n121 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:143:5\n    |\n143 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:182:5\n    |\n182 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:347:9\n    |\n347 |         naked_asm!(\n    |         ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:3\n    |\n115 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:3\n    |\n139 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:3\n    |\n178 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:3\n    |\n344 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:172:38\n    |\n172 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:202:38\n    |\n202 |         entry = sym crate::platform::rust_entry_secondary,\n    |                                      ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:1\n    |\n115 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:1\n    |\n139 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:1\n    |\n178 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:1\n    |\n344 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nSome errors have detailed explanations: E0425, E0432, E0658.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 20 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n",
              "// pkg_name=starry-api, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-19 4:38:21.976538009 +08:00:00\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.5.0\n   Compiling utf8parse v0.2.2\n    Checking cfg-if v1.0.1\n   Compiling anstyle-parse v0.2.7\n   Compiling rustversion v1.0.21\n   Compiling colorchoice v1.0.4\n   Compiling anstyle v1.0.11\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstyle-query v1.1.3\n   Compiling heck v0.5.0\n   Compiling anstream v0.6.19\n   Compiling clap_lex v0.7.5\n   Compiling quote v1.0.40\n   Compiling strsim v0.11.1\n   Compiling axerrno v0.1.0\n   Compiling syn v2.0.103\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling clap_builder v4.5.40\n   Compiling indexmap v2.9.0\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking bitflags v1.3.2\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n    Checking memory_addr v0.3.2\n    Checking scopeguard v1.2.0\n   Compiling toml_edit v0.22.27\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-width v0.1.14\n   Compiling x86 v0.52.0\n   Compiling base64 v0.13.1\n    Checking x86_64 v0.15.2\n   Compiling svgbobdoc v0.3.0\n   Compiling paste v1.0.15\n   Compiling linkme-impl v0.3.33\n   Compiling clap_derive v4.5.40\n   Compiling crate_interface v0.1.4\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.0\n    Checking bitmap-allocator v0.2.0\n    Checking byteorder v1.5.0\n    Checking lazyinit v0.2.2\n   Compiling percpu v0.2.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling percpu_macros v0.2.0\n    Checking spin v0.9.8\n    Checking x86_64 v0.14.13\n    Checking bit v0.1.1\n    Checking linkme v0.3.33\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking raw-cpuid v11.5.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.2\n    Checking static_assertions v1.1.0\n   Compiling zerocopy-derive v0.7.35\n   Compiling clap v4.5.40\n   Compiling axconfig-gen v0.1.0\n    Checking x2apic v0.4.3\n    Checking bitmaps v3.2.1\n   Compiling semver v1.0.26\n    Checking zerocopy v0.7.35\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking cpumask v0.1.0\n   Compiling axconfig-gen-macros v0.1.0\n    Checking timer_list v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling rustc_version v0.4.1\n    Checking virtio-drivers v0.7.4\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling heapless v0.7.17\n    Checking axfs_vfs v0.1.1\n    Checking hash32 v0.2.1\n    Checking axio v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:453:5\n    |\n453 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:3\n    |\n451 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:1\n    |\n451 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:1:12\n  |\n1 | use core::{arch::naked_asm, fmt};\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n   Compiling num-traits v0.2.19\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling unicode-segmentation v1.12.0\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 5,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-18T20:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 5,
          "kinds": {
            "Outdated": [
              "pkg=starry-api, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-19 4:40:41.803563065 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\n",
              "pkg=starry-api, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-19 4:40:28.460654763 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\n",
              "pkg=starry-api, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-19 4:40:31.620557363 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\n",
              "pkg=starry-api, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-19 4:40:34.786035574 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\n",
              "pkg=starry-api, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-19 4:40:38.435655701 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.9.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 5,
          "kinds": {
            "Semver Violation": [
              "pkg=starry-api, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-19 4:38:50.467527134 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n   Compiling lock_api v0.4.13\n    Checking kspin v0.1.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking scopeguard v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking critical-section v1.2.0\n    Checking bitmap-allocator v0.2.0\n    Checking rlsf v0.2.1\n   Compiling riscv v0.12.1\n    Checking page_table_entry v0.5.3\n    Checking lazyinit v0.2.2\n    Checking byteorder v1.5.0\n   Compiling percpu v0.2.0\n   Compiling riscv v0.13.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking sbi-spec v0.0.7\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.2\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking page_table_multiarch v0.5.3\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n    Checking timer_list v0.1.0\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking cpumask v0.1.0\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\nFor more information about this error, try `rustc --explain E0658`.\n    Checking axfs_vfs v0.1.1\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n",
              "pkg=starry-api, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-06-19 4:38:46.426355198 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n   Compiling lock_api v0.4.13\n    Checking kspin v0.1.0\n    Checking scopeguard v1.2.0\n   Compiling riscv v0.12.1\n    Checking embedded-hal v1.0.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking critical-section v1.2.0\n    Checking riscv-pac v0.2.0\n    Checking bitmap-allocator v0.2.0\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3\n   Compiling riscv v0.13.0\n    Checking lazyinit v0.2.2\n    Checking byteorder v1.5.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling riscv-macros v0.2.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking sbi-spec v0.0.7\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking sbi-rt v0.0.3\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking int_ratio v0.1.2\n    Checking handler_table v0.1.2\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking page_table_multiarch v0.5.3\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axfs_vfs v0.1.1\n    Checking cpumask v0.1.0\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axio v0.1.1\n    Checking stable_deref_trait v1.2.0\n    Checking virtio-drivers v0.7.4\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\n    Checking axfs_devfs v0.1.1\n    Checking axfs_ramfs v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n",
              "pkg=starry-api, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-19 4:38:36.373505671 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.5.0\n   Compiling utf8parse v0.2.2\n    Checking cfg-if v1.0.1\n   Compiling anstyle-parse v0.2.7\n   Compiling rustversion v1.0.21\n   Compiling colorchoice v1.0.4\n   Compiling anstyle v1.0.11\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling anstyle-query v1.1.3\n   Compiling heck v0.5.0\n   Compiling anstream v0.6.19\n   Compiling clap_lex v0.7.5\n   Compiling quote v1.0.40\n   Compiling strsim v0.11.1\n   Compiling axerrno v0.1.0\n   Compiling syn v2.0.103\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling clap_builder v4.5.40\n   Compiling indexmap v2.9.0\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling lock_api v0.4.13\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking bitflags v1.3.2\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n    Checking memory_addr v0.3.2\n    Checking scopeguard v1.2.0\n   Compiling toml_edit v0.22.27\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-width v0.1.14\n   Compiling x86 v0.52.0\n   Compiling base64 v0.13.1\n    Checking x86_64 v0.15.2\n   Compiling svgbobdoc v0.3.0\n   Compiling paste v1.0.15\n   Compiling linkme-impl v0.3.33\n   Compiling clap_derive v4.5.40\n   Compiling crate_interface v0.1.4\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.0\n    Checking bitmap-allocator v0.2.0\n    Checking byteorder v1.5.0\n    Checking lazyinit v0.2.2\n   Compiling percpu v0.2.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling percpu_macros v0.2.0\n    Checking spin v0.9.8\n    Checking x86_64 v0.14.13\n    Checking bit v0.1.1\n    Checking linkme v0.3.33\n    Checking page_table_multiarch v0.5.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking raw-cpuid v11.5.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.2\n    Checking static_assertions v1.1.0\n   Compiling zerocopy-derive v0.7.35\n   Compiling clap v4.5.40\n   Compiling axconfig-gen v0.1.0\n    Checking x2apic v0.4.3\n    Checking bitmaps v3.2.1\n   Compiling semver v1.0.26\n    Checking zerocopy v0.7.35\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking cpumask v0.1.0\n   Compiling axconfig-gen-macros v0.1.0\n    Checking timer_list v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling rustc_version v0.4.1\n    Checking virtio-drivers v0.7.4\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling heapless v0.7.17\n    Checking axfs_vfs v0.1.1\n    Checking hash32 v0.2.1\n    Checking axio v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:453:5\n    |\n453 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:3\n    |\n451 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:1\n    |\n451 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:1:12\n  |\n1 | use core::{arch::naked_asm, fmt};\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n   Compiling num-traits v0.2.19\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling unicode-segmentation v1.12.0\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n",
              "pkg=starry-api, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-06-19 4:38:43.204494277 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking tock-registers v0.9.0\n   Compiling lock_api v0.4.13\n    Checking kspin v0.1.0\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.2.0\n    Checking rlsf v0.2.1\n    Checking byteorder v1.5.0\n    Checking lazyinit v0.2.2\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking arm_gicv2 v0.1.0\n    Checking dw_apb_uart v0.1.0\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking arm_pl011 v0.1.0\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.2\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axfs_vfs v0.1.1\n   Compiling heapless v0.7.17\n    Checking cpumask v0.1.0\n    Checking hash32 v0.2.1\n    Checking virtio-drivers v0.7.4\n    Checking axio v0.1.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling convert_case v0.7.1\n   Compiling num-traits v0.2.19\n    Checking axfs_devfs v0.1.1\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking cap_access v0.1.0\n    Checking memory_set v0.3.2\n   Compiling unicode-xid v0.2.6\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling derive_more-impl v2.0.1\n    Checking page_table_entry v0.5.3\n    Checking page_table_multiarch v0.5.3\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:121:5\n    |\n121 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:143:5\n    |\n143 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:182:5\n    |\n182 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:347:9\n    |\n347 |         naked_asm!(\n    |         ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:3\n    |\n115 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:3\n    |\n139 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:3\n    |\n178 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:3\n    |\n344 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:172:38\n    |\n172 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:202:38\n    |\n202 |         entry = sym crate::platform::rust_entry_secondary,\n    |                                      ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:1\n    |\n115 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:1\n    |\n139 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:1\n    |\n178 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:1\n    |\n344 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nSome errors have detailed explanations: E0425, E0432, E0658.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 20 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n",
              "pkg=starry-api, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none \ntimestamp=2025-06-19 4:38:48.334119507 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-api v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-api' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.13\n    Checking kspin v0.1.0\n    Checking const-default v1.0.0\n    Checking scopeguard v1.2.0\n    Checking bitmap-allocator v0.2.0\n    Checking page_table_entry v0.5.3\n    Checking rlsf v0.2.1\n    Checking lazyinit v0.2.2\n    Checking byteorder v1.5.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking page_table_multiarch v0.5.3\n    Checking loongArch64 v0.2.5\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking static_assertions v1.1.0\n    Checking ns16550a v0.5.0\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking int_ratio v0.1.2\n    Checking handler_table v0.1.2\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:379:5\n    |\n379 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:3\n    |\n377 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:1\n    |\n377 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking timer_list v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/api &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-api v0.1.0\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:347:9\n    |\n347 |         naked_asm!(\n    |         ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:3\n    |\n344 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:1\n    |\n344 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:379:5\n    |\n379 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:3\n    |\n377 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:1\n    |\n377 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:453:5\n    |\n453 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:3\n    |\n451 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:1\n    |\n451 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:1:12\n  |\n1 | use core::{arch::naked_asm, fmt};\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n",
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n",
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\n",
              "error[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        }
      ]
    },
    {
      "user": "oscomp",
      "repo": "starry-next",
      "pkg": "starry-core",
      "count": 71,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:121:5\n    |\n121 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:143:5\n    |\n143 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:3\n    |\n115 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:3\n    |\n139 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
              "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:172:38\n    |\n172 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:1\n    |\n115 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:1\n    |\n139 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_6/oscomp/starry-next/Cargo.lock",
          "features": "",
          "count": 5,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-core, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:24.866666766 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry-core, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:25.229824871 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry-core, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:24.175097558 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry-core, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:23.827511404 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry-core, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:24.513583716 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-core, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-06-19 4:38:19.639066909 +08:00:00\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking derive_more v2.0.1\n    Checking weak-map v0.1.0 (https://github.com/Starry-OS/weak-map.git#6a528cb1)\n    Checking linux-raw-sys v0.9.4\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axprocess v0.1.0 (https://github.com/Starry-OS/axprocess.git#f6f0d08f)\n    Checking kernel-elf-parser v0.3.2\n    Checking numeric-enum-macro v0.2.0\nerror: could not compile `axhal` (lib) due to 14 previous errors\n",
              "// pkg_name=starry-core, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf  --no-deps\n// timestamp=2025-06-19 4:38:18.841664898 +08:00:00\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking derive_more v2.0.1\n    Checking axfs_ramfs v0.1.1\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking xmas-elf v0.9.1\n    Checking axfs_devfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking memory_set v0.3.2\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking cap_access v0.1.0\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-core, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf  --no-deps\n// timestamp=2025-06-19 4:38:15.78571156 +08:00:00\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking derive_more v2.0.1\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linux-raw-sys v0.9.4\n    Checking weak-map v0.1.0 (https://github.com/Starry-OS/weak-map.git#6a528cb1)\n    Checking kernel-elf-parser v0.3.2\n    Checking axprocess v0.1.0 (https://github.com/Starry-OS/axprocess.git#f6f0d08f)\n    Checking numeric-enum-macro v0.2.0\nerror: could not compile `axhal` (lib) due to 4 previous errors\n",
              "// pkg_name=starry-core, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo clippy --target x86_64-unknown-none  --no-deps\n// timestamp=2025-06-19 4:38:17.391887489 +08:00:00\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking derive_more v2.0.1\n    Checking cap_access v0.1.0\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking xmas-elf v0.9.1\n    Checking linux-raw-sys v0.9.4\n    Checking weak-map v0.1.0 (https://github.com/Starry-OS/weak-map.git#6a528cb1)\n    Checking axprocess v0.1.0 (https://github.com/Starry-OS/axprocess.git#f6f0d08f)\n    Checking numeric-enum-macro v0.2.0\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-core, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo clippy --target loongarch64-unknown-none  --no-deps\n// timestamp=2025-06-19 4:38:17.973576652 +08:00:00\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking derive_more v2.0.1\n    Checking axfs_devfs v0.1.1\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking xmas-elf v0.9.1\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking memory_set v0.3.2\n    Checking cap_access v0.1.0\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking linux-raw-sys v0.9.4\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-core, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-19 4:40:02.294124649 +08:00:00\n[2025-06-18T20:39:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n   Compiling derive_more v2.0.1\n   Compiling axfs_devfs v0.1.1\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling xmas-elf v0.9.1\n   Compiling axfs_ramfs v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:453:5\n    |\n453 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:3\n    |\n451 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:1\n    |\n451 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:1:12\n  |\n1 | use core::{arch::naked_asm, fmt};\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling memory_set v0.3.2\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-core, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target loongarch64-unknown-none \n// timestamp=2025-06-19 4:40:00.344275685 +08:00:00\n[2025-06-18T20:39:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n   Compiling zero v0.1.3\n   Compiling strum_macros v0.27.1\n   Compiling xmas-elf v0.9.1\n   Compiling derive_more v2.0.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:379:5\n    |\n379 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:3\n    |\n377 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:1\n    |\n377 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling axfs_devfs v0.1.1\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-core, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-19 4:40:03.020609204 +08:00:00\n[2025-06-18T20:39:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n   Compiling derive_more v2.0.1\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling xmas-elf v0.9.1\n   Compiling axfs_devfs v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling axfs_ramfs v0.1.1\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-core, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-06-19 4:40:03.745513912 +08:00:00\n[2025-06-18T20:39:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n   Compiling derive_more v2.0.1\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling xmas-elf v0.9.1\n   Compiling cap_access v0.1.0\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n   Compiling linux-raw-sys v0.9.4\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry-core, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-06-19 4:40:04.732345836 +08:00:00\n[2025-06-18T20:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n   Compiling derive_more v2.0.1\n   Compiling linux-raw-sys v0.9.4\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling xmas-elf v0.9.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:121:5\n    |\n121 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:143:5\n    |\n143 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:347:9\n    |\n347 |         naked_asm!(\n    |         ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:3\n    |\n115 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:3\n    |\n139 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:3\n    |\n344 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:172:38\n    |\n172 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:1\n    |\n115 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:1\n    |\n139 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:1\n    |\n344 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling weak-map v0.1.0 (https://github.com/Starry-OS/weak-map.git#6a528cb1)\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling axprocess v0.1.0 (https://github.com/Starry-OS/axprocess.git#f6f0d08f)\n   Compiling numeric-enum-macro v0.2.0\nSome errors have detailed explanations: E0425, E0432, E0658.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 14 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry-core, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-19 4:39:15.788064238 +08:00:00\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.0\n    Checking critical-section v1.2.0\n    Checking const-default v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking bit_field v0.10.2\n    Checking embedded-hal v1.0.0\n   Compiling riscv v0.12.1\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3\n    Checking bitmap-allocator v0.2.0\n    Checking lazyinit v0.2.2\n   Compiling percpu v0.2.0\n   Compiling riscv v0.13.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling lock_api v0.4.13\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking scopeguard v1.2.0\n    Checking int_ratio v0.1.2\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking byteorder v1.5.0\n    Checking page_table_multiarch v0.5.3\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking spin v0.9.8\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking axfs_vfs v0.1.1\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n",
              "// pkg_name=starry-core, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none \n// timestamp=2025-06-19 4:39:13.772910765 +08:00:00\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking bit_field v0.10.2\n    Checking kspin v0.1.0\n    Checking const-default v1.0.0\n    Checking page_table_entry v0.5.3\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.2.0\n    Checking lazyinit v0.2.2\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling lock_api v0.4.13\n    Checking page_table_multiarch v0.5.3\n    Checking loongArch64 v0.2.5\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking scopeguard v1.2.0\n    Checking int_ratio v0.1.2\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking handler_table v0.1.2\n    Checking ns16550a v0.5.0\n    Checking static_assertions v1.1.0\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking byteorder v1.5.0\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:379:5\n    |\n379 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:3\n    |\n377 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:1\n    |\n377 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking timer_list v0.1.0\n    Checking spin v0.9.8\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n",
              "// pkg_name=starry-core, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-06-19 4:39:10.415793281 +08:00:00\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.0\n    Checking critical-section v1.2.0\n    Checking const-default v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking bit_field v0.10.2\n   Compiling riscv v0.12.1\n    Checking riscv-pac v0.2.0\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3\n    Checking bitmap-allocator v0.2.0\n    Checking lazyinit v0.2.2\n   Compiling riscv v0.13.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling riscv-macros v0.2.0\n    Checking sbi-spec v0.0.7\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling lock_api v0.4.13\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking int_ratio v0.1.2\n    Checking handler_table v0.1.2\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking byteorder v1.5.0\n    Checking page_table_multiarch v0.5.3\n    Checking bitmaps v3.2.1\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking zerocopy v0.7.35\n    Checking timer_list v0.1.0\n    Checking spin v0.9.8\n    Checking axfs_vfs v0.1.1\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking xmas-elf v0.9.1\n    Checking cpumask v0.1.0\n    Checking derive_more v2.0.1\n    Checking virtio-drivers v0.7.4\n    Checking axfs_devfs v0.1.1\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking axio v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking cap_access v0.1.0\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n",
              "// pkg_name=starry-core, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-06-19 4:39:05.97997294 +08:00:00\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking tock-registers v0.9.0\n    Checking kspin v0.1.0\n    Checking tock-registers v0.8.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v10.0.0\n    Checking const-default v1.0.0\n    Checking lazyinit v0.2.2\n   Compiling percpu v0.2.0\n    Checking rlsf v0.2.1\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking bitmap-allocator v0.2.0\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling lock_api v0.4.13\n    Checking arm_gicv2 v0.1.0\n    Checking dw_apb_uart v0.1.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking arm_pl011 v0.1.0\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.2\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking byteorder v1.5.0\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking spin v0.9.8\n    Checking axfs_vfs v0.1.1\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking zero v0.1.3\n    Checking cpumask v0.1.0\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking xmas-elf v0.9.1\n   Compiling strum_macros v0.27.1\n    Checking virtio-drivers v0.7.4\n    Checking derive_more v2.0.1\n    Checking axfs_ramfs v0.1.1\n    Checking axfs_devfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axio v0.1.1\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking cap_access v0.1.0\n    Checking page_table_entry v0.5.3\n    Checking memory_set v0.3.2\n    Checking weak-map v0.1.0 (https://github.com/Starry-OS/weak-map.git#b19a081d)\n    Checking linux-raw-sys v0.9.4\n    Checking axprocess v0.1.0 (https://github.com/Starry-OS/axprocess.git#57d44806)\n    Checking page_table_multiarch v0.5.3\n    Checking kernel-elf-parser v0.3.3\n    Checking numeric-enum-macro v0.2.0\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:121:5\n    |\n121 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:143:5\n    |\n143 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:347:9\n    |\n347 |         naked_asm!(\n    |         ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:3\n    |\n115 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:3\n    |\n139 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:3\n    |\n344 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:172:38\n    |\n172 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:1\n    |\n115 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:1\n    |\n139 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:1\n    |\n344 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nSome errors have detailed explanations: E0425, E0432, E0658.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 14 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n",
              "// pkg_name=starry-core, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-19 4:38:50.469918658 +08:00:00\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking bitflags v2.9.1\n    Checking log v0.4.21\n    Checking bit_field v0.10.2\n   Compiling utf8parse v0.2.2\n   Compiling colorchoice v1.0.4\n   Compiling anstyle-parse v0.2.7\n   Compiling rustversion v1.0.21\n   Compiling anstyle v1.0.11\n    Checking cfg-if v1.0.1\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling heck v0.5.0\n   Compiling anstyle-query v1.1.3\n   Compiling anstream v0.6.19\n   Compiling equivalent v1.0.2\n   Compiling clap_lex v0.7.5\n   Compiling axerrno v0.1.0\n   Compiling strsim v0.11.1\n   Compiling hashbrown v0.15.4\n   Compiling quote v1.0.40\n   Compiling syn v2.0.103\n   Compiling clap_builder v4.5.40\n   Compiling indexmap v2.9.0\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n    Checking volatile v0.4.6\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling syn v1.0.109\n    Checking bitflags v1.3.2\n    Checking memory_addr v0.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling x86 v0.52.0\n    Checking x86_64 v0.15.2\n   Compiling svgbobdoc v0.3.0\n   Compiling linkme-impl v0.3.33\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3\n    Checking bitmap-allocator v0.2.0\n   Compiling percpu v0.2.0\n   Compiling clap_derive v4.5.40\n   Compiling crate_interface v0.1.4\n    Checking lazyinit v0.2.2\n   Compiling autocfg v1.5.0\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.0\n   Compiling lock_api v0.4.13\n   Compiling percpu_macros v0.2.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking x86_64 v0.14.13\n    Checking bit v0.1.1\n    Checking linkme v0.3.33\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking page_table_multiarch v0.5.3\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking raw-cpuid v11.5.0\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.2\n    Checking scopeguard v1.2.0\n   Compiling zerocopy-derive v0.7.35\n    Checking x2apic v0.4.3\n   Compiling clap v4.5.40\n   Compiling axconfig-gen v0.1.0\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking bitmaps v3.2.1\n    Checking byteorder v1.5.0\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n   Compiling unicode-segmentation v1.12.0\n    Checking zerocopy v0.7.35\n    Checking cpumask v0.1.0\n    Checking timer_list v0.1.0\n   Compiling convert_case v0.7.1\n    Checking spin v0.9.8\n   Compiling axconfig-gen-macros v0.1.0\n    Checking axfs_vfs v0.1.1\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking virtio-drivers v0.7.4\n   Compiling unicode-xid v0.2.6\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling derive_more-impl v2.0.1\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking xmas-elf v0.9.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:453:5\n    |\n453 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:3\n    |\n451 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:1\n    |\n451 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:1:12\n  |\n1 | use core::{arch::naked_asm, fmt};\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking axfs_devfs v0.1.1\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 5,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-18T20:39:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 5,
          "kinds": {
            "Outdated": [
              "pkg=starry-core, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-19 4:40:57.980452721 +08:00:00\n\nName               Project  Compat  Latest  Kind    Platform\n----               -------  ------  ------  ----    --------\nkernel-elf-parser  0.3.2    0.3.3   0.3.3   Normal  ---\nxmas-elf           0.9.1    ---     0.10.0  Normal  ---\n",
              "pkg=starry-core, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-19 4:40:45.037150259 +08:00:00\n\nName               Project  Compat  Latest  Kind    Platform\n----               -------  ------  ------  ----    --------\nkernel-elf-parser  0.3.2    0.3.3   0.3.3   Normal  ---\nxmas-elf           0.9.1    ---     0.10.0  Normal  ---\n",
              "pkg=starry-core, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-19 4:40:48.205811135 +08:00:00\n\nName               Project  Compat  Latest  Kind    Platform\n----               -------  ------  ------  ----    --------\nkernel-elf-parser  0.3.2    0.3.3   0.3.3   Normal  ---\nxmas-elf           0.9.1    ---     0.10.0  Normal  ---\n",
              "pkg=starry-core, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-19 4:40:51.412456402 +08:00:00\n\nName               Project  Compat  Latest  Kind    Platform\n----               -------  ------  ------  ----    --------\nkernel-elf-parser  0.3.2    0.3.3   0.3.3   Normal  ---\nxmas-elf           0.9.1    ---     0.10.0  Normal  ---\n",
              "pkg=starry-core, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-19 4:40:54.603996835 +08:00:00\n\nName               Project  Compat  Latest  Kind    Platform\n----               -------  ------  ------  ----    --------\nkernel-elf-parser  0.3.2    0.3.3   0.3.3   Normal  ---\nxmas-elf           0.9.1    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 5,
          "kinds": {
            "Semver Violation": [
              "pkg=starry-core, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-19 4:39:18.179373559 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.0\n    Checking critical-section v1.2.0\n    Checking const-default v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking bit_field v0.10.2\n    Checking embedded-hal v1.0.0\n   Compiling riscv v0.12.1\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3\n    Checking bitmap-allocator v0.2.0\n    Checking lazyinit v0.2.2\n   Compiling percpu v0.2.0\n   Compiling riscv v0.13.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling lock_api v0.4.13\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking scopeguard v1.2.0\n    Checking int_ratio v0.1.2\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking byteorder v1.5.0\n    Checking page_table_multiarch v0.5.3\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking spin v0.9.8\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking axfs_vfs v0.1.1\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n",
              "pkg=starry-core, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-06-19 4:39:13.771138229 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.0\n    Checking critical-section v1.2.0\n    Checking const-default v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking bit_field v0.10.2\n   Compiling riscv v0.12.1\n    Checking riscv-pac v0.2.0\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3\n    Checking bitmap-allocator v0.2.0\n    Checking lazyinit v0.2.2\n   Compiling riscv v0.13.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling riscv-macros v0.2.0\n    Checking sbi-spec v0.0.7\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling lock_api v0.4.13\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking int_ratio v0.1.2\n    Checking handler_table v0.1.2\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking byteorder v1.5.0\n    Checking page_table_multiarch v0.5.3\n    Checking bitmaps v3.2.1\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking zerocopy v0.7.35\n    Checking timer_list v0.1.0\n    Checking spin v0.9.8\n    Checking axfs_vfs v0.1.1\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking xmas-elf v0.9.1\n    Checking cpumask v0.1.0\n    Checking derive_more v2.0.1\n    Checking virtio-drivers v0.7.4\n    Checking axfs_devfs v0.1.1\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking axio v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking cap_access v0.1.0\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n",
              "pkg=starry-core, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-19 4:39:05.978201045 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking bitflags v2.9.1\n    Checking log v0.4.21\n    Checking bit_field v0.10.2\n   Compiling utf8parse v0.2.2\n   Compiling colorchoice v1.0.4\n   Compiling anstyle-parse v0.2.7\n   Compiling rustversion v1.0.21\n   Compiling anstyle v1.0.11\n    Checking cfg-if v1.0.1\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling heck v0.5.0\n   Compiling anstyle-query v1.1.3\n   Compiling anstream v0.6.19\n   Compiling equivalent v1.0.2\n   Compiling clap_lex v0.7.5\n   Compiling axerrno v0.1.0\n   Compiling strsim v0.11.1\n   Compiling hashbrown v0.15.4\n   Compiling quote v1.0.40\n   Compiling syn v2.0.103\n   Compiling clap_builder v4.5.40\n   Compiling indexmap v2.9.0\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n    Checking volatile v0.4.6\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling syn v1.0.109\n    Checking bitflags v1.3.2\n    Checking memory_addr v0.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling x86 v0.52.0\n    Checking x86_64 v0.15.2\n   Compiling svgbobdoc v0.3.0\n   Compiling linkme-impl v0.3.33\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3\n    Checking bitmap-allocator v0.2.0\n   Compiling percpu v0.2.0\n   Compiling clap_derive v4.5.40\n   Compiling crate_interface v0.1.4\n    Checking lazyinit v0.2.2\n   Compiling autocfg v1.5.0\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.0\n   Compiling lock_api v0.4.13\n   Compiling percpu_macros v0.2.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking x86_64 v0.14.13\n    Checking bit v0.1.1\n    Checking linkme v0.3.33\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking page_table_multiarch v0.5.3\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking raw-cpuid v11.5.0\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.2\n    Checking scopeguard v1.2.0\n   Compiling zerocopy-derive v0.7.35\n    Checking x2apic v0.4.3\n   Compiling clap v4.5.40\n   Compiling axconfig-gen v0.1.0\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking bitmaps v3.2.1\n    Checking byteorder v1.5.0\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n   Compiling unicode-segmentation v1.12.0\n    Checking zerocopy v0.7.35\n    Checking cpumask v0.1.0\n    Checking timer_list v0.1.0\n   Compiling convert_case v0.7.1\n    Checking spin v0.9.8\n   Compiling axconfig-gen-macros v0.1.0\n    Checking axfs_vfs v0.1.1\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking virtio-drivers v0.7.4\n   Compiling unicode-xid v0.2.6\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling derive_more-impl v2.0.1\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking zero v0.1.3\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking xmas-elf v0.9.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:453:5\n    |\n453 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:3\n    |\n451 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:1\n    |\n451 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:1:12\n  |\n1 | use core::{arch::naked_asm, fmt};\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking axfs_devfs v0.1.1\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n",
              "pkg=starry-core, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-06-19 4:39:10.413892373 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking tock-registers v0.9.0\n    Checking kspin v0.1.0\n    Checking tock-registers v0.8.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v10.0.0\n    Checking const-default v1.0.0\n    Checking lazyinit v0.2.2\n   Compiling percpu v0.2.0\n    Checking rlsf v0.2.1\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking bitmap-allocator v0.2.0\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling lock_api v0.4.13\n    Checking arm_gicv2 v0.1.0\n    Checking dw_apb_uart v0.1.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking arm_pl011 v0.1.0\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.2\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking byteorder v1.5.0\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking spin v0.9.8\n    Checking axfs_vfs v0.1.1\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking zero v0.1.3\n    Checking cpumask v0.1.0\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git?rev=b5b6089#b5b6089c)\n    Checking xmas-elf v0.9.1\n   Compiling strum_macros v0.27.1\n    Checking virtio-drivers v0.7.4\n    Checking derive_more v2.0.1\n    Checking axfs_ramfs v0.1.1\n    Checking axfs_devfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axio v0.1.1\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking cap_access v0.1.0\n    Checking page_table_entry v0.5.3\n    Checking memory_set v0.3.2\n    Checking weak-map v0.1.0 (https://github.com/Starry-OS/weak-map.git#b19a081d)\n    Checking linux-raw-sys v0.9.4\n    Checking axprocess v0.1.0 (https://github.com/Starry-OS/axprocess.git#57d44806)\n    Checking page_table_multiarch v0.5.3\n    Checking kernel-elf-parser v0.3.3\n    Checking numeric-enum-macro v0.2.0\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:121:5\n    |\n121 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:143:5\n    |\n143 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:347:9\n    |\n347 |         naked_asm!(\n    |         ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:3\n    |\n115 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:3\n    |\n139 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:3\n    |\n344 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:172:38\n    |\n172 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:1\n    |\n115 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:1\n    |\n139 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:1\n    |\n344 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nSome errors have detailed explanations: E0425, E0432, E0658.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 14 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n",
              "pkg=starry-core, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/core\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none \ntimestamp=2025-06-19 4:39:15.785731263 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building starry-core v0.1.0 (current)\nerror: running cargo-doc on crate 'starry-core' failed with output:\n-----\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking bit_field v0.10.2\n    Checking kspin v0.1.0\n    Checking const-default v1.0.0\n    Checking page_table_entry v0.5.3\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.2.0\n    Checking lazyinit v0.2.2\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling lock_api v0.4.13\n    Checking page_table_multiarch v0.5.3\n    Checking loongArch64 v0.2.5\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking scopeguard v1.2.0\n    Checking int_ratio v0.1.2\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking handler_table v0.1.2\n    Checking ns16550a v0.5.0\n    Checking static_assertions v1.1.0\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking byteorder v1.5.0\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:379:5\n    |\n379 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:3\n    |\n377 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:1\n    |\n377 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n    Checking timer_list v0.1.0\n    Checking spin v0.9.8\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate starry-core v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/core &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate starry-core v0.1.0\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:347:9\n    |\n347 |         naked_asm!(\n    |         ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:3\n    |\n344 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:1\n    |\n344 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:379:5\n    |\n379 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:3\n    |\n377 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:1\n    |\n377 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:453:5\n    |\n453 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:3\n    |\n451 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:1\n    |\n451 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:1:12\n  |\n1 | use core::{arch::naked_asm, fmt};\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        }
      ]
    },
    {
      "user": "oscomp",
      "repo": "starry-next",
      "pkg": "starry",
      "count": 64,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:121:5\n    |\n121 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:143:5\n    |\n143 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:182:5\n    |\n182 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:3\n    |\n115 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:3\n    |\n139 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:3\n    |\n178 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n",
              "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:172:38\n    |\n172 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n",
              "error[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:202:38\n    |\n202 |         entry = sym crate::platform::rust_entry_secondary,\n    |                                      ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:1\n    |\n115 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:1\n    |\n139 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:1\n    |\n178 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:21.725153649 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:21.389473193 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:20.898924409 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:20.506374536 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n",
              "// pkg_name=starry, checker=Audit\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo audit\n// timestamp=2025-06-19 4:39:20.116501902 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (173 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo clippy --target x86_64-unknown-none  --no-deps\n// timestamp=2025-06-19 4:37:47.436336627 +08:00:00\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.21\n    Checking bitflags v2.9.0\n   Compiling autocfg v1.4.0\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n   Compiling utf8parse v0.2.2\n   Compiling anstyle-parse v0.2.6\n   Compiling anstyle-query v1.1.2\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling heck v0.5.0\n   Compiling anstyle v1.0.10\n   Compiling rustversion v1.0.20\n   Compiling colorchoice v1.0.3\n   Compiling anstream v0.6.18\n   Compiling axerrno v0.1.0\n   Compiling quote v1.0.40\n   Compiling strsim v0.11.1\n   Compiling clap_lex v0.7.4\n   Compiling syn v2.0.100\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.2\n   Compiling clap_builder v4.5.34\n   Compiling indexmap v2.8.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.7.4\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n    Checking bitflags v1.3.2\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.3.2\n   Compiling toml_edit v0.22.24\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling x86 v0.52.0\n    Checking x86_64 v0.15.2\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n   Compiling linkme-impl v0.3.33\n    Checking rlsf v0.2.1\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n    Checking page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n    Checking bitmap-allocator v0.2.0\n    Checking byteorder v1.5.0\n    Checking lazyinit v0.2.1\n   Compiling percpu v0.2.0\n    Checking kernel_guard v0.1.2\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking kspin v0.1.0\n   Compiling percpu_macros v0.2.0\n    Checking spin v0.9.8\n    Checking x86_64 v0.14.13\n    Checking bit v0.1.1\n    Checking linkme v0.3.33\n    Checking page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking raw-cpuid v11.5.0\n    Checking handler_table v0.1.2\n    Checking static_assertions v1.1.0\n    Checking int_ratio v0.1.1\n   Compiling zerocopy-derive v0.7.35\n   Compiling clap v4.5.34\n   Compiling axconfig-gen v0.1.0\n    Checking x2apic v0.4.3\n    Checking bitmaps v3.2.1\n   Compiling semver v1.0.26\n    Checking zerocopy v0.7.35\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking cpumask v0.1.0\n    Checking timer_list v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axconfig-gen-macros v0.1.0\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking virtio-drivers v0.7.4\n   Compiling rustc_version v0.4.1\n    Checking axfs_vfs v0.1.1\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking hash32 v0.2.1\n    Checking axio v0.1.1\n   Compiling heapless v0.7.17\n   Compiling num-traits v0.2.19\n    Checking stable_deref_trait v1.2.0\n   Compiling unicode-segmentation v1.12.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo clippy --target loongarch64-unknown-none  --no-deps\n// timestamp=2025-06-19 4:38:07.946169216 +08:00:00\n    Checking log v0.4.21\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.12\n    Checking kspin v0.1.0\n    Checking scopeguard v1.2.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.2.0\n    Checking page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n    Checking rlsf v0.2.1\n    Checking byteorder v1.5.0\n    Checking lazyinit v0.2.1\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n    Checking loongArch64 v0.2.5\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking ns16550a v0.5.0\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking int_ratio v0.1.1\n    Checking handler_table v0.1.2\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-06-19 4:37:59.941884353 +08:00:00\n    Checking log v0.4.21\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n    Checking tock-registers v0.9.0\n   Compiling lock_api v0.4.12\n    Checking kspin v0.1.0\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v10.0.0\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.2.0\n    Checking lazyinit v0.2.1\n    Checking byteorder v1.5.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking arm_pl011 v0.1.0\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking dw_apb_uart v0.1.0\n    Checking arm_gicv2 v0.1.0\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.1\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axfs_vfs v0.1.1\n    Checking cpumask v0.1.0\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axio v0.1.1\n    Checking virtio-drivers v0.7.4\n    Checking stable_deref_trait v1.2.0\n   Compiling convert_case v0.7.1\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\n    Checking axfs_devfs v0.1.1\n    Checking axfs_ramfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking cap_access v0.1.0\n    Checking memory_set v0.3.2\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n   Compiling unicode-xid v0.2.6\n   Compiling derive_more-impl v2.0.1\n    Checking axdriver_pci v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_virtio v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n    Checking page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\nerror: could not compile `axhal` (lib) due to 20 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf  --no-deps\n// timestamp=2025-06-19 4:38:05.429411044 +08:00:00\n    Checking log v0.4.21\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n   Compiling lock_api v0.4.12\n    Checking kspin v0.1.0\n    Checking riscv-pac v0.2.0\n    Checking const-default v1.0.0\n    Checking scopeguard v1.2.0\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking bit_field v0.10.2\n   Compiling riscv v0.12.1\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.2.0\n    Checking page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling riscv v0.13.0\n    Checking byteorder v1.5.0\n    Checking lazyinit v0.2.1\n   Compiling percpu v0.2.0\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling riscv-macros v0.2.0\n    Checking sbi-spec v0.0.7\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking sbi-rt v0.0.3\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking static_assertions v1.1.0\n    Checking handler_table v0.1.2\n    Checking int_ratio v0.1.1\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axfs_vfs v0.1.1\n    Checking cpumask v0.1.0\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking axio v0.1.1\n    Checking virtio-drivers v0.7.4\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\n    Checking axfs_ramfs v0.1.1\n    Checking axfs_devfs v0.1.1\n    Checking axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf  --no-deps\n// timestamp=2025-06-19 4:38:09.171562956 +08:00:00\n    Checking log v0.4.21\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking kernel_guard v0.1.2\n   Compiling lock_api v0.4.12\n    Checking kspin v0.1.0\n    Checking bit_field v0.10.2\n    Checking critical-section v1.2.0\n    Checking const-default v1.0.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n    Checking scopeguard v1.2.0\n    Checking bitmap-allocator v0.2.0\n   Compiling riscv v0.12.1\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n    Checking lazyinit v0.2.1\n    Checking byteorder v1.5.0\n   Compiling percpu v0.2.0\n   Compiling riscv v0.13.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking sbi-spec v0.0.7\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking handler_table v0.1.2\n    Checking static_assertions v1.1.0\n    Checking int_ratio v0.1.1\n    Checking spin v0.9.8\n    Checking bitmaps v3.2.1\n    Checking zerocopy v0.7.35\n    Checking page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n    Checking timer_list v0.1.0\n    Checking axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n    Checking axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n    Checking axfs_vfs v0.1.1\n    Checking cpumask v0.1.0\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=starry, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-06-19 4:39:40.549328749 +08:00:00\n   Compiling log v0.4.21\n   Compiling bitflags v2.9.0\n   Compiling cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n   Compiling memory_addr v0.3.2\n   Compiling paste v1.0.15\n[2025-06-18T20:39:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.2\n   Compiling lock_api v0.4.12\n   Compiling kspin v0.1.0\n   Compiling bit_field v0.10.2\n   Compiling riscv v0.12.1\n   Compiling scopeguard v1.2.0\n   Compiling critical-section v1.2.0\n   Compiling embedded-hal v1.0.0\n   Compiling const-default v1.0.0\n   Compiling riscv-pac v0.2.0\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.2.0\n   Compiling page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling byteorder v1.5.0\n   Compiling riscv v0.13.0\n   Compiling lazyinit v0.2.1\n   Compiling percpu v0.2.0\n   Compiling allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling riscv-macros v0.2.0\n   Compiling sbi-spec v0.0.7\n   Compiling sbi-rt v0.0.3\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling static_assertions v1.1.0\n   Compiling int_ratio v0.1.1\n   Compiling handler_table v0.1.2\n   Compiling spin v0.9.8\n   Compiling bitmaps v3.2.1\n   Compiling zerocopy v0.7.35\n   Compiling page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n   Compiling scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n   Compiling timer_list v0.1.0\n   Compiling axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling cpumask v0.1.0\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axfs_vfs v0.1.1\n   Compiling heapless v0.7.17\n   Compiling hash32 v0.2.1\n   Compiling virtio-drivers v0.7.4\n   Compiling axio v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling num-traits v0.2.19\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-19 4:39:45.658088383 +08:00:00\n   Compiling log v0.4.21\n   Compiling bitflags v2.9.0\n   Compiling cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n   Compiling memory_addr v0.3.2\n   Compiling kernel_guard v0.1.2\n   Compiling lock_api v0.4.12\n[2025-06-18T20:39:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kspin v0.1.0\n   Compiling bit_field v0.10.2\n   Compiling const-default v1.0.0\n   Compiling critical-section v1.2.0\n   Compiling scopeguard v1.2.0\n   Compiling riscv-pac v0.2.0\n   Compiling embedded-hal v1.0.0\n   Compiling riscv v0.12.1\n   Compiling bitmap-allocator v0.2.0\n   Compiling rlsf v0.2.1\n   Compiling page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling lazyinit v0.2.1\n   Compiling byteorder v1.5.0\n   Compiling riscv v0.13.0\n   Compiling percpu v0.2.0\n   Compiling allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling sbi-spec v0.0.7\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling sbi-rt v0.0.3\n   Compiling linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling static_assertions v1.1.0\n   Compiling handler_table v0.1.2\n   Compiling int_ratio v0.1.1\n   Compiling spin v0.9.8\n   Compiling page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling bitmaps v3.2.1\n   Compiling zerocopy v0.7.35\n   Compiling axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n   Compiling scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n   Compiling timer_list v0.1.0\n   Compiling axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axfs_vfs v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:468:5\n    |\n468 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:3\n    |\n466 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:466:1\n    |\n466 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/riscv/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling cpumask v0.1.0\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-19 4:39:47.688916462 +08:00:00\n   Compiling log v0.4.21\n   Compiling bitflags v2.9.0\n   Compiling bit_field v0.10.2\n   Compiling cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n   Compiling rustversion v1.0.20\n   Compiling bitflags v1.3.2\n[2025-06-18T20:39:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling volatile v0.4.6\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling memory_addr v0.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling kernel_guard v0.1.2\n   Compiling x86 v0.52.0\n   Compiling kspin v0.1.0\n   Compiling const-default v1.0.0\n   Compiling bitmap-allocator v0.2.0\n   Compiling rlsf v0.2.1\n   Compiling byteorder v1.5.0\n   Compiling x86_64 v0.15.2\n   Compiling lazyinit v0.2.1\n   Compiling percpu v0.2.0\n   Compiling allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling x86_64 v0.14.13\n   Compiling spin v0.9.8\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling bit v0.1.1\n   Compiling linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling raw-cpuid v11.5.0\n   Compiling page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling x2apic v0.4.3\n   Compiling static_assertions v1.1.0\n   Compiling handler_table v0.1.2\n   Compiling int_ratio v0.1.1\n   Compiling page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling bitmaps v3.2.1\n   Compiling zerocopy v0.7.35\n   Compiling linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n   Compiling axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n   Compiling timer_list v0.1.0\n   Compiling axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:453:5\n    |\n453 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:3\n    |\n451 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:1\n    |\n451 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:1:12\n  |\n1 | use core::{arch::naked_asm, fmt};\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\n   Compiling cpumask v0.1.0\n   Compiling virtio-drivers v0.7.4\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target loongarch64-unknown-none \n// timestamp=2025-06-19 4:39:44.076371284 +08:00:00\n   Compiling log v0.4.21\n   Compiling bitflags v2.9.0\n   Compiling cfg-if v1.0.0\n   Compiling axerrno v0.1.0\n   Compiling memory_addr v0.3.2\n   Compiling kernel_guard v0.1.2\n   Compiling bit_field v0.10.2\n[2025-06-18T20:39:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling lock_api v0.4.12\n   Compiling kspin v0.1.0\n   Compiling const-default v1.0.0\n   Compiling scopeguard v1.2.0\n   Compiling bitmap-allocator v0.2.0\n   Compiling rlsf v0.2.1\n   Compiling page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling lazyinit v0.2.1\n   Compiling byteorder v1.5.0\n   Compiling percpu v0.2.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling linkme v0.3.33\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling loongArch64 v0.2.5\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling ns16550a v0.5.0\n   Compiling int_ratio v0.1.1\n   Compiling handler_table v0.1.2\n   Compiling static_assertions v1.1.0\n   Compiling spin v0.9.8\n   Compiling bitmaps v3.2.1\n   Compiling zerocopy v0.7.35\n   Compiling axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:379:5\n    |\n379 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:3\n    |\n377 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:1\n    |\n377 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axhal` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=starry, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-06-19 4:39:25.576111075 +08:00:00\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling log v0.4.21\n   Compiling bitflags v2.9.0\n   Compiling utf8parse v0.2.2\n[2025-06-18T20:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling anstyle-parse v0.2.6\n   Compiling anstyle v1.0.10\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling colorchoice v1.0.3\n   Compiling autocfg v1.4.0\n   Compiling anstyle-query v1.1.2\n   Compiling heck v0.5.0\n   Compiling anstream v0.6.18\n   Compiling axerrno v0.1.0\n   Compiling strsim v0.11.1\n   Compiling quote v1.0.40\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling syn v2.0.100\n   Compiling clap_lex v0.7.4\n   Compiling toml_datetime v0.6.8\n   Compiling clap_builder v4.5.34\n   Compiling winnow v0.7.4\n   Compiling indexmap v2.8.0\n   Compiling axconfig v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling syn v1.0.109\n   Compiling memory_addr v0.3.2\n   Compiling toml_edit v0.22.24\n   Compiling lock_api v0.4.12\n   Compiling base64 v0.13.1\n   Compiling tock-registers v0.9.0\n   Compiling unicode-width v0.1.14\n   Compiling aarch64-cpu v10.0.0\n   Compiling svgbobdoc v0.3.0\n   Compiling tock-registers v0.8.1\n   Compiling scopeguard v1.2.0\n   Compiling bit_field v0.10.2\n   Compiling const-default v1.0.0\n   Compiling linkme-impl v0.3.33\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.2.0\n   Compiling byteorder v1.5.0\n   Compiling lazyinit v0.2.1\n   Compiling percpu v0.2.0\n   Compiling allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling arm_gicv2 v0.1.0\n   Compiling dw_apb_uart v0.1.0\n   Compiling arm_pl011 v0.1.0\n   Compiling int_ratio v0.1.1\n   Compiling handler_table v0.1.2\n   Compiling static_assertions v1.1.0\n   Compiling spin v0.9.8\n   Compiling bitmaps v3.2.1\n   Compiling clap_derive v4.5.32\n   Compiling crate_interface v0.1.4\n   Compiling kernel_guard v0.1.2\n   Compiling kspin v0.1.0\n   Compiling percpu_macros v0.2.0\n   Compiling page_table_entry v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling page_table_multiarch v0.5.3 (https://github.com/Mivik/page_table_multiarch.git?rev=19ededd#19ededdb)\n   Compiling linkme v0.3.33\n   Compiling axalloc v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axlog v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling zerocopy-derive v0.7.35\n   Compiling semver v1.0.26\n   Compiling linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n   Compiling axdriver_base v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n   Compiling cpumask v0.1.0\n   Compiling timer_list v0.1.0\n   Compiling rustc_version v0.4.1\n   Compiling axdriver_net v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver_block v0.1.2 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.2#84eb2170)\n   Compiling axdriver v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling heapless v0.7.17\n   Compiling axfs_vfs v0.1.1\n   Compiling hash32 v0.2.1\n   Compiling clap v4.5.34\n   Compiling axconfig-gen v0.1.0\n   Compiling axio v0.1.1\n   Compiling zerocopy v0.7.35\n   Compiling num-traits v0.2.19\n   Compiling stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling rustversion v1.0.20\n   Compiling unicode-segmentation v1.12.0\n   Compiling virtio-drivers v0.7.4\n   Compiling convert_case v0.7.1\n   Compiling axconfig-gen-macros v0.1.0\n   Compiling axfs_devfs v0.1.1\n   Compiling axhal v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling axfs_ramfs v0.1.1\n   Compiling axns v0.1.0 (https://github.com/oscomp/arceos.git#a634925a)\n   Compiling memory_set v0.3.2\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:121:5\n    |\n121 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:143:5\n    |\n143 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:182:5\n    |\n182 |     core::arch::naked_asm!(\"\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:347:9\n    |\n347 |         naked_asm!(\n    |         ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:3\n    |\n115 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:3\n    |\n139 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:3\n    |\n178 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:3\n    |\n344 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\nerror[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:106:27\n    |\n106 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:172:38\n    |\n172 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `rust_entry_secondary` in module `crate::platform`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:202:38\n    |\n202 |         entry = sym crate::platform::rust_entry_secondary,\n    |                                      ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\nerror[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:115:1\n    |\n115 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:139:1\n    |\n139 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/boot.rs:178:1\n    |\n178 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:1\n    |\n344 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nSome errors have detailed explanations: E0425, E0432, E0658.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 20 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 5,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}",
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── starry-core 0.1.0\n│   ├── starry-api 0.1.0\n│   │   └── starry 0.1.0\n│   └── starry 0.1.0\n└── kernel-elf-parser 0.3.2\n    └── starry-core 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── axnet 0.1.0\n            ├── starry-api 0.1.0\n            │   └── starry 0.1.0\n            ├── axruntime 0.1.0\n            │   ├── starry 0.1.0\n            │   └── axfeat 0.1.0\n            │       ├── starry-api 0.1.0\n            │       └── starry 0.1.0\n            └── axfeat 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   └── starry 0.1.0\n│       ├── starry-api 0.1.0\n│       ├── starry 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   ├── starry 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   ├── starry 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── starry 0.1.0\n│       │   │   │   │   └── axfeat 0.1.0\n│       │   │   │   │       ├── starry-api 0.1.0\n│       │   │   │   │       └── starry 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── starry-core 0.1.0\n│       │   │   │   ├── starry-api 0.1.0\n│       │   │   │   ├── starry 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   └── axfeat 0.1.0\n│       │   │   └── axfeat 0.1.0\n│       │   ├── axsignal 0.1.0\n│       │   │   ├── starry-core 0.1.0\n│       │   │   ├── starry-api 0.1.0\n│       │   │   └── starry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   └── axfeat 0.1.0\n│       ├── axsignal 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmm 0.1.0\n│       │   ├── starry-core 0.1.0\n│       │   ├── starry-api 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       └── axdriver 0.1.0\n│           ├── axruntime 0.1.0\n│           ├── axnet 0.1.0\n│           ├── axfs 0.1.0\n│           └── axfeat 0.1.0\n├── riscv 0.13.0\n│   └── axhal 0.1.0\n└── riscv 0.12.1\n    └── page_table_multiarch 0.5.3\n        └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 173\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 5,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-18T20:39:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }",
              "[2025-06-18T20:39:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-18T20:39:44Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:347:9\n    |\n347 |         naked_asm!(\n    |         ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:3\n    |\n344 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:344:1\n    |\n344 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/aarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:379:5\n    |\n379 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:3\n    |\n377 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:377:1\n    |\n377 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/loongarch64/context.rs:1:5\n  |\n1 | use core::arch::naked_asm;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:453:5\n    |\n453 |     naked_asm!(\n    |     ^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:3\n    |\n451 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\n",
              "error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:451:1\n    |\n451 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n",
              "error[E0658]: use of unstable library feature `naked_functions`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/arch/x86_64/context.rs:1:12\n  |\n1 | use core::{arch::naked_asm, fmt};\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n",
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n",
              "error[E0432]: unresolved imports `axconfig::devices::GICC_PADDR`, `axconfig::devices::GICD_PADDR`, `axconfig::devices::UART_IRQ`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/gic.rs:3:25\n  |\n3 | use axconfig::devices::{GICC_PADDR, GICD_PADDR, UART_IRQ};\n  |                         ^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^ no `UART_IRQ` in `devices`\n  |                         |           |\n  |                         |           no `GICD_PADDR` in `devices`\n  |                         no `GICC_PADDR` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find value `UART_PADDR` in module `axconfig::devices`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:9:52\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::devices::UART_PADDR);\n  |                                                    ^^^^^^^^^^ not found in `axconfig::devices`\n\n",
              "error[E0425]: cannot find value `UART_IRQ_NUM` in module `crate::platform::irq`\n  --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/pl011.rs:61:50\n   |\n61 |     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n   |                                                  ^^^^^^^^^^^^ not found in `crate::platform::irq`\n   |\nhelp: consider importing this constant\n   |\n3  + use crate::platform::aarch64_common::gic::UART_IRQ_NUM;\n   |\nhelp: if you import `UART_IRQ_NUM`, refer to it directly\n   |\n61 -     crate::irq::set_enable(crate::platform::irq::UART_IRQ_NUM, true);\n61 +     crate::irq::set_enable(UART_IRQ_NUM, true);\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axconfig::devices::PSCI_METHOD`\n --> /home/runner/.cargo/git/checkouts/arceos-3bdd51727ca45c19/a634925/modules/axhal/src/platform/aarch64_common/psci.rs:5:5\n  |\n5 | use axconfig::devices::PSCI_METHOD;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `PSCI_METHOD` in `devices`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        }
      ]
    },
    {
      "user": "oscomp",
      "repo": "starry-next",
      "pkg": "user_lib",
      "count": 48,
      "raw_reports": [
        {
          "file": "src/arch/mod.rs",
          "features": "",
          "count": 20,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 3 to 6)\n-#[cfg(target_arch = \"x86_64\")]\n-mod x86_64;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-mod riscv;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 9 to 9)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+mod riscv;\n+#[cfg(target_arch = \"x86_64\")]\n+mod x86_64;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 12 to 15)\n-#[cfg(target_arch = \"x86_64\")]\n-pub use x86_64::*;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-pub use riscv::*;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 18 to 18)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+pub use riscv::*;\n+#[cfg(target_arch = \"x86_64\")]\n+pub use x86_64::*;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 3 to 6)\n-#[cfg(target_arch = \"x86_64\")]\n-mod x86_64;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-mod riscv;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 9 to 9)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+mod riscv;\n+#[cfg(target_arch = \"x86_64\")]\n+mod x86_64;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 12 to 15)\n-#[cfg(target_arch = \"x86_64\")]\n-pub use x86_64::*;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-pub use riscv::*;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 18 to 18)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+pub use riscv::*;\n+#[cfg(target_arch = \"x86_64\")]\n+pub use x86_64::*;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 3 to 6)\n-#[cfg(target_arch = \"x86_64\")]\n-mod x86_64;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-mod riscv;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 9 to 9)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+mod riscv;\n+#[cfg(target_arch = \"x86_64\")]\n+mod x86_64;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 12 to 15)\n-#[cfg(target_arch = \"x86_64\")]\n-pub use x86_64::*;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-pub use riscv::*;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 18 to 18)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+pub use riscv::*;\n+#[cfg(target_arch = \"x86_64\")]\n+pub use x86_64::*;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 3 to 6)\n-#[cfg(target_arch = \"x86_64\")]\n-mod x86_64;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-mod riscv;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 9 to 9)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+mod riscv;\n+#[cfg(target_arch = \"x86_64\")]\n+mod x86_64;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 12 to 15)\n-#[cfg(target_arch = \"x86_64\")]\n-pub use x86_64::*;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-pub use riscv::*;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 18 to 18)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+pub use riscv::*;\n+#[cfg(target_arch = \"x86_64\")]\n+pub use x86_64::*;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 3 to 6)\n-#[cfg(target_arch = \"x86_64\")]\n-mod x86_64;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-mod riscv;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 9 to 9)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+mod riscv;\n+#[cfg(target_arch = \"x86_64\")]\n+mod x86_64;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 12 to 15)\n-#[cfg(target_arch = \"x86_64\")]\n-pub use x86_64::*;\n-#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n-pub use riscv::*;\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/mod.rs (original lines from 18 to 18)\n+#[cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))]\n+pub use riscv::*;\n+#[cfg(target_arch = \"x86_64\")]\n+pub use x86_64::*;\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 5,
          "kinds": {
            "Cargo": [
              "// pkg_name=user_lib, checker=SemverChecks\n// toolchain=nightly-2025-05-20, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-19 4:39:18.182158079 +08:00:00\n    Building user_lib v0.1.0 (current)\nerror: running cargo-doc on crate 'user_lib' failed with output:\n-----\n    Checking cfg-if v1.0.1\n Documenting user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:27:9\n   |\n27 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:19:3\n   |\n19 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:19:1\n   |\n19 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not document `user_lib`\n\n-----\n\nerror: failed to build rustdoc for crate user_lib v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate user_lib v0.1.0\n",
              "// pkg_name=user_lib, checker=SemverChecks\n// toolchain=nightly-2025-05-20, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-06-19 4:39:18.569836382 +08:00:00\n    Building user_lib v0.1.0 (current)\nerror: running cargo-doc on crate 'user_lib' failed with output:\n-----\n    Checking cfg-if v1.0.1\n Documenting user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/aarch64.rs:27:9\n   |\n27 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/aarch64.rs:19:3\n   |\n19 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/aarch64.rs:19:1\n   |\n19 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not document `user_lib`\n\n-----\n\nerror: failed to build rustdoc for crate user_lib v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate user_lib v0.1.0\n",
              "// pkg_name=user_lib, checker=SemverChecks\n// toolchain=nightly-2025-05-20, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none \n// timestamp=2025-06-19 4:39:19.172517517 +08:00:00\n    Building user_lib v0.1.0 (current)\n       Built [   0.233s] (current)\n     Parsing user_lib v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: user_lib not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n",
              "// pkg_name=user_lib, checker=SemverChecks\n// toolchain=nightly-2025-05-20, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-19 4:39:18.871171292 +08:00:00\n    Building user_lib v0.1.0 (current)\nerror: running cargo-doc on crate 'user_lib' failed with output:\n-----\n    Checking cfg-if v1.0.1\n Documenting user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/x86_64.rs:29:9\n   |\n29 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/x86_64.rs:21:3\n   |\n21 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/x86_64.rs:21:1\n   |\n21 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not document `user_lib`\n\n-----\n\nerror: failed to build rustdoc for crate user_lib v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate user_lib v0.1.0\n",
              "// pkg_name=user_lib, checker=SemverChecks\n// toolchain=nightly-2025-05-20, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-06-19 4:39:19.818535359 +08:00:00\n    Building user_lib v0.1.0 (current)\nerror: running cargo-doc on crate 'user_lib' failed with output:\n-----\n    Checking cfg-if v1.0.1\n Documenting user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:27:9\n   |\n27 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:19:3\n   |\n19 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:19:1\n   |\n19 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not document `user_lib`\n\n-----\n\nerror: failed to build rustdoc for crate user_lib v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate user_lib v0.1.0\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 5,
          "kinds": {
            "Semver Violation": [
              "pkg=user_lib, checker=SemverChecks\ntoolchain=nightly-2025-05-20, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-19 4:39:19.170896151 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building user_lib v0.1.0 (current)\nerror: running cargo-doc on crate 'user_lib' failed with output:\n-----\n    Checking cfg-if v1.0.1\n Documenting user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/x86_64.rs:29:9\n   |\n29 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/x86_64.rs:21:3\n   |\n21 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/x86_64.rs:21:1\n   |\n21 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not document `user_lib`\n\n-----\n\nerror: failed to build rustdoc for crate user_lib v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate user_lib v0.1.0\n",
              "pkg=user_lib, checker=SemverChecks\ntoolchain=nightly-2025-05-20, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-06-19 4:39:18.568139815 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building user_lib v0.1.0 (current)\nerror: running cargo-doc on crate 'user_lib' failed with output:\n-----\n    Checking cfg-if v1.0.1\n Documenting user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:27:9\n   |\n27 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:19:3\n   |\n19 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:19:1\n   |\n19 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not document `user_lib`\n\n-----\n\nerror: failed to build rustdoc for crate user_lib v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate user_lib v0.1.0\n",
              "pkg=user_lib, checker=SemverChecks\ntoolchain=nightly-2025-05-20, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-06-19 4:39:20.114264363 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building user_lib v0.1.0 (current)\nerror: running cargo-doc on crate 'user_lib' failed with output:\n-----\n    Checking cfg-if v1.0.1\n Documenting user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:27:9\n   |\n27 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:19:3\n   |\n19 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/riscv.rs:19:1\n   |\n19 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not document `user_lib`\n\n-----\n\nerror: failed to build rustdoc for crate user_lib v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate user_lib v0.1.0\n",
              "pkg=user_lib, checker=SemverChecks\ntoolchain=nightly-2025-05-20, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-06-19 4:39:18.869348139 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building user_lib v0.1.0 (current)\nerror: running cargo-doc on crate 'user_lib' failed with output:\n-----\n    Checking cfg-if v1.0.1\n Documenting user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/aarch64.rs:27:9\n   |\n27 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/aarch64.rs:19:3\n   |\n19 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/arch/aarch64.rs:19:1\n   |\n19 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-25; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not document `user_lib`\n\n-----\n\nerror: failed to build rustdoc for crate user_lib v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate user_lib v0.1.0\n",
              "pkg=user_lib, checker=SemverChecks\ntoolchain=nightly-2025-05-20, target=loongarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target loongarch64-unknown-none \ntimestamp=2025-06-19 4:39:19.816815341 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building user_lib v0.1.0 (current)\n       Built [   0.233s] (current)\n     Parsing user_lib v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: user_lib not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "src/bin/usertests.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: deref which would be done by auto-deref\n  --> src/bin/usertests.rs:31:21\n   |\n31 |             if exec(*test) == -1 {\n   |                     ^^^^^ help: try: `test`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n   = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n",
              "warning: deref which would be done by auto-deref\n  --> src/bin/usertests.rs:31:21\n   |\n31 |             if exec(*test) == -1 {\n   |                     ^^^^^ help: try: `test`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n   = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n",
              "warning: deref which would be done by auto-deref\n  --> src/bin/usertests.rs:31:21\n   |\n31 |             if exec(*test) == -1 {\n   |                     ^^^^^ help: try: `test`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n   = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n",
              "warning: deref which would be done by auto-deref\n  --> src/bin/usertests.rs:31:21\n   |\n31 |             if exec(*test) == -1 {\n   |                     ^^^^^ help: try: `test`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n   = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n",
              "warning: deref which would be done by auto-deref\n  --> src/bin/usertests.rs:31:21\n   |\n31 |             if exec(*test) == -1 {\n   |                     ^^^^^ help: try: `test`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref\n   = note: `#[warn(clippy::explicit_auto_deref)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "src/time.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/time.rs (original lines from 53 to 57)\n-    if nanosleep(&tv) != 0 {\n-        tv.sec as _\n-    } else {\n-        0\n-    }\n+    if nanosleep(&tv) != 0 { tv.sec as _ } else { 0 }\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/time.rs (original lines from 53 to 57)\n-    if nanosleep(&tv) != 0 {\n-        tv.sec as _\n-    } else {\n-        0\n-    }\n+    if nanosleep(&tv) != 0 { tv.sec as _ } else { 0 }\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/time.rs (original lines from 53 to 57)\n-    if nanosleep(&tv) != 0 {\n-        tv.sec as _\n-    } else {\n-        0\n-    }\n+    if nanosleep(&tv) != 0 { tv.sec as _ } else { 0 }\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/time.rs (original lines from 53 to 57)\n-    if nanosleep(&tv) != 0 {\n-        tv.sec as _\n-    } else {\n-        0\n-    }\n+    if nanosleep(&tv) != 0 { tv.sec as _ } else { 0 }\n",
              "file: /home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust/src/time.rs (original lines from 53 to 57)\n-    if nanosleep(&tv) != 0 {\n-        tv.sec as _\n-    } else {\n-        0\n-    }\n+    if nanosleep(&tv) != 0 { tv.sec as _ } else { 0 }\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 4,
          "kinds": {
            "Cargo": [
              "// pkg_name=user_lib, checker=Lockbud\n// toolchain=nightly-2025-05-20, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-06-19 4:40:06.1025885 +08:00:00\n   Compiling cfg-if v1.0.1\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> src/arch/riscv.rs:27:9\n   |\n27 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> src/arch/riscv.rs:19:3\n   |\n19 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> src/arch/riscv.rs:19:1\n   |\n19 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> src/arch/riscv.rs:1:23\n  |\n1 | use core::arch::{asm, naked_asm};\n  |                       ^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `user_lib` (lib) due to 4 previous errors\n",
              "// pkg_name=user_lib, checker=Lockbud\n// toolchain=nightly-2025-05-20, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-19 4:40:06.579436513 +08:00:00\n   Compiling cfg-if v1.0.1\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> src/arch/x86_64.rs:29:9\n   |\n29 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> src/arch/x86_64.rs:21:3\n   |\n21 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> src/arch/x86_64.rs:21:1\n   |\n21 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> src/arch/x86_64.rs:1:23\n  |\n1 | use core::arch::{asm, naked_asm};\n  |                       ^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `user_lib` (lib) due to 4 previous errors\n",
              "// pkg_name=user_lib, checker=Lockbud\n// toolchain=nightly-2025-05-20, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-06-19 4:40:05.997181341 +08:00:00\n   Compiling cfg-if v1.0.1\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> src/arch/aarch64.rs:27:9\n   |\n27 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> src/arch/aarch64.rs:19:3\n   |\n19 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> src/arch/aarch64.rs:19:1\n   |\n19 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> src/arch/aarch64.rs:1:23\n  |\n1 | use core::arch::{asm, naked_asm};\n  |                       ^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `user_lib` (lib) due to 4 previous errors\n",
              "// pkg_name=user_lib, checker=Lockbud\n// toolchain=nightly-2025-05-20, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-06-19 4:40:05.869821903 +08:00:00\n   Compiling cfg-if v1.0.1\n   Compiling user_lib v0.1.0 (/home/runner/check/batch_6/oscomp/starry-next/apps/nimbos/rust)\nerror[E0658]: use of unstable library feature `naked_functions`\n  --> src/arch/riscv.rs:27:9\n   |\n27 |         naked_asm!(\"\n   |         ^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n  --> src/arch/riscv.rs:19:3\n   |\n19 | #[unsafe(naked)]\n   |   ^^^^^^ this is not an unsafe attribute\n   |\n   = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n  --> src/arch/riscv.rs:19:1\n   |\n19 | #[unsafe(naked)]\n   | ^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n --> src/arch/riscv.rs:1:23\n  |\n1 | use core::arch::{asm, naked_asm};\n  |                       ^^^^^^^^^\n  |\n  = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n  = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n  = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `user_lib` (lib) due to 4 previous errors\n"
            ]
          }
        },
        {
          "file": "src/arch/riscv.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unnecessary `unsafe` block\n  --> src/arch/riscv.rs:26:5\n   |\n26 |     unsafe {\n   |     ^^^^^^ unnecessary `unsafe` block\n   |\n   = note: `#[warn(unused_unsafe)]` on by default\n\n",
              "warning: unnecessary `unsafe` block\n  --> src/arch/riscv.rs:26:5\n   |\n26 |     unsafe {\n   |     ^^^^^^ unnecessary `unsafe` block\n   |\n   = note: `#[warn(unused_unsafe)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "src/arch/aarch64.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unnecessary `unsafe` block\n  --> src/arch/aarch64.rs:26:5\n   |\n26 |     unsafe {\n   |     ^^^^^^ unnecessary `unsafe` block\n   |\n   = note: `#[warn(unused_unsafe)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "src/arch/x86_64.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unnecessary `unsafe` block\n  --> src/arch/x86_64.rs:28:5\n   |\n28 |     unsafe {\n   |     ^^^^^^ unnecessary `unsafe` block\n   |\n   = note: `#[warn(unused_unsafe)]` on by default\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}