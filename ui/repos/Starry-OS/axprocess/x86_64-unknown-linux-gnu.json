{"repo":{"user":"Starry-OS","repo":"axprocess"},"data":[{"user":"Starry-OS","repo":"axprocess","pkg":"axprocess","count":10,"raw_reports":[{"file":"src/process.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_2/Starry-OS/axprocess/src/process.rs (original lines from 3 to 3)\n+use alloc::format;\n","file: /home/runner/check/batch_2/Starry-OS/axprocess/src/process.rs (original lines from 5 to 5)\n-use alloc::format;\n"]}},{"file":"src/stdio.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_2/Starry-OS/axprocess/src/stdio.rs (original lines from 59 to 60)\n-    } \n-    else {\n+    } else {\n","file: /home/runner/check/batch_2/Starry-OS/axprocess/src/stdio.rs (original lines from 80 to 80)\n-                        // echo \n+                        // echo\n"]}},{"file":"/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs","count":1,"kinds":{"Clippy(Error)":["error[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/Starry-OS/axprocess\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking log v0.4.22\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling hashbrown v0.15.1\n   Compiling serde v1.0.215\n    Checking bitflags v2.6.0\n   Compiling equivalent v1.0.1\n    Checking cfg-if v1.0.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n   Compiling autocfg v1.4.0\n   Compiling syn v2.0.89\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n   Compiling libc v0.2.164\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/Starry-OS/axprocess\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n    Checking log v0.4.22\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n   Compiling hashbrown v0.15.1\n   Compiling serde v1.0.215\n    Checking cfg-if v1.0.0\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.89\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n    Checking bitflags v1.3.2\n   Compiling toml_edit v0.22.22\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling x86 v0.52.0\n   Compiling libc v0.2.164\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking volatile v0.4.6\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n11:48:13|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_2/Starry-OS/axprocess\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing axprocess v0.1.0 (current)\nerror: running cargo-doc on crate axprocess failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n    Checking log v0.4.22\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n    Checking cfg-if v1.0.0\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n   Compiling autocfg v1.4.0\n   Compiling syn v2.0.90\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling libc v0.2.167\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_2/Starry-OS/axprocess --no-default-features --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-22T11:47:49Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:47:49Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-22T11:48:01Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/017f72d/src/schedule.rs:216:64: 216:80 (#0) after dropped at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/017f72d/src/schedule.rs:137:21: 137:30 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-22T11:48:01Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-11-22T11:48:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:48:01Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_2/Starry-OS/axprocess\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing axprocess v0.1.0 (current)\nerror: running cargo-doc on crate axprocess failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n    Checking log v0.4.22\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n    Checking cfg-if v1.0.0\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n   Compiling autocfg v1.4.0\n   Compiling syn v2.0.90\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling libc v0.2.167\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_2/Starry-OS/axprocess --no-default-features --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}