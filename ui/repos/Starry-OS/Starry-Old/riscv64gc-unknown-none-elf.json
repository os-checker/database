{
  "repo": {
    "user": "Starry-OS",
    "repo": "Starry-Old"
  },
  "data": [
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axnet",
      "count": 14,
      "raw_reports": [
        {
          "file": "modules/axnet/src/smoltcp_impl/addr.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n",
              "warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:28.898376283 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:17.074087561 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:19:29.013462365 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling lock_api v0.4.12\n   Compiling syn v2.0.90\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking byteorder v1.5.0\n   Compiling riscv v0.11.1\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking sbi-spec v0.0.7\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling heapless v0.8.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking hash32 v0.3.1\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:19:36|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:03:58.513622405 +08:00:00\n    Building axnet v0.1.0 (current)\n       Built [   4.747s] (current)\n     Parsing axnet v0.1.0 (current)\n      Parsed [   0.004s] (current)\nerror: axnet not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:55:51.008507532 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.27  0.4.27  Normal  ---\nspin  0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:04:08.899719293 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\n       Built [   4.747s] (current)\n     Parsing axnet v0.1.0 (current)\n      Parsed [   0.004s] (current)\nerror: axnet not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "modules/axnet/src/smoltcp_impl/listen_table.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "modules/axnet/src/smoltcp_impl/tcp.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/smoltcp_impl/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axfs",
      "count": 13,
      "raw_reports": [
        {
          "file": "modules/axfs/src/fs/fatfs.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n",
              "warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:21.637426175 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:01.736658172 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lazy_static v1.5.0\n   Compiling zerocopy v0.7.35\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:16:30.544813613 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling lock_api v0.4.12\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking lazy_static v1.5.0\n    Checking tock-registers v0.8.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking aarch64-cpu v9.4.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking critical-section v1.2.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:16:37|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:00:38.67149465 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.27\n    Checking bitflags v2.9.1\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spin v0.9.8\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking sbi-rt v0.0.3\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling either v1.15.0\n   Compiling bindgen v0.71.1\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling itertools v0.13.0\n   Compiling clang-sys v1.8.1\n   Compiling regex v1.11.1\n   Compiling cexpr v0.6.0\n   Compiling prettyplease v0.2.32\n   Compiling zerocopy-derive v0.7.35\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n   Compiling rustc-hash v2.1.1\n   Compiling shlex v1.3.0\n    Checking byteorder v1.5.0\n    Checking zerocopy v0.7.35\n   Compiling enumn v0.1.14\n    Checking memchr v2.7.4\n    Checking cty v0.2.2\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking virtio-drivers v0.7.5\n    Checking axsignal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking rand_core v0.6.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking bitflags v1.3.2\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking printf-compat v0.1.1\n    Checking rand v0.8.5\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking axtask v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask)\n    Checking axsync v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking another_ext4 v0.1.0 (https://github.com/Starry-OS/ljx_ext4.git?branch=main#ae00f9ed)\n    Checking ext4_rs v1.0.0 (https://github.com/yuoo655/ext4_rs.git?rev=6bcc7f5#6bcc7f5d)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#e7f03054)\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#e7f03054)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry-Old/target/semver-checks/local-axfs-0_1_0-8194177ce25a18e3/target/debug/build/lwext4_rust-c5d15e0deb70722f/build-script-build` (exit status: 101)\n  --- stdout\n  Retrieve lwext4 source code\n  To patch lwext4 src\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/e7f0305/c/lwext4'\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/e7f0305/c/lwext4'\n\n  --- stderr\n  make: Makefile: No such file or directory\n  make: *** No rule to make target 'Makefile'.  Stop.\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/e7f0305/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:46:11.253263857 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\nlog       0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:00:51.383417836 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.27\n    Checking bitflags v2.9.1\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spin v0.9.8\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking sbi-rt v0.0.3\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling either v1.15.0\n   Compiling bindgen v0.71.1\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling itertools v0.13.0\n   Compiling clang-sys v1.8.1\n   Compiling regex v1.11.1\n   Compiling cexpr v0.6.0\n   Compiling prettyplease v0.2.32\n   Compiling zerocopy-derive v0.7.35\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n   Compiling rustc-hash v2.1.1\n   Compiling shlex v1.3.0\n    Checking byteorder v1.5.0\n    Checking zerocopy v0.7.35\n   Compiling enumn v0.1.14\n    Checking memchr v2.7.4\n    Checking cty v0.2.2\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking virtio-drivers v0.7.5\n    Checking axsignal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking rand_core v0.6.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking bitflags v1.3.2\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking printf-compat v0.1.1\n    Checking rand v0.8.5\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking axtask v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask)\n    Checking axsync v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking another_ext4 v0.1.0 (https://github.com/Starry-OS/ljx_ext4.git?branch=main#ae00f9ed)\n    Checking ext4_rs v1.0.0 (https://github.com/yuoo655/ext4_rs.git?rev=6bcc7f5#6bcc7f5d)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#e7f03054)\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#e7f03054)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry-Old/target/semver-checks/local-axfs-0_1_0-8194177ce25a18e3/target/debug/build/lwext4_rust-c5d15e0deb70722f/build-script-build` (exit status: 101)\n  --- stdout\n  Retrieve lwext4 source code\n  To patch lwext4 src\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/e7f0305/c/lwext4'\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/e7f0305/c/lwext4'\n\n  --- stderr\n  make: Makefile: No such file or directory\n  make: *** No rule to make target 'Makefile'.  Stop.\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/e7f0305/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axfs/src/api/file.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
            ]
          }
        },
        {
          "file": "modules/axfs/src/fops.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axprocess",
      "count": 13,
      "raw_reports": [
        {
          "file": "modules/axtask/src/task.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:30.24860608 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:19.169908733 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling rand v0.8.5\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling ahash v0.7.8\n   Compiling capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:19:59.869617641 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking const-default v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:20:07|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:04:38.341216461 +08:00:00\n    Building axprocess v0.1.0 (current)\n       Built [   4.282s] (current)\n     Parsing axprocess v0.1.0 (current)\n      Parsed [   0.004s] (current)\nerror: axprocess not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:57:38.05548972 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\nriscv     0.10.1   ---     0.13.0  Normal  ---\nxmas-elf  0.9.1    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:04:47.820176836 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\n       Built [   4.282s] (current)\n     Parsing axprocess v0.1.0 (current)\n      Parsed [   0.004s] (current)\nerror: axprocess not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "modules/axprocess/src/process.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "modules/axtask/src/processor.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "linux_syscall_api",
      "count": 13,
      "raw_reports": [
        {
          "file": "api/linux_syscall_api/src/syscall_fs/imp/ctl.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n",
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"
            ]
          }
        },
        {
          "file": "api/linux_syscall_api/src/syscall_fs/imp/io.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n",
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:42.25470333 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:42.81507287 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling zero v0.1.3\n   Compiling once_cell v1.20.2\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling xmas-elf v0.9.1\n   Compiling heapless v0.8.0\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling ahash v0.7.8\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:24:01.43520583 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:24:09|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:08:43.546529124 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.27\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling riscv v0.11.1\n    Checking critical-section v1.2.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking rand_core v0.6.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking rand v0.8.5\n    Checking nb v0.1.3\n   Compiling ahash v0.7.8\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking virtio-drivers v0.7.5\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking zero v0.1.3\n    Checking void v1.0.2\n    Checking once_cell v1.21.3\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking xmas-elf v0.9.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking hashbrown v0.11.2\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling heapless v0.8.0\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n    Checking hash32 v0.3.1\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal)\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking axtask v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask)\n    Checking axsync v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n   Compiling num_enum_derive v0.5.11\n    Checking axfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs)\n    Checking axfutex v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex)\n    Checking axmem v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem)\n    Checking axprocess v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess)\n    Checking num_enum v0.5.11\n    Checking axruntime v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axnet v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet)\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: `axnet` (lib) generated 1 warning\n    Checking axfeat v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat)\n Documenting linux_syscall_api v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `linux_syscall_api` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `format_args` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:115:5\n    |\n115 |     axlog::ax_println!(\"Running testcase: {}\", testcase);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `axlog::ax_println` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n    |\n2   + use core::format_args;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:14:1\n   |\n14 | / bitflags! {\n15 | |     /// 指定 sys_wait4 的选项\n16 | |     pub struct WaitFlags: u32 {\n17 | |         /// 不挂起当前进程，直接返回\n...  |\n28 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:44:3\n   |\n44 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:75:3\n   |\n75 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:85:3\n   |\n85 | #[derive(Clone, Copy, Debug, Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:134:7\n    |\n134 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:133:1\n    |\n133 | / bitflags! {\n134 | |     #[derive(Debug)]\n135 | |     /// 指定 mmap 的选项\n136 | |     pub struct MMAPPROT: u32 {\n...   |\n144 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:163:7\n    |\n163 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:162:1\n    |\n162 | / bitflags! {\n163 | |     #[derive(Debug)]\n164 | |     /// 指定 mmap 的选项\n165 | |     pub struct MMAPFlags: u32 {\n...   |\n181 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:184:7\n    |\n184 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:183:1\n    |\n183 | / bitflags! {\n184 | |     #[derive(Debug)]\n185 | |     /// 指定 mremap 的选项\n186 | |     pub struct MREMAPFlags: u32 {\n...   |\n195 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:284:3\n    |\n284 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:312:7\n    |\n312 |     #[derive(PartialEq, Eq)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:310:1\n    |\n310 | / bitflags::bitflags! {\n311 | |     /// 对 futex 的操作\n312 | |     #[derive(PartialEq, Eq)]\n313 | |     pub struct FutexFlags: i32 {\n...   |\n327 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:332:7\n    |\n332 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:352:3\n    |\n352 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:409:3\n    |\n409 | #[derive(Clone, Copy)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:419:7\n    |\n419 |     #[derive(PartialEq,Eq,Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:431:3\n    |\n431 | #[derive(Clone, Copy, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:488:1\n    |\n488 | / bitflags! {\n489 | |     /// sys_renameat2 用到的选项\n490 | |     pub struct RenameFlags: u32 {\n491 | |         /// Nothing\n...   |\n500 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:505:3\n    |\n505 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:555:3\n    |\n555 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:611:3\n    |\n611 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:626:1\n    |\n626 | / bitflags! {\n627 | |     /// 指定 st_mode 的选项\n628 | |     pub struct StMode: u32 {\n629 | |         /// regular file\n...   |\n662 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:677:7\n    |\n677 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:688:3\n    |\n688 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall.rs:53:9\n   |\n53 |         panic!(\"unknown syscall id: {}\", syscall_id);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::panic;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/file.rs:106:13\n    |\n106 |             assert!(inode_map.contains_key(&self.path));\n    |             ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:30:9\n   |\n30 |         assert!(\n   |         ^^^^^^\n   |\nhelp: consider importing this macro\n   |\n2  + use core::assert;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:48:3\n   |\n48 | #[derive(Copy, Clone, PartialEq)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:128:9\n    |\n128 |         assert!(self.readable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:174:9\n    |\n174 |         assert!(self.writable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:19:7\n   |\n19 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:17:1\n   |\n17 | / bitflags! {\n18 | |     /// 定义epoll事件的类别\n19 | |     #[derive(Clone, Copy,Debug)]\n20 | |     pub struct EpollEventType: u32{\n...  |\n37 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:40:3\n   |\n40 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:51:7\n   |\n51 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:10:7\n   |\n10 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:8:1\n   |\n8  | / bitflags! {\n9  | |     // https://sites.uclouvain.be/SystInfo/usr/include/sys/eventfd.h.html\n10 | |     #[derive(Clone, Copy, Debug)]\n11 | |     pub struct EventFdFlag: u32 {\n...  |\n16 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:11:7\n   |\n11 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:9:1\n   |\n9  | / bitflags! {\n10 | |     /// 在文件上等待或者发生过的事件\n11 | |     #[derive(Clone, Copy,Debug)]\n12 | |     pub struct PollEvents: u16 {\n...  |\n24 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:26:3\n   |\n26 | #[derive(Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:35:3\n   |\n35 | #[derive(Clone, Copy, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/stat.rs:73:9\n   |\n73 |         panic!(\"Wrong path at syscall_fstatat: {}(dir_fd={})\", path, dir_fd);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n4  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/fs_syscall_id.rs:14:3\n   |\n14 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:213:9\n    |\n213 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:242:7\n    |\n242 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:241:1\n    |\n241 | / bitflags! {\n242 | |     #[derive(Debug)]\n243 | |     struct ShmFlags: i32 {\n244 | |         const IPC_CREAT = 0o1000;\n...   |\n250 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:314:7\n    |\n314 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:313:1\n    |\n313 | / bitflags! {\n314 | |     #[derive(Debug)]\n315 | |     struct ShmAtFlags: i32 {\n316 | |         const SHM_RND = 0o20000;\n...   |\n321 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:365:13\n    |\n365 |             unimplemented!()\n    |             ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mem_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mod.rs:29:13\n   |\n29 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:295:19\n    |\n295 |         Err(_) => unreachable!(),\n    |                   ^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unreachable;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:501:9\n    |\n501 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:567:9\n    |\n567 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:610:17\n    |\n610 |                 panic!(\"[setsockopt()] option {opt_name} not supported in socket level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:617:17\n    |\n617 |                 panic!(\"[setsockopt()] option {opt_name} not supported in tcp level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:633:3\n    |\n633 | #[derive(TryFromPrimitive)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n3   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:684:9\n    |\n684 |         panic!();\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:29:3\n   |\n29 | #[derive(TryFromPrimitive, Clone, PartialEq, Eq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:39:3\n   |\n39 | #[derive(TryFromPrimitive, PartialEq, Eq, Copy, Clone, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:67:3\n   |\n67 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:77:3\n   |\n77 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:87:3\n   |\n87 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:101:3\n    |\n101 | #[derive(TryFromPrimitive, PartialEq)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:111:3\n    |\n111 | #[derive(TryFromPrimitive, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:137:22\n    |\n137 |                 _ => panic!(\"setsockopt IP_MULTICAST_TTL on a non-udp socket\"),\n    |                      ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:156:21\n    |\n156 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:164:21\n    |\n164 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:175:21\n    |\n175 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:186:21\n    |\n186 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:197:21\n    |\n197 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:226:21\n    |\n226 |                     panic!(\"can't read a timeval from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:238:17\n    |\n238 |                 panic!(\"can't set SO_ERROR\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:252:21\n    |\n252 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:262:21\n    |\n262 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:274:21\n    |\n274 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:286:21\n    |\n286 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:298:21\n    |\n298 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:322:21\n    |\n322 |                     panic!(\"can't write a timeval to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:344:17\n    |\n344 |                 panic!(\"unimplemented!\")\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:354:18\n    |\n354 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:360:21\n    |\n360 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:376:17\n    |\n376 |                 unimplemented!()\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:384:18\n    |\n384 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:392:21\n    |\n392 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:526:17\n    |\n526 |                 unimplemented!();\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/net_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/mod.rs:36:13\n   |\n36 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/task_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/imp/task.rs:328:25\n    |\n328 |                         panic!(\"Shouldn't reach here!\");\n    |                         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/mod.rs:96:13\n   |\n96 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n5  + use core::panic;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:146:6\n    |\n146 | impl From<MMAPPROT> for MappingFlags {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:214:6\n    |\n214 | impl Default for UtsName {\n    |      ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::default::Default;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:394:30\n    |\n394 |     pub fn from(val: i32) -> Option<Self> {\n    |                              ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:101:43\n    |\n101 | pub fn get_stat_in_fs(path: &FilePath) -> Result<Kstat, SyscallError> {\n    |                                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n2   + use core::fmt::Result;\n    |\n2   + use core::result::Result;\n    |\n2   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:60:16\n   |\n60 |     write_end: Option<Weak<Pipe>>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:116:10\n    |\n116 |     ) -> Result<isize, SyscallError> {\n    |          ^^^^^^\n    |\n   ::: /home/runner/.cargo/git/checkouts/axerrno-5ea606781111d899/3e2372c/src/lib.rs:99:1\n    |\n99  | pub type AxResult<T = ()> = Result<T, AxError>;\n    | ------------------------- similarly named type alias `AxResult` defined here\n    |\nhelp: a type alias with a similar name exists\n    |\n116 |     ) -> AxResult<isize, SyscallError> {\n    |          ~~~~~~~~\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:54:6\n   |\n54 | impl Default for ShadowBitset {\n   |      ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::default::Default;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:251:49\n    |\n251 | fn init_fd_set(addr: *mut usize, len: usize) -> Result<PpollFdSet, SyscallError> {\n    |                                                 ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:28:16\n   |\n28 |     path_addr: Option<*const u8>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n12 + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:30:6\n   |\n30 | ) -> Result<FilePath, SyscallError> {\n   |      ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n12 + use core::fmt::Result;\n   |\n12 + use core::result::Result;\n   |\n12 + use alloc::fmt::Result;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:446:25\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n446 |     recv_timeout: Mutex<Option<TimeVal>>,\n    |                         ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n446 |     recv_timeout: Mutex<IpOption<TimeVal>>,\n    |                         ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:449:17\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n449 |     pub buffer: Option<Arc<Pipe>>,\n    |                 ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n449 |     pub buffer: IpOption<Arc<Pipe>>,\n    |                 ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:467:35\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n467 |     fn get_recv_timeout(&self) -> Option<TimeVal> {\n    |                                   ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n467 |     fn get_recv_timeout(&self) -> IpOption<TimeVal> {\n    |                                   ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:491:37\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n491 |     fn set_recv_timeout(&self, val: Option<TimeVal>) {\n    |                                     ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n491 |     fn set_recv_timeout(&self, val: IpOption<TimeVal>) {\n    |                                     ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:659:44\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n659 |     pub fn sendto(&self, buf: &[u8], addr: Option<SocketAddr>) -> AxResult<usize> {\n    |                                            ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n659 |     pub fn sendto(&self, buf: &[u8], addr: IpOption<SocketAddr>) -> AxResult<usize> {\n    |                                            ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:73:33\n   |\n73 | pub fn read_file(path: &str) -> Option<String> {\n   |                                 ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n2  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/lib.rs:34:26\n   |\n34 | pub type SyscallResult = Result<isize, SyscallError>;\n   |                          ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n5  + use core::fmt::Result;\n   |\n5  + use core::result::Result;\n   |\n5  + use alloc::fmt::Result;\n   |\n\nSome errors have detailed explanations: E0405, E0412, E0463.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not document `linux_syscall_api`\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 14:10:30.864412142 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\nrand      0.8.5    ---     0.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:08:53.587513738 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.27\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling riscv v0.11.1\n    Checking critical-section v1.2.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking rand_core v0.6.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking rand v0.8.5\n    Checking nb v0.1.3\n   Compiling ahash v0.7.8\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking virtio-drivers v0.7.5\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking zero v0.1.3\n    Checking void v1.0.2\n    Checking once_cell v1.21.3\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking xmas-elf v0.9.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking hashbrown v0.11.2\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling heapless v0.8.0\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n    Checking hash32 v0.3.1\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal)\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking axtask v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask)\n    Checking axsync v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n   Compiling num_enum_derive v0.5.11\n    Checking axfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs)\n    Checking axfutex v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex)\n    Checking axmem v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem)\n    Checking axprocess v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess)\n    Checking num_enum v0.5.11\n    Checking axruntime v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axnet v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet)\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: `axnet` (lib) generated 1 warning\n    Checking axfeat v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat)\n Documenting linux_syscall_api v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `linux_syscall_api` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `format_args` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:115:5\n    |\n115 |     axlog::ax_println!(\"Running testcase: {}\", testcase);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `axlog::ax_println` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n    |\n2   + use core::format_args;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:14:1\n   |\n14 | / bitflags! {\n15 | |     /// 指定 sys_wait4 的选项\n16 | |     pub struct WaitFlags: u32 {\n17 | |         /// 不挂起当前进程，直接返回\n...  |\n28 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:44:3\n   |\n44 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:75:3\n   |\n75 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:85:3\n   |\n85 | #[derive(Clone, Copy, Debug, Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:134:7\n    |\n134 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:133:1\n    |\n133 | / bitflags! {\n134 | |     #[derive(Debug)]\n135 | |     /// 指定 mmap 的选项\n136 | |     pub struct MMAPPROT: u32 {\n...   |\n144 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:163:7\n    |\n163 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:162:1\n    |\n162 | / bitflags! {\n163 | |     #[derive(Debug)]\n164 | |     /// 指定 mmap 的选项\n165 | |     pub struct MMAPFlags: u32 {\n...   |\n181 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:184:7\n    |\n184 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:183:1\n    |\n183 | / bitflags! {\n184 | |     #[derive(Debug)]\n185 | |     /// 指定 mremap 的选项\n186 | |     pub struct MREMAPFlags: u32 {\n...   |\n195 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:284:3\n    |\n284 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:312:7\n    |\n312 |     #[derive(PartialEq, Eq)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:310:1\n    |\n310 | / bitflags::bitflags! {\n311 | |     /// 对 futex 的操作\n312 | |     #[derive(PartialEq, Eq)]\n313 | |     pub struct FutexFlags: i32 {\n...   |\n327 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:332:7\n    |\n332 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:352:3\n    |\n352 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:409:3\n    |\n409 | #[derive(Clone, Copy)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:419:7\n    |\n419 |     #[derive(PartialEq,Eq,Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:431:3\n    |\n431 | #[derive(Clone, Copy, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:488:1\n    |\n488 | / bitflags! {\n489 | |     /// sys_renameat2 用到的选项\n490 | |     pub struct RenameFlags: u32 {\n491 | |         /// Nothing\n...   |\n500 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:505:3\n    |\n505 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:555:3\n    |\n555 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:611:3\n    |\n611 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:626:1\n    |\n626 | / bitflags! {\n627 | |     /// 指定 st_mode 的选项\n628 | |     pub struct StMode: u32 {\n629 | |         /// regular file\n...   |\n662 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:677:7\n    |\n677 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:688:3\n    |\n688 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall.rs:53:9\n   |\n53 |         panic!(\"unknown syscall id: {}\", syscall_id);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::panic;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/file.rs:106:13\n    |\n106 |             assert!(inode_map.contains_key(&self.path));\n    |             ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:30:9\n   |\n30 |         assert!(\n   |         ^^^^^^\n   |\nhelp: consider importing this macro\n   |\n2  + use core::assert;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:48:3\n   |\n48 | #[derive(Copy, Clone, PartialEq)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:128:9\n    |\n128 |         assert!(self.readable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:174:9\n    |\n174 |         assert!(self.writable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:19:7\n   |\n19 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:17:1\n   |\n17 | / bitflags! {\n18 | |     /// 定义epoll事件的类别\n19 | |     #[derive(Clone, Copy,Debug)]\n20 | |     pub struct EpollEventType: u32{\n...  |\n37 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:40:3\n   |\n40 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:51:7\n   |\n51 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:10:7\n   |\n10 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:8:1\n   |\n8  | / bitflags! {\n9  | |     // https://sites.uclouvain.be/SystInfo/usr/include/sys/eventfd.h.html\n10 | |     #[derive(Clone, Copy, Debug)]\n11 | |     pub struct EventFdFlag: u32 {\n...  |\n16 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:11:7\n   |\n11 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:9:1\n   |\n9  | / bitflags! {\n10 | |     /// 在文件上等待或者发生过的事件\n11 | |     #[derive(Clone, Copy,Debug)]\n12 | |     pub struct PollEvents: u16 {\n...  |\n24 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:26:3\n   |\n26 | #[derive(Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:35:3\n   |\n35 | #[derive(Clone, Copy, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/stat.rs:73:9\n   |\n73 |         panic!(\"Wrong path at syscall_fstatat: {}(dir_fd={})\", path, dir_fd);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n4  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/fs_syscall_id.rs:14:3\n   |\n14 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:213:9\n    |\n213 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:242:7\n    |\n242 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:241:1\n    |\n241 | / bitflags! {\n242 | |     #[derive(Debug)]\n243 | |     struct ShmFlags: i32 {\n244 | |         const IPC_CREAT = 0o1000;\n...   |\n250 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:314:7\n    |\n314 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:313:1\n    |\n313 | / bitflags! {\n314 | |     #[derive(Debug)]\n315 | |     struct ShmAtFlags: i32 {\n316 | |         const SHM_RND = 0o20000;\n...   |\n321 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:365:13\n    |\n365 |             unimplemented!()\n    |             ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mem_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mod.rs:29:13\n   |\n29 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:295:19\n    |\n295 |         Err(_) => unreachable!(),\n    |                   ^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unreachable;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:501:9\n    |\n501 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:567:9\n    |\n567 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:610:17\n    |\n610 |                 panic!(\"[setsockopt()] option {opt_name} not supported in socket level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:617:17\n    |\n617 |                 panic!(\"[setsockopt()] option {opt_name} not supported in tcp level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:633:3\n    |\n633 | #[derive(TryFromPrimitive)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n3   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:684:9\n    |\n684 |         panic!();\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:29:3\n   |\n29 | #[derive(TryFromPrimitive, Clone, PartialEq, Eq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:39:3\n   |\n39 | #[derive(TryFromPrimitive, PartialEq, Eq, Copy, Clone, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:67:3\n   |\n67 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:77:3\n   |\n77 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:87:3\n   |\n87 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:101:3\n    |\n101 | #[derive(TryFromPrimitive, PartialEq)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:111:3\n    |\n111 | #[derive(TryFromPrimitive, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:137:22\n    |\n137 |                 _ => panic!(\"setsockopt IP_MULTICAST_TTL on a non-udp socket\"),\n    |                      ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:156:21\n    |\n156 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:164:21\n    |\n164 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:175:21\n    |\n175 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:186:21\n    |\n186 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:197:21\n    |\n197 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:226:21\n    |\n226 |                     panic!(\"can't read a timeval from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:238:17\n    |\n238 |                 panic!(\"can't set SO_ERROR\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:252:21\n    |\n252 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:262:21\n    |\n262 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:274:21\n    |\n274 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:286:21\n    |\n286 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:298:21\n    |\n298 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:322:21\n    |\n322 |                     panic!(\"can't write a timeval to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:344:17\n    |\n344 |                 panic!(\"unimplemented!\")\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:354:18\n    |\n354 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:360:21\n    |\n360 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:376:17\n    |\n376 |                 unimplemented!()\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:384:18\n    |\n384 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:392:21\n    |\n392 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:526:17\n    |\n526 |                 unimplemented!();\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/net_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/mod.rs:36:13\n   |\n36 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/task_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/imp/task.rs:328:25\n    |\n328 |                         panic!(\"Shouldn't reach here!\");\n    |                         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/mod.rs:96:13\n   |\n96 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n5  + use core::panic;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:146:6\n    |\n146 | impl From<MMAPPROT> for MappingFlags {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:214:6\n    |\n214 | impl Default for UtsName {\n    |      ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::default::Default;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:394:30\n    |\n394 |     pub fn from(val: i32) -> Option<Self> {\n    |                              ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:101:43\n    |\n101 | pub fn get_stat_in_fs(path: &FilePath) -> Result<Kstat, SyscallError> {\n    |                                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n2   + use core::fmt::Result;\n    |\n2   + use core::result::Result;\n    |\n2   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:60:16\n   |\n60 |     write_end: Option<Weak<Pipe>>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:116:10\n    |\n116 |     ) -> Result<isize, SyscallError> {\n    |          ^^^^^^\n    |\n   ::: /home/runner/.cargo/git/checkouts/axerrno-5ea606781111d899/3e2372c/src/lib.rs:99:1\n    |\n99  | pub type AxResult<T = ()> = Result<T, AxError>;\n    | ------------------------- similarly named type alias `AxResult` defined here\n    |\nhelp: a type alias with a similar name exists\n    |\n116 |     ) -> AxResult<isize, SyscallError> {\n    |          ~~~~~~~~\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:54:6\n   |\n54 | impl Default for ShadowBitset {\n   |      ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::default::Default;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:251:49\n    |\n251 | fn init_fd_set(addr: *mut usize, len: usize) -> Result<PpollFdSet, SyscallError> {\n    |                                                 ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:28:16\n   |\n28 |     path_addr: Option<*const u8>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n12 + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:30:6\n   |\n30 | ) -> Result<FilePath, SyscallError> {\n   |      ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n12 + use core::fmt::Result;\n   |\n12 + use core::result::Result;\n   |\n12 + use alloc::fmt::Result;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:446:25\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n446 |     recv_timeout: Mutex<Option<TimeVal>>,\n    |                         ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n446 |     recv_timeout: Mutex<IpOption<TimeVal>>,\n    |                         ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:449:17\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n449 |     pub buffer: Option<Arc<Pipe>>,\n    |                 ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n449 |     pub buffer: IpOption<Arc<Pipe>>,\n    |                 ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:467:35\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n467 |     fn get_recv_timeout(&self) -> Option<TimeVal> {\n    |                                   ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n467 |     fn get_recv_timeout(&self) -> IpOption<TimeVal> {\n    |                                   ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:491:37\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n491 |     fn set_recv_timeout(&self, val: Option<TimeVal>) {\n    |                                     ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n491 |     fn set_recv_timeout(&self, val: IpOption<TimeVal>) {\n    |                                     ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:659:44\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n659 |     pub fn sendto(&self, buf: &[u8], addr: Option<SocketAddr>) -> AxResult<usize> {\n    |                                            ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n659 |     pub fn sendto(&self, buf: &[u8], addr: IpOption<SocketAddr>) -> AxResult<usize> {\n    |                                            ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:73:33\n   |\n73 | pub fn read_file(path: &str) -> Option<String> {\n   |                                 ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n2  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api/src/lib.rs:34:26\n   |\n34 | pub type SyscallResult = Result<isize, SyscallError>;\n   |                          ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n5  + use core::fmt::Result;\n   |\n5  + use core::result::Result;\n   |\n5  + use alloc::fmt::Result;\n   |\n\nSome errors have detailed explanations: E0405, E0412, E0463.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not document `linux_syscall_api`\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axfutex",
      "count": 12,
      "raw_reports": [
        {
          "file": "modules/axtask/src/task.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:23.045648373 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:05.197998884 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:17:01.819201587 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling svgbobdoc v0.3.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:17:09|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:01:18.168216218 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n    Checking log v0.4.27\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking rlsf v0.2.1\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling version_check v0.9.5\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling ahash v0.7.8\n    Checking rand_core v0.6.4\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking rand v0.8.5\n    Checking once_cell v1.21.3\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking zerocopy v0.7.35\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking hashbrown v0.11.2\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking virtio-drivers v0.7.5\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask)\nwarning: unused import: `Ordering`\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: method `task_tick` is never used\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: field `irq_state` is never read\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\nwarning: `axtask` (lib) generated 3 warnings (run `cargo fix --lib -p axtask` to apply 1 suggestion)\n    Checking axsync v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking axfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs)\n Documenting axfutex v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `axfutex` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:9:7\n  |\n9 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n  |       ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n5 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:32:7\n   |\n32 |     #[derive(PartialEq, Eq, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:30:1\n   |\n30 | / bitflags::bitflags! {\n31 | |     #[allow(missing_docs)]\n32 | |     #[derive(PartialEq, Eq, Debug)]\n33 | |     /// Futex flags for posix syscall listed in <https://manpages.debian.org/unstable/manpages-dev/futex.2.en.html#FUTEX_WAIT>\n...  |\n44 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex/src/futex.rs:30:3\n   |\n30 | #[derive(Copy, Clone, Default, Ord, PartialOrd, Eq, PartialEq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex/src/jhash.rs:87:13\n   |\n87 |             unreachable!(\"Never happen\");\n   |             ^^^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::unreachable;\n   |\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `axfutex`\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:47:47.355666924 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nbitflags   2.6.0    2.9.1   2.9.1   Normal  ---\nhashbrown  0.11.2   ---     0.15.3  Normal  ---\nlog        0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:01:26.667369528 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n    Checking log v0.4.27\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking rlsf v0.2.1\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling version_check v0.9.5\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling ahash v0.7.8\n    Checking rand_core v0.6.4\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking rand v0.8.5\n    Checking once_cell v1.21.3\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking zerocopy v0.7.35\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking hashbrown v0.11.2\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking virtio-drivers v0.7.5\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask)\nwarning: unused import: `Ordering`\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: method `task_tick` is never used\n   --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: field `irq_state` is never read\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\nwarning: `axtask` (lib) generated 3 warnings (run `cargo fix --lib -p axtask` to apply 1 suggestion)\n    Checking axsync v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking axfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs)\n Documenting axfutex v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `axfutex` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:9:7\n  |\n9 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n  |       ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n5 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:32:7\n   |\n32 |     #[derive(PartialEq, Eq, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:30:1\n   |\n30 | / bitflags::bitflags! {\n31 | |     #[allow(missing_docs)]\n32 | |     #[derive(PartialEq, Eq, Debug)]\n33 | |     /// Futex flags for posix syscall listed in <https://manpages.debian.org/unstable/manpages-dev/futex.2.en.html#FUTEX_WAIT>\n...  |\n44 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex/src/futex.rs:30:3\n   |\n30 | #[derive(Copy, Clone, Default, Ord, PartialOrd, Eq, PartialEq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex/src/jhash.rs:87:13\n   |\n87 |             unreachable!(\"Never happen\");\n   |             ^^^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::unreachable;\n   |\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `axfutex`\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axtask/src/processor.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arch_boot",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:15.795091082 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:10:51.043406951 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling critical-section v1.2.0\n   Compiling lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling embedded-hal v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling fdt v0.1.5\n   Compiling sbi-spec v0.0.7\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:13:53.036185261 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling riscv v0.11.1\n    Checking critical-section v1.2.0\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.6.0\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling riscv v0.10.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking bit_field v0.10.2\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking sbi-spec v0.0.4\n    Checking sbi-rt v0.0.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:14:00|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 12:58:06.39928013 +08:00:00\n    Building arch_boot v0.1.0 (current)\n       Built [   5.902s] (current)\n     Parsing arch_boot v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: arch_boot not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:36:31.500163227 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.27  0.4.27  Normal  ---\nraw-cpuid       11.2.0   11.5.0  11.5.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.10.1   ---     0.13.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 12:58:18.139341688 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\n       Built [   5.902s] (current)\n     Parsing arch_boot v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: arch_boot not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "modules/axtrap/src/arch/riscv/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axlibc",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:25.887051219 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:09.608635495 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling prettyplease v0.2.25\n   Compiling rustix v0.38.41\n   Compiling libc v0.2.167\n   Compiling clang-sys v1.8.1\n   Compiling cfg-if v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling minimal-lexical v0.2.1\n   Compiling memchr v2.7.4\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling bitflags v2.6.0\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:18:01.502353679 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n    Checking static_assertions v1.1.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking critical-section v1.2.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n   Compiling glob v0.3.1\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n   Compiling clang-sys v1.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:18:09|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:02:23.715273644 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n    Checking log v0.4.27\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spin v0.9.8\n    Checking rlsf v0.2.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking critical-section v1.2.0\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n    Checking byteorder v1.5.0\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling libc v0.2.172\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling rustix v0.38.44\n   Compiling prettyplease v0.2.32\n   Compiling clang-sys v1.8.1\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling linux-raw-sys v0.4.15\n    Checking virtio-drivers v0.7.5\n   Compiling either v1.15.0\n   Compiling heapless v0.8.0\n   Compiling regex-syntax v0.8.5\n   Compiling memchr v2.7.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling minimal-lexical v0.2.1\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking axtask v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n   Compiling libloading v0.8.7\n   Compiling regex-automata v0.4.9\n   Compiling nom v7.1.3\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n   Compiling home v0.5.11\n    Checking stable_deref_trait v1.2.0\n   Compiling bindgen v0.69.5\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking rand v0.8.5\n   Compiling which v4.4.2\n   Compiling cexpr v0.6.0\n   Compiling regex v1.11.1\n    Checking axsync v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync)\n   Compiling itertools v0.12.1\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking managed v0.8.0\n   Compiling shlex v1.3.0\n   Compiling lazycell v1.3.0\n   Compiling rustc-hash v1.1.0\n    Checking bitflags v1.3.2\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking axfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs)\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot)\n    Checking axnet v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet)\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n    Checking sbi-spec v0.0.4\n    Checking bitmaps v3.2.1\nwarning: `axnet` (lib) generated 1 warning\n    Checking axruntime v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axfeat v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat)\n    Checking sbi-rt v0.0.2\n    Checking axtrap v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap/src/lib.rs:14:12\n   |\n14 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap/src/lib.rs:16:12\n   |\n16 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: unused variable: `stval`\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: `axtrap` (lib) generated 3 warnings\nwarning: unexpected `cfg` condition value: `aarch64-phytiumpi`\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/platform/mod.rs:14:5\n   |\n14 |     platform_family = \"aarch64-phytiumpi\",\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `platform_family` are: `aarch64-bsta1000b`, `aarch64-qemu-virt`, `aarch64-raspi`, `aarch64-rk3588j`, `riscv64-qemu-virt`, and `x86-pc`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-phytiumpi\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-phytiumpi\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:6:12\n  |\n6 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: function `start_given_secondary_cpu` is never used\n --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/platform/dummy/mod.rs:5:12\n  |\n5 |     pub fn start_given_secondary_cpu(_cpu_id: usize, _stack_top: PhysAddr) {}\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\nwarning: function `start_secondary_cpus` is never used\n --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/mp.rs:8:15\n  |\n8 | pub(crate) fn start_secondary_cpus(primary_cpu_id: usize) {\n  |               ^^^^^^^^^^^^^^^^^^^^\n\nwarning: creating a shared reference to mutable static is discouraged\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:34:25\n   |\n34 |         let stack_low = BOOT_STACK.as_ptr() as usize;\n   |                         ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n   = note: `#[warn(static_mut_refs)]` on by default\n\nwarning: creating a mutable reference to mutable static is discouraged\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:39:20\n   |\n39 |             return BOOT_STACK.as_mut_ptr();\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\nwarning: `arch_boot` (lib) generated 6 warnings\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:50:59.99325184 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:02:40.725567151 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n    Checking log v0.4.27\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spin v0.9.8\n    Checking rlsf v0.2.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking critical-section v1.2.0\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n    Checking byteorder v1.5.0\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling libc v0.2.172\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling rustix v0.38.44\n   Compiling prettyplease v0.2.32\n   Compiling clang-sys v1.8.1\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling linux-raw-sys v0.4.15\n    Checking virtio-drivers v0.7.5\n   Compiling either v1.15.0\n   Compiling heapless v0.8.0\n   Compiling regex-syntax v0.8.5\n   Compiling memchr v2.7.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling minimal-lexical v0.2.1\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking axtask v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n   Compiling libloading v0.8.7\n   Compiling regex-automata v0.4.9\n   Compiling nom v7.1.3\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n   Compiling home v0.5.11\n    Checking stable_deref_trait v1.2.0\n   Compiling bindgen v0.69.5\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking rand v0.8.5\n   Compiling which v4.4.2\n   Compiling cexpr v0.6.0\n   Compiling regex v1.11.1\n    Checking axsync v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync)\n   Compiling itertools v0.12.1\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking managed v0.8.0\n   Compiling shlex v1.3.0\n   Compiling lazycell v1.3.0\n   Compiling rustc-hash v1.1.0\n    Checking bitflags v1.3.2\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking axfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs)\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot)\n    Checking axnet v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet)\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n    Checking sbi-spec v0.0.4\n    Checking bitmaps v3.2.1\nwarning: `axnet` (lib) generated 1 warning\n    Checking axruntime v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axfeat v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat)\n    Checking sbi-rt v0.0.2\n    Checking axtrap v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap/src/lib.rs:14:12\n   |\n14 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap/src/lib.rs:16:12\n   |\n16 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: unused variable: `stval`\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: `axtrap` (lib) generated 3 warnings\nwarning: unexpected `cfg` condition value: `aarch64-phytiumpi`\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/platform/mod.rs:14:5\n   |\n14 |     platform_family = \"aarch64-phytiumpi\",\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `platform_family` are: `aarch64-bsta1000b`, `aarch64-qemu-virt`, `aarch64-raspi`, `aarch64-rk3588j`, `riscv64-qemu-virt`, and `x86-pc`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-phytiumpi\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-phytiumpi\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:6:12\n  |\n6 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: function `start_given_secondary_cpu` is never used\n --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/platform/dummy/mod.rs:5:12\n  |\n5 |     pub fn start_given_secondary_cpu(_cpu_id: usize, _stack_top: PhysAddr) {}\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\nwarning: function `start_secondary_cpus` is never used\n --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/mp.rs:8:15\n  |\n8 | pub(crate) fn start_secondary_cpus(primary_cpu_id: usize) {\n  |               ^^^^^^^^^^^^^^^^^^^^\n\nwarning: creating a shared reference to mutable static is discouraged\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:34:25\n   |\n34 |         let stack_low = BOOT_STACK.as_ptr() as usize;\n   |                         ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n   = note: `#[warn(static_mut_refs)]` on by default\n\nwarning: creating a mutable reference to mutable static is discouraged\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:39:20\n   |\n39 |             return BOOT_STACK.as_mut_ptr();\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\nwarning: `arch_boot` (lib) generated 6 warnings\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axtrap/src/arch/riscv/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axtrap",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:40.823778789 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:35.510668681 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling riscv v0.10.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:23:25.240594192 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking critical-section v1.2.0\n   Compiling riscv v0.11.1\n    Checking nb v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking nb v0.1.3\n    Checking lazy_static v1.5.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n   Compiling riscv v0.10.1\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking bitflags v2.6.0\n    Checking embedded-hal v0.2.7\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking bit_field v0.10.2\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:23:32|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:07:58.073111933 +08:00:00\n    Building axtrap v0.1.0 (current)\n       Built [   5.853s] (current)\n     Parsing axtrap v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: axtrap not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 14:08:52.782015861 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.27  0.4.27  Normal  ---\nriscv           0.10.1   ---     0.13.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:08:09.272474778 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\n       Built [   5.853s] (current)\n     Parsing axtrap v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: axtrap not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "modules/axtrap/src/arch/riscv/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arceos_posix_api",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:14.359854829 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:10:45.741969821 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling spin v0.9.8\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling aarch64-cpu v9.4.0\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:13:23.176326611 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling riscv v0.11.1\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking critical-section v1.2.0\n    Checking bitflags v2.6.0\n   Compiling glob v0.3.1\n    Checking embedded-hal v1.0.0\n   Compiling clang-sys v1.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:13:30|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 12:57:19.30967835 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n    Checking log v0.4.27\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking byteorder v1.5.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking critical-section v1.2.0\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling prettyplease v0.2.32\n   Compiling rustix v0.38.44\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling heapless v0.8.0\n   Compiling libc v0.2.172\n   Compiling clang-sys v1.8.1\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking virtio-drivers v0.7.5\n   Compiling linux-raw-sys v0.4.15\n   Compiling either v1.15.0\n   Compiling minimal-lexical v0.2.1\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking rand_core v0.6.4\n    Checking axtask v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask)\n    Checking stable_deref_trait v1.2.0\n    Checking rand v0.8.5\n    Checking axsync v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync)\n   Compiling libloading v0.8.7\n   Compiling regex-automata v0.4.9\n   Compiling nom v7.1.3\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking managed v0.8.0\n   Compiling bindgen v0.69.5\n    Checking bitflags v1.3.2\n   Compiling home v0.5.11\n   Compiling which v4.4.2\n   Compiling cexpr v0.6.0\n   Compiling regex v1.11.1\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling itertools v0.12.1\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling lazycell v1.3.0\n   Compiling rustc-hash v1.1.0\n   Compiling shlex v1.3.0\n    Checking axfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs)\n    Checking axnet v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet)\n    Checking bitmaps v3.2.1\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: `axnet` (lib) generated 1 warning\n    Checking axruntime v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axfeat v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat)\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:34:52.174876293 +08:00:00\n\nName     Project  Compat  Latest  Kind    Platform\n----     -------  ------  ------  ----    --------\nbindgen  0.69.5   ---     0.71.1  Build   ---\nspin     0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 12:57:36.524301162 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n    Checking log v0.4.27\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking byteorder v1.5.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking critical-section v1.2.0\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling prettyplease v0.2.32\n   Compiling rustix v0.38.44\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling heapless v0.8.0\n   Compiling libc v0.2.172\n   Compiling clang-sys v1.8.1\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking virtio-drivers v0.7.5\n   Compiling linux-raw-sys v0.4.15\n   Compiling either v1.15.0\n   Compiling minimal-lexical v0.2.1\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking rand_core v0.6.4\n    Checking axtask v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask)\n    Checking stable_deref_trait v1.2.0\n    Checking rand v0.8.5\n    Checking axsync v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync)\n   Compiling libloading v0.8.7\n   Compiling regex-automata v0.4.9\n   Compiling nom v7.1.3\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking managed v0.8.0\n   Compiling bindgen v0.69.5\n    Checking bitflags v1.3.2\n   Compiling home v0.5.11\n   Compiling which v4.4.2\n   Compiling cexpr v0.6.0\n   Compiling regex v1.11.1\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling itertools v0.12.1\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling lazycell v1.3.0\n   Compiling rustc-hash v1.1.0\n   Compiling shlex v1.3.0\n    Checking axfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs)\n    Checking axnet v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet)\n    Checking bitmaps v3.2.1\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: `axnet` (lib) generated 1 warning\n    Checking axruntime v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axfeat v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat)\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axdisplay",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:17.265264394 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:10:54.672761156 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling riscv v0.11.1\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling sbi-rt v0.0.3\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:15:02.399905946 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n   Compiling riscv v0.11.1\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:15:09|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 12:59:03.883763686 +08:00:00\n    Building axdisplay v0.1.0 (current)\n       Built [   2.487s] (current)\n     Parsing axdisplay v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: axdisplay not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:41:20.601112271 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 12:59:09.785707052 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\n       Built [   2.487s] (current)\n     Parsing axdisplay v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: axdisplay not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axdriver",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:18.682960395 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:10:56.617621264 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:15:31.661828303 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking byteorder v1.5.0\n   Compiling riscv v0.11.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:15:38|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 12:59:36.056163947 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n    Checking log v0.4.27\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking bit_field v0.10.2\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking hash32 v0.2.1\n   Compiling heapless v0.7.17\n    Checking bitflags v2.9.1\n    Checking spin v0.9.8\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking volatile v0.3.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking volatile v0.2.7\n    Checking core_detect v1.0.0\n    Checking const-default v1.0.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking rlsf v0.2.1\n    Checking virtio-drivers v0.7.5\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry-Old/target/semver-checks/local-axdriver-0_1_0-f41abb8ac0934789/target/debug/build/axdriver-15a43bfdd2ce7ce8/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"mmio\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:42:57.031681084 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 12:59:42.311092302 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n    Checking log v0.4.27\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking bit_field v0.10.2\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking hash32 v0.2.1\n   Compiling heapless v0.7.17\n    Checking bitflags v2.9.1\n    Checking spin v0.9.8\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking volatile v0.3.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking volatile v0.2.7\n    Checking core_detect v1.0.0\n    Checking const-default v1.0.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking rlsf v0.2.1\n    Checking virtio-drivers v0.7.5\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry-Old/target/semver-checks/local-axdriver-0_1_0-f41abb8ac0934789/target/debug/build/axdriver-15a43bfdd2ce7ce8/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"mmio\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axhal",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:24.476461822 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:07.062771572 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:17:31.406736759 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n   Compiling riscv v0.11.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking sbi-spec v0.0.7\n    Checking critical-section v1.2.0\n    Checking fdt v0.1.5\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:17:38|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:01:51.459954397 +08:00:00\n    Building axhal v0.1.0 (current)\n       Built [   2.121s] (current)\n     Parsing axhal v0.1.0 (current)\n      Parsed [   0.003s] (current)\nerror: axhal not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:49:23.855082917 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nbitflags        2.6.0    2.9.1   2.9.1   Normal  ---\neither          1.13.0   1.15.0  1.15.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.27  0.4.27  Normal  ---\nraw-cpuid       11.2.0   11.5.0  11.5.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.11.1   ---     0.13.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx2apic          0.4.3    ---     0.5.0   Normal  cfg(target_arch = \"x86_64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:01:57.102076992 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\n       Built [   2.121s] (current)\n     Parsing axhal v0.1.0 (current)\n      Parsed [   0.003s] (current)\nerror: axhal not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axmem",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:27.496225112 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:13.962844818 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling virtio-drivers v0.7.4\n   Compiling driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling nb v1.1.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling rand_core v0.6.4\n   Compiling nb v0.1.3\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:18:57.314733244 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking const-default v1.0.0\n   Compiling svgbobdoc v0.3.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:19:05|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:03:21.547269965 +08:00:00\n    Building axmem v0.1.0 (current)\n       Built [   3.274s] (current)\n     Parsing axmem v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: axmem not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:54:13.565546142 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nlog       0.4.21   0.4.27  0.4.27  Normal  ---\nriscv     0.10.1   ---     0.13.0  Normal  ---\nxmas-elf  0.9.1    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:03:29.741602541 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\n       Built [   3.274s] (current)\n     Parsing axmem v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: axmem not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axsignal",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:33.156286106 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:24.01890142 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:20:58.071373537 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:21:05|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:05:44.906417093 +08:00:00\n    Building axsignal v0.1.0 (current)\n       Built [   2.193s] (current)\n     Parsing axsignal v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: axsignal not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axsignal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 14:00:50.589212321 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:05:49.954548063 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\n       Built [   2.193s] (current)\n     Parsing axsignal v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: axsignal not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axstd",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:36.451401698 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:29.307627792 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling void v1.0.2\n   Compiling riscv v0.10.1\n   Compiling sbi-spec v0.0.4\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling embedded-hal v0.2.7\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:21:58.287206469 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking critical-section v1.2.0\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking bitflags v2.6.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking bit_field v0.10.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:22:05|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:06:36.653278312 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling toml_write v0.1.1\n   Compiling toml_datetime v0.6.9\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:06:42.497126985 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling toml_write v0.1.1\n   Compiling toml_datetime v0.6.9\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axtrap/src/arch/riscv/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axsync",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:37.886092022 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:31.288849122 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:22:27.565469503 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:22:34|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:07:02.499832644 +08:00:00\n    Building axsync v0.1.0 (current)\n       Built [   2.246s] (current)\n     Parsing axsync v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: axsync not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axsync, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 14:05:40.862259937 +08:00:00\n\nName  Project  Compat  Latest  Kind         Platform\n----  -------  ------  ------  ----         --------\nrand  0.8.5    ---     0.9.1   Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:07:07.707268872 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\n       Built [   2.246s] (current)\n     Parsing axsync v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: axsync not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axtask",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:39.752446978 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:33.20791847 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:22:56.454172796 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling riscv v0.11.1\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking bitflags v2.6.0\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking critical-section v1.2.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:23:03|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:07:25.877544843 +08:00:00\n    Building axtask v0.1.0 (current)\n       Built [   2.443s] (current)\n     Parsing axtask v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: axtask not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 14:07:18.666486268 +08:00:00\n\nName  Project  Compat  Latest  Kind         Platform\n----  -------  ------  ------  ----         --------\nlog   0.4.21   0.4.27  0.4.27  Normal       ---\nrand  0.8.5    ---     0.9.1   Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:07:31.895728259 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\n       Built [   2.443s] (current)\n     Parsing axtask v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: axtask not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arceos_api",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:12.929283399 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:10:40.837408937 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv v0.11.1\n   Compiling tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling spin v0.9.8\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:12:52.462412984 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:12:59|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 12:56:42.357310769 +08:00:00\n    Building arceos_api v0.1.0 (current)\n       Built [   3.773s] (current)\n     Parsing arceos_api v0.1.0 (current)\n      Parsed [   0.003s] (current)\nerror: arceos_api not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 12:56:51.397010075 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\n       Built [   3.773s] (current)\n     Parsing arceos_api v0.1.0 (current)\n      Parsed [   0.003s] (current)\nerror: arceos_api not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axfeat",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:20.093698416 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:10:59.383987314 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:16:00.380824849 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling riscv v0.11.1\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:16:07|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:00:04.969786308 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling toml_datetime v0.6.9\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:00:11.779348894 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling toml_datetime v0.6.9\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axruntime",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:32.027864868 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:21.725620148 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:20:29.509025809 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking bitflags v2.6.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:20:36|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:05:17.289354901 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.27\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking const-default v1.0.0\n    Checking spin v0.9.8\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n    Checking byteorder v1.5.0\n    Checking critical-section v1.2.0\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry-Old/target/semver-checks/local-axruntime-0_1_0-19388cf34775fb41/target/debug/build/axdriver-db1f257cce77c5de/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"pci\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:05:24.486678485 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.27\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking const-default v1.0.0\n    Checking spin v0.9.8\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n    Checking byteorder v1.5.0\n    Checking critical-section v1.2.0\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry-Old/target/semver-checks/local-axruntime-0_1_0-19388cf34775fb41/target/debug/build/axdriver-db1f257cce77c5de/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"pci\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axstarry",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:34.771784273 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:25.594736137 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:21:28.414630878 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n    Checking byteorder v1.5.0\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:21:36|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:06:09.079461883 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.9.0\n   Compiling toml_write v0.1.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:06:15.327434496 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.9.0\n   Compiling toml_write v0.1.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arceos-bwbench",
      "count": 7,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:06.328826597 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:10:22.338841433 +08:00:00\n   Compiling log v0.4.21\n   Compiling cfg-if v1.0.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling bitflags v2.6.0\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling bit_field v0.10.2\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:12:04.605988817 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling svgbobdoc v0.3.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:12:12|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "modules/axtrap/src/arch/riscv/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axalloc",
      "count": 7,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:10:51.947125415 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling const-default v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling rlsf v0.2.1\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:14:20.56481371 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling base64 v0.13.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n    Checking rlsf v0.2.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n05:14:26|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 12:58:39.848880415 +08:00:00\n    Building axalloc v0.1.0 (current)\n       Built [   0.547s] (current)\n     Parsing axalloc v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: axalloc not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:38:07.606436074 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 12:58:41.829766754 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\n       Built [   0.547s] (current)\n     Parsing axalloc v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: axalloc not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axlog",
      "count": 7,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:13.168439121 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:18:29.903632627 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking cfg-if v1.0.0\n    Checking static_assertions v1.1.0\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:18:35|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:02:58.723966628 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.27\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.40\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:52:37.005657331 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nchrono  0.4.38   0.4.41  0.4.41  Normal  ---\nlog     0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 13:03:00.27821395 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.27\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.40\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "monolithic_userboot",
      "count": 6,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Audit\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo audit\n// timestamp=2025-05-25 13:09:43.687431857 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 782 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:11:46.536464475 +08:00:00\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n   Compiling hashbrown v0.11.2\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 13:24:34.344674352 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking byteorder v1.5.0\n   Compiling svgbobdoc v0.3.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n    Checking const-default v1.0.0\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:24:42|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T05:10:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T05:10:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axconfig",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 12:58:44.770032949 +08:00:00\n    Building axconfig v0.1.0 (current)\n       Built [   3.359s] (current)\n     Parsing axconfig v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: axconfig not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 13:39:44.950381567 +08:00:00\n\nName       Project  Compat   Latest   Kind   Platform\n----       -------  ------   ------   ----   --------\nserde      1.0.215  1.0.219  1.0.219  Build  ---\ntoml_edit  0.22.22  0.22.26  0.22.26  Build  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 12:58:48.779321869 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\n       Built [   3.359s] (current)\n     Parsing axconfig v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: axconfig not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}