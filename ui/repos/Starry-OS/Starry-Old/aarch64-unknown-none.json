{"repo":{"user":"Starry-OS","repo":"Starry-Old"},"data":[{"user":"Starry-OS","repo":"Starry-Old","pkg":"axnet","count":10,"raw_reports":[{"file":"modules/axnet/src/smoltcp_impl/addr.rs","count":2,"kinds":{"Clippy(Warn)":["warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:46.069624169 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axnet, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:49:40.653057073 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling lock_api v0.4.12\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling heapless v0.8.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking hash32 v0.3.1\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:49:48|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:35:51.977629316 +08:00:00\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\n    Checking virtio-drivers v0.7.5\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling ahash v0.7.8\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking nb v0.1.3\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:10:40.829176975 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:35:58.588481115 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\n    Checking virtio-drivers v0.7.5\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling ahash v0.7.8\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking nb v0.1.3\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n"]}},{"file":"modules/axnet/src/smoltcp_impl/listen_table.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"]}},{"file":"modules/axnet/src/smoltcp_impl/tcp.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n"]}},{"file":"src/smoltcp_impl/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axfs","count":9,"raw_reports":[{"file":"modules/axfs/src/fs/fatfs.rs","count":2,"kinds":{"Clippy(Warn)":["warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n","warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:30.033661134 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling virtio-drivers v0.7.4\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axfs, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:46:50.910394992 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n    Checking log v0.4.21\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:46:58|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:33:03.693018407 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking either v1.13.0\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n    Checking cty v0.2.2\n    Checking memchr v2.7.4\n    Checking cstr_core v0.2.6\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking itertools v0.9.0\n    Checking zerocopy v0.7.35\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking virtio-drivers v0.7.5\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking rand_core v0.6.4\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:05:43.827134607 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nlog       0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:33:09.928374143 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking either v1.13.0\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n    Checking cty v0.2.2\n    Checking memchr v2.7.4\n    Checking cstr_core v0.2.6\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking itertools v0.9.0\n    Checking zerocopy v0.7.35\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking virtio-drivers v0.7.5\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking rand_core v0.6.4\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"]}},{"file":"modules/axfs/src/api/file.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"]}},{"file":"modules/axfs/src/fops.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axprocess","count":9,"raw_reports":[{"file":"modules/axtask/src/task.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:47.830042079 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling ahash v0.7.8\n   Compiling capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:50:11.189368694 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:50:19|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:36:26.925894011 +08:00:00\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking byteorder v1.5.0\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking zerocopy v0.7.35\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling ahash v0.7.8\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking nb v1.1.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking nb v0.1.3\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:11:15.810837433 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nriscv     0.10.1   ---     0.12.1  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:36:33.099641068 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking byteorder v1.5.0\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking zerocopy v0.7.35\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling ahash v0.7.8\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking nb v1.1.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking nb v0.1.3\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n"]}},{"file":"modules/axprocess/src/process.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"]}},{"file":"modules/axtask/src/processor.rs","count":1,"kinds":{"Clippy(Warn)":["warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"linux_syscall_api","count":9,"raw_reports":[{"file":"api/linux_syscall_api/src/syscall_fs/imp/ctl.rs","count":2,"kinds":{"Clippy(Warn)":["warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"]}},{"file":"api/linux_syscall_api/src/syscall_fs/imp/io.rs","count":2,"kinds":{"Clippy(Warn)":["warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:42:09.463354309 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling zero v0.1.3\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling once_cell v1.20.2\n   Compiling void v1.0.2\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:54:13.075762842 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking byteorder v1.5.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:54:20|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:39:47.541076346 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.9.0\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling ahash v0.7.8\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:17:50.705179333 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:39:53.659444892 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.9.0\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling ahash v0.7.8\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axfutex","count":8,"raw_reports":[{"file":"modules/axtask/src/task.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfutex, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:34.393246639 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling ahash v0.7.8\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling rand_core v0.6.4\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axfutex, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:47:13.764361326 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n    Checking log v0.4.21\n   Compiling equivalent v1.0.1\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:47:21|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:33:21.470111534 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n    Checking log v0.4.25\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking const-default v1.0.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bit_field v0.10.2\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling svgbobdoc v0.3.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking rlsf v0.2.1\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:06:30.268288449 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nbitflags   2.6.0    2.8.0   2.8.0   Normal  ---\nhashbrown  0.11.2   ---     0.15.2  Normal  ---\nlog        0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:33:32.201067121 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n    Checking log v0.4.25\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking const-default v1.0.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bit_field v0.10.2\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling svgbobdoc v0.3.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking rlsf v0.2.1\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"]}},{"file":"modules/axtask/src/processor.rs","count":1,"kinds":{"Clippy(Warn)":["warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arceos_posix_api","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:11.46773158 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v2.0.90\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling glob v0.3.1\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:43:34.777146047 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n   Compiling glob v0.3.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling clang-sys v1.8.1\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:43:42|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:30:17.511011882 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling libc v0.2.169\n    Checking virtio-drivers v0.7.5\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling prettyplease v0.2.29\n   Compiling rustix v0.38.44\n   Compiling heapless v0.8.0\n   Compiling clang-sys v1.8.1\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling memchr v2.7.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking stable_deref_trait v1.2.0\n   Compiling regex-syntax v0.8.5\n    Checking rand_core v0.6.4\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:00:00.14907738 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:30:24.9262346 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling libc v0.2.169\n    Checking virtio-drivers v0.7.5\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling prettyplease v0.2.29\n   Compiling rustix v0.38.44\n   Compiling heapless v0.8.0\n   Compiling clang-sys v1.8.1\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling memchr v2.7.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking stable_deref_trait v1.2.0\n   Compiling regex-syntax v0.8.5\n    Checking rand_core v0.6.4\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arch_boot","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:19.063568069 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:44:06.060096475 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:44:13|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:30:58.911528953 +08:00:00\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n   Compiling enumn v0.1.14\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking virtio-drivers v0.7.5\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling version_check v0.9.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking rand_core v0.6.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking rand v0.8.5\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:00:54.436767153 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nraw-cpuid       11.2.0   11.3.0  11.3.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:31:05.138852642 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n   Compiling enumn v0.1.14\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking virtio-drivers v0.7.5\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling version_check v0.9.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking rand_core v0.6.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking rand v0.8.5\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axalloc","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:21.640553843 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling rlsf v0.2.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axalloc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:44:35.340126224 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking static_assertions v1.1.0\n   Compiling unicode-width v0.1.14\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:44:41|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:31:25.404409486 +08:00:00\n    Building axalloc v0.1.0 (current)\n       Built [   5.318s] (current)\n     Parsing axalloc v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axalloc-0_1_0-976a0244f7e8ff0f/target/aarch64-unknown-none/doc/axalloc.json\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:01:42.438054415 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:31:31.796380007 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\n       Built [   5.318s] (current)\n     Parsing axalloc v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axalloc-0_1_0-976a0244f7e8ff0f/target/aarch64-unknown-none/doc/axalloc.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axdisplay","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:22.955103298 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling either v1.13.0\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:45:22.344115104 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:45:29|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:31:44.26105177 +08:00:00\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling toml_edit v0.22.22\n    Checking tock-registers v0.9.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.8.0\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:03:17.828926814 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:31:52.396185101 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling toml_edit v0.22.22\n    Checking tock-registers v0.9.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.8.0\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axdriver","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:25.204751167 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling zerocopy v0.7.35\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axdriver, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:45:52.153496316 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling zerocopy-derive v0.7.35\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:45:59|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:32:19.240425843 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v9.4.0\n    Checking aarch64-cpu v10.0.0\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking volatile v0.3.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking zerocopy v0.7.35\n    Checking core_detect v1.0.0\n    Checking const-default v1.0.0\n    Checking volatile v0.2.7\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking rlsf v0.2.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking virtio-drivers v0.7.5\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:04:04.432781485 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:32:24.759519395 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v9.4.0\n    Checking aarch64-cpu v10.0.0\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking volatile v0.3.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking zerocopy v0.7.35\n    Checking core_detect v1.0.0\n    Checking const-default v1.0.0\n    Checking volatile v0.2.7\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking rlsf v0.2.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking virtio-drivers v0.7.5\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axhal","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:36.776188023 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:47:45.066688373 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:47:51|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:33:52.217236464 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.9.0\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v2.0.96\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling svgbobdoc v0.3.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:07:18.029137441 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nbitflags        2.6.0    2.8.0   2.8.0   Normal  ---\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nraw-cpuid       11.2.0   11.3.0  11.3.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.11.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:34:02.03080206 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.9.0\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v2.0.96\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling svgbobdoc v0.3.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axlibc","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:38.548375274 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling prettyplease v0.2.25\n   Compiling rustix v0.38.41\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling libc v0.2.167\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axlibc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:48:13.65512701 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n   Compiling glob v0.3.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling clang-sys v1.8.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:48:21|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:34:28.139233179 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling prettyplease v0.2.29\n   Compiling libc v0.2.169\n    Checking virtio-drivers v0.7.5\n   Compiling rustix v0.38.44\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling clang-sys v1.8.1\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling regex-syntax v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling heapless v0.8.0\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:08:05.205031161 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:34:34.807941933 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling prettyplease v0.2.29\n   Compiling libc v0.2.169\n    Checking virtio-drivers v0.7.5\n   Compiling rustix v0.38.44\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling clang-sys v1.8.1\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling regex-syntax v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling heapless v0.8.0\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axlog","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axlog, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:42.373123943 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axlog, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:48:45.009917683 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:48:51|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:35:02.259070525 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking aarch64-cpu v10.0.0\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:09:05.854859368 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nchrono  0.4.38   0.4.39  0.4.39  Normal  ---\nlog     0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:35:04.841362282 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking aarch64-cpu v10.0.0\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axmem","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:43.047649474 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling nb v1.1.0\n   Compiling rand v0.8.5\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling nb v0.1.3\n   Compiling driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axmem, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:49:09.246345886 +08:00:00\n    Checking log v0.4.21\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:49:17|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:35:21.01356672 +08:00:00\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking byteorder v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking zerocopy v0.7.35\n    Checking nb v1.1.0\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking nb v0.1.3\n    Checking zero v0.1.3\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking xmas-elf v0.9.1\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:09:41.672618567 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nlog    0.4.21   0.4.25  0.4.25  Normal  ---\nriscv  0.10.1   ---     0.12.1  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:35:26.770099868 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking byteorder v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking zerocopy v0.7.35\n    Checking nb v1.1.0\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking nb v0.1.3\n    Checking zero v0.1.3\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking xmas-elf v0.9.1\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axsignal","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:51.905177279 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:51:12.546440491 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:51:19|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:37:17.39452985 +08:00:00\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.96\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.25\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.8.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axsignal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:13:03.233605723 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:37:25.078610219 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.96\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.25\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.8.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axtask","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:42:01.054636815 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axtask, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:53:11.297475806 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:53:18|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:38:31.185017397 +08:00:00\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking log v0.4.25\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling autocfg v1.4.0\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:16:02.417627904 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:38:41.200406655 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking log v0.4.25\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling autocfg v1.4.0\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axtrap","count":5,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axtrap, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:42:02.519695509 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axtrap, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:53:39.91307899 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:53:46|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:38:56.287661888 +08:00:00\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n   Compiling syn v1.0.109\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling svgbobdoc v0.3.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling zerocopy-derive v0.7.35\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:16:49.83736265 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:39:07.875097146 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n   Compiling syn v1.0.109\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling svgbobdoc v0.3.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling zerocopy-derive v0.7.35\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arceos_api","count":4,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:09.187525853 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling spin v0.9.8\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling fdt v0.1.5\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:43:06.120546792 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:43:13|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:29:31.440751849 +08:00:00\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n   Compiling syn v1.0.109\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling svgbobdoc v0.3.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking rlsf v0.2.1\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling zerocopy-derive v0.7.35\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling enumn v0.1.14\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking zerocopy v0.7.35\n    Checking stable_deref_trait v1.2.0\n    Checking rand v0.8.5\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:29:44.051726454 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n   Compiling syn v1.0.109\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling svgbobdoc v0.3.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking rlsf v0.2.1\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling zerocopy-derive v0.7.35\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling enumn v0.1.14\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking zerocopy v0.7.35\n    Checking stable_deref_trait v1.2.0\n    Checking rand v0.8.5\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axfeat","count":4,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:28.465391967 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:46:21.657965824 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:46:28|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:32:36.004389712 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling serde v1.0.217\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:32:39.955200773 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling serde v1.0.217\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axruntime","count":4,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:50.413646499 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:50:43.680844719 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:50:50|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:36:59.215814225 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axruntime-0_1_0-19388cf34775fb41/target/debug/build/axdriver-8f6fd504e718c874/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"pci\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:37:04.932985279 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axruntime-0_1_0-19388cf34775fb41/target/debug/build/axdriver-8f6fd504e718c874/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"pci\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axstarry","count":4,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axstarry, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:53.368425614 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axstarry, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:51:49.121966112 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:51:56|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:37:36.896370912 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling unicode-ident v1.0.15\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:37:41.03921041 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling unicode-ident v1.0.15\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axstd","count":4,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:57.81259666 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot)\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axstd, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:52:20.021497368 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:52:27|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:37:53.570920439 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling toml_datetime v0.6.8\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:37:57.339363921 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling toml_datetime v0.6.8\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axsync","count":4,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:59.547159349 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=axsync, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:52:42.591803843 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:52:49|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:38:10.310720259 +08:00:00\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.96\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.8.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:38:18.021852145 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.96\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.8.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axconfig","count":3,"raw_reports":[{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:31:38.747444077 +08:00:00\n    Building axconfig v0.1.0 (current)\n       Built [   3.245s] (current)\n     Parsing axconfig v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axconfig-0_1_0-01666ec060466c14/target/aarch64-unknown-none/doc/axconfig.json\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:02:30.449868866 +08:00:00\n\nName   Project  Compat   Latest   Kind   Platform\n----   -------  ------   ------   ----   --------\nserde  1.0.215  1.0.217  1.0.217  Build  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:31:42.417451404 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\n       Built [   3.245s] (current)\n     Parsing axconfig v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axconfig-0_1_0-01666ec060466c14/target/aarch64-unknown-none/doc/axconfig.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arceos-bwbench","count":2,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos-bwbench, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:40:42.156310259 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n   Compiling log v0.4.21\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling tock-registers v0.8.1\n   Compiling syn v2.0.90\n   Compiling aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v2.6.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling base64 v0.13.1\n   Compiling const-default v1.0.0\n   Compiling bit_field v0.10.2\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling lazy_static v1.5.0\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=arceos-bwbench, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:42:17.1041022 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:42:24|RAP|ERROR|: Finished with non-zero exit code.\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"monolithic_userboot","count":2,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:42:13.614966652 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling riscv v0.10.1\n   Compiling xmas-elf v0.9.1\n   Compiling ahash v0.7.8\n   Compiling embedded-hal v0.2.7\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=monolithic_userboot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:54:46.097570461 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking byteorder v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:54:53|RAP|ERROR|: Finished with non-zero exit code.\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rapx","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}