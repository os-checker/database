{
  "repo": {
    "user": "Starry-OS",
    "repo": "Starry-Old"
  },
  "data": [
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axnet",
      "count": 16,
      "raw_reports": [
        {
          "file": "modules/axnet/src/smoltcp_impl/addr.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n",
              "warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:28.156216126 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:17.405869346 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling heapless v0.8.0\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:08:56.682613275 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n   Compiling x86 v0.52.0\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:09:04|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:52:26.178105404 +08:00:00\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.104\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.5.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.13\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:37.909134716 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axnet, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:38.824960914 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:45:41.788828227 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal  ---\nlog     0.4.21   0.4.27  0.4.27  Normal  ---\nspin    0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:52:38.510088275 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.104\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.5.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.13\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axnet/src/smoltcp_impl/listen_table.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "modules/axnet/src/smoltcp_impl/tcp.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/smoltcp_impl/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "linux_syscall_api",
      "count": 16,
      "raw_reports": [
        {
          "file": "api/linux_syscall_api/src/syscall_fs/imp/io.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n",
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:327:5\n    |\n327 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n",
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"
            ]
          }
        },
        {
          "file": "api/linux_syscall_api/src/syscall_fs/imp/ctl.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n",
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:41.384142305 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:42.607015704 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:13:33.974390575 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.18\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:13:42|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:57:51.616675224 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n    Checking bit_field v0.10.2\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.5.0\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.13\n   Compiling syn v1.0.109\n   Compiling rustversion v1.0.21\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:09:02.194451833 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=linux_syscall_api, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:09:03.129853276 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 14:00:09.376918961 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\nnum_enum  0.5.11   ---     0.7.4   Normal  ---\nrand      0.8.5    ---     0.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:58:03.94799243 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n    Checking bit_field v0.10.2\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.5.0\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.13\n   Compiling syn v1.0.109\n   Compiling rustversion v1.0.21\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axfs",
      "count": 15,
      "raw_reports": [
        {
          "file": "modules/axfs/src/fs/fatfs.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n",
              "warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:19.808562099 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:03.121895777 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:05:55.20795217 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n    Checking log v0.4.21\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v2.6.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:06:03|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:48:24.119458381 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n    Checking log v0.4.27\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n   Compiling toml_edit v0.22.27\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.21\n    Checking cfg-if v1.0.1\n    Checking spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling glob v0.3.2\n   Compiling paste v1.0.15\n    Checking lazy_static v1.5.0\n    Checking tock-registers v0.8.1\n   Compiling clang-sys v1.8.1\n   Compiling prettyplease v0.2.35\n   Compiling libc v0.2.174\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:23.892433993 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axfs, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:24.796907914 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:35:57.573165491 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\nlog       0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:48:35.557114387 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n    Checking log v0.4.27\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n   Compiling toml_edit v0.22.27\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.21\n    Checking cfg-if v1.0.1\n    Checking spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling glob v0.3.2\n   Compiling paste v1.0.15\n    Checking lazy_static v1.5.0\n    Checking tock-registers v0.8.1\n   Compiling clang-sys v1.8.1\n   Compiling prettyplease v0.2.35\n   Compiling libc v0.2.174\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axfs/src/api/file.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
            ]
          }
        },
        {
          "file": "modules/axfs/src/fops.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axprocess",
      "count": 15,
      "raw_reports": [
        {
          "file": "modules/axtask/src/task.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:28.877266993 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:19.492624422 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:09:28.470516258 +08:00:00\n    Checking log v0.4.21\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling base64 v0.13.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:09:36|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:53:07.178488694 +08:00:00\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n    Checking log v0.4.27\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.5.0\n   Compiling rustversion v1.0.21\n   Compiling lock_api v0.4.13\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:40.21692997 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axprocess, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:41.149235548 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:47:18.75191876 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\nriscv     0.10.1   ---     0.14.0  Normal  ---\nxmas-elf  0.9.1    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:53:19.328636724 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n    Checking log v0.4.27\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.5.0\n   Compiling rustversion v1.0.21\n   Compiling lock_api v0.4.13\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axprocess/src/process.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "modules/axtask/src/processor.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axfutex",
      "count": 14,
      "raw_reports": [
        {
          "file": "modules/axtask/src/task.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:22.315832798 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:06.619815475 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:06:27.230243852 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n    Checking log v0.4.21\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling rustversion v1.0.18\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling base64 v0.13.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:06:35|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:49:31.181203416 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.1\n   Compiling syn v2.0.104\n    Checking cfg-if v1.0.1\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.5.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.13\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:26.435489515 +08:00:00\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking x86_64 v0.15.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axfutex, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:27.338687402 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking x86_64 v0.15.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:37:36.24508784 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nbitflags   2.6.0    2.9.1   2.9.1   Normal  ---\nhashbrown  0.11.2   ---     0.15.4  Normal  ---\nlog        0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:49:43.364257918 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.1\n   Compiling syn v2.0.104\n    Checking cfg-if v1.0.1\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.5.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.13\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axtask/src/processor.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arceos_posix_api",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:13.305264468 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 12:59:48.979667678 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling bit v0.1.1\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:02:44.30022266 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:02:52|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:45:10.487227104 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.104\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling autocfg v1.5.0\n    Checking bitflags v1.3.2\n   Compiling lock_api v0.4.13\n   Compiling toml_edit v0.22.27\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:08.72270433 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\n    Checking x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arceos_posix_api, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:09.671421172 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\n    Checking x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:24:41.87123047 +08:00:00\n\nName     Project  Compat  Latest  Kind    Platform\n----     -------  ------  ------  ----    --------\nbindgen  0.69.5   ---     0.72.0  Build   ---\nspin     0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:45:23.19882265 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.104\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling autocfg v1.5.0\n    Checking bitflags v1.3.2\n   Compiling lock_api v0.4.13\n   Compiling toml_edit v0.22.27\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arch_boot",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:13.713321648 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 12:59:50.776656818 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling fdt v0.1.5\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:03:14.076058612 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n    Checking bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:03:22|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:45:53.273290185 +08:00:00\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling unicode-ident v1.0.18\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\n    Checking x86_64 v0.15.2\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:11.074273831 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arch_boot, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:11.995655763 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:26:19.103834742 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\ncfg-if          1.0.0    1.0.1   1.0.1   Normal  ---\nlog             0.4.21   0.4.27  0.4.27  Normal  ---\nraw-cpuid       11.2.0   11.5.0  11.5.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.10.1   ---     0.14.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:46:05.889711385 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling unicode-ident v1.0.18\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\n    Checking x86_64 v0.15.2\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axdisplay",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:15.488676517 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 12:59:55.432262092 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:04:25.142736675 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking bitflags v2.6.0\n    Checking log v0.4.21\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:04:32|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:47:10.412040826 +08:00:00\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n    Checking log v0.4.27\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:16.600099545 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axdisplay, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:17.509432571 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:31:08.27052087 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:47:20.560443101 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n    Checking log v0.4.27\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axdriver",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:16.563053702 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 12:59:57.505672584 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling zerocopy v0.7.35\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:04:55.139834331 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n    Checking bitflags v2.6.0\n   Compiling x86 v0.52.0\n    Checking log v0.4.21\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:05:02|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:47:47.541709149 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n    Checking bit_field v0.10.2\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.1\n   Compiling autocfg v1.5.0\n   Compiling syn v2.0.104\n   Compiling lock_api v0.4.13\n   Compiling toml_edit v0.22.27\n    Checking scopeguard v1.2.0\n   Compiling semver v1.0.26\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking bitflags v2.9.1\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n   Compiling rustc_version v0.4.1\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling heapless v0.7.17\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking aarch64-cpu v9.4.0\n    Checking hash32 v0.2.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking volatile v0.4.6\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:19.197552674 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking zerocopy v0.7.35\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axdriver, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:20.126862625 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking zerocopy v0.7.35\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:32:43.094904846 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal  ---\nlog     0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:47:57.720760093 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n    Checking bit_field v0.10.2\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.1\n   Compiling autocfg v1.5.0\n   Compiling syn v2.0.104\n   Compiling lock_api v0.4.13\n   Compiling toml_edit v0.22.27\n    Checking scopeguard v1.2.0\n   Compiling semver v1.0.26\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking bitflags v2.9.1\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n   Compiling rustc_version v0.4.1\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling heapless v0.7.17\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking aarch64-cpu v9.4.0\n    Checking hash32 v0.2.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking volatile v0.4.6\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axhal",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:23.041368214 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:08.439291366 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling raw-cpuid v11.2.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:06:56.428018487 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:07:04|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:50:09.398695784 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling quote v1.0.40\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking cfg-if v1.0.1\n    Checking bitflags v2.9.1\n   Compiling toml_edit v0.22.27\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.21\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling syn v2.0.104\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:28.819888545 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axhal, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:29.722065764 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:39:13.065664106 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nbitflags        2.6.0    2.9.1   2.9.1   Normal  ---\ncfg-if          1.0.0    1.0.1   1.0.1   Normal  ---\neither          1.13.0   1.15.0  1.15.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.27  0.4.27  Normal  ---\nraw-cpuid       11.2.0   11.5.0  11.5.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.11.1   ---     0.14.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx2apic          0.4.3    ---     0.5.0   Normal  cfg(target_arch = \"x86_64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:50:19.809702575 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling quote v1.0.40\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking cfg-if v1.0.1\n    Checking bitflags v2.9.1\n   Compiling toml_edit v0.22.27\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.21\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling syn v2.0.104\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axlibc",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:24.528783257 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:11.387862825 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:07:28.100354088 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking log v0.4.21\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:07:36|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:50:34.290610059 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.1\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.5.0\n   Compiling toml_edit v0.22.27\n    Checking cfg-if v1.0.1\n   Compiling lock_api v0.4.13\n    Checking raw-cpuid v10.7.0\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:31.408069881 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axlibc, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:32.322171905 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:40:50.705826537 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.72.0  Build  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:50:46.998346966 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.1\n    Checking bitflags v1.3.2\n   Compiling autocfg v1.5.0\n   Compiling toml_edit v0.22.27\n    Checking cfg-if v1.0.1\n   Compiling lock_api v0.4.13\n    Checking raw-cpuid v10.7.0\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axmem",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:25.952218427 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:15.284206692 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:08:24.991700548 +08:00:00\n    Checking log v0.4.21\n   Compiling equivalent v1.0.1\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n    Checking bit_field v0.10.2\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking volatile v0.4.6\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n    Checking x86_64 v0.15.1\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:08:33|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:51:33.50452979 +08:00:00\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.4\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling toml_write v0.1.2\n    Checking bit_field v0.10.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.21\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:35.015504451 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axmem, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:35.936854394 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:44:02.71034203 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nlog       0.4.21   0.4.27  0.4.27  Normal  ---\nriscv     0.10.1   ---     0.14.0  Normal  ---\nxmas-elf  0.9.1    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:51:44.980049505 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.4\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling toml_write v0.1.2\n    Checking bit_field v0.10.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.21\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axruntime",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:30.29352627 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:22.116935691 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:09:57.977151141 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.15.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:10:06|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:53:37.139447936 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.104\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\n    Checking x86_64 v0.15.2\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:42.597782806 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axruntime, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:43.498480073 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axruntime, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:48:55.998663161 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:53:49.577350811 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.104\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\n    Checking x86_64 v0.15.2\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axsignal",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:31.762675545 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:23.876238346 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:10:27.259879744 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.7.0\n   Compiling proc-macro2 v1.0.92\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:10:35|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:54:24.980296852 +08:00:00\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.18\n   Compiling rustversion v1.0.21\n   Compiling toml_edit v0.22.27\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking cfg-if v1.0.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.104\n    Checking log v0.4.27\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking x86_64 v0.14.13\n    Checking x86_64 v0.15.2\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking x2apic v0.4.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:44.910835578 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axsignal, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:45.824126068 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axsignal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:50:31.781816756 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:54:34.355338678 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.18\n   Compiling rustversion v1.0.21\n   Compiling toml_edit v0.22.27\n   Compiling quote v1.0.40\n    Checking bitflags v2.9.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking cfg-if v1.0.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.104\n    Checking log v0.4.27\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking x86_64 v0.14.13\n    Checking x86_64 v0.15.2\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking x2apic v0.4.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axsync",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:36.39778973 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:31.16246844 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:11:58.92689856 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:12:07|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:55:48.50955735 +08:00:00\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling toml_write v0.1.2\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.18\n   Compiling rustversion v1.0.21\n   Compiling toml_edit v0.22.27\n    Checking cfg-if v1.0.1\n   Compiling quote v1.0.40\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.27\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking bitflags v2.9.1\n   Compiling syn v2.0.104\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking x86_64 v0.15.2\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.13\n    Checking aarch64-cpu v9.4.0\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking x2apic v0.4.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:52.386127165 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axsync, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:53.293941581 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axsync, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:55:18.566973595 +08:00:00\n\nName    Project  Compat  Latest  Kind         Platform\n----    -------  ------  ------  ----         --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal       ---\nrand    0.8.5    ---     0.9.1   Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:55:58.515386775 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling toml_write v0.1.2\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.18\n   Compiling rustversion v1.0.21\n   Compiling toml_edit v0.22.27\n    Checking cfg-if v1.0.1\n   Compiling quote v1.0.40\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.27\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking bitflags v2.9.1\n   Compiling syn v2.0.104\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking x86_64 v0.15.2\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.13\n    Checking aarch64-cpu v9.4.0\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking x2apic v0.4.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axtask",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:37.840543033 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:33.141142933 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:12:28.229619266 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.7.0\n   Compiling proc-macro2 v1.0.92\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n    Checking bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:12:36|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:56:26.327169561 +08:00:00\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n    Checking cfg-if v1.0.1\n   Compiling quote v1.0.40\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n    Checking bitflags v2.9.1\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n   Compiling syn v2.0.104\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:54.727238618 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axtask, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:55.625994834 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:56:54.141743725 +08:00:00\n\nName    Project  Compat  Latest  Kind         Platform\n----    -------  ------  ------  ----         --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal       ---\nlog     0.4.21   0.4.27  0.4.27  Normal       ---\nrand    0.8.5    ---     0.9.1   Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:56:37.270152441 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n    Checking cfg-if v1.0.1\n   Compiling quote v1.0.40\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n    Checking bitflags v2.9.1\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n   Compiling syn v2.0.104\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axtrap",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:39.955150711 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:34.989874496 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:12:57.547348188 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.7.0\n   Compiling proc-macro2 v1.0.92\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.15.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:13:05|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:57:07.502461861 +08:00:00\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling rustversion v1.0.21\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:57.094450005 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axtrap, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:58.009723405 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:58:32.273177899 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\ncfg-if          1.0.0    1.0.1   1.0.1   Normal  ---\nlog             0.4.21   0.4.27  0.4.27  Normal  ---\nriscv           0.10.1   ---     0.14.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:57:19.724968448 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.1\n    Checking cfg-if v1.0.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.27\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling rustversion v1.0.21\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arceos_api",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:11.799264547 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 12:59:42.768304167 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling spin v0.9.8\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:02:12.755202934 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.14.12\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:02:20|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:44:27.813304336 +08:00:00\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.1\n   Compiling autocfg v1.5.0\n   Compiling toml_edit v0.22.27\n   Compiling lock_api v0.4.13\n    Checking raw-cpuid v10.7.0\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.21\n    Checking spin v0.9.8\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:03.159618615 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n    Checking lazy_static v1.5.0\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arceos_api, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:03.678020538 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n    Checking lazy_static v1.5.0\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:44:40.676448293 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking bit_field v0.10.2\n    Checking bitflags v2.9.1\n   Compiling syn v2.0.104\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.1\n   Compiling autocfg v1.5.0\n   Compiling toml_edit v0.22.27\n   Compiling lock_api v0.4.13\n    Checking raw-cpuid v10.7.0\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.21\n    Checking spin v0.9.8\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axfeat",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:18.376816542 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:00.142489847 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:05:24.250231021 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n    Checking x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:05:32|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:47:57.725431877 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:21.59281171 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axfeat, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:22.494740233 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:48:05.450154185 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axstarry",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:32.844977479 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:26.336223691 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling virtio-drivers v0.7.4\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:10:59.051875704 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:11:07|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:54:53.731321618 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:47.609008954 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axstarry, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:48.548714643 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:54:59.987556011 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axstd",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:34.295927881 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:28.955878477 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:11:29.448401947 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.7.0\n   Compiling proc-macro2 v1.0.92\n    Checking raw-cpuid v10.7.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:11:37|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:55:18.690733921 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:50.030613251 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axstd, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:50.943971348 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.14.12\n    Checking x86_64 v0.15.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:55:24.987473387 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axalloc",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 12:59:53.062764907 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:03:40.386426339 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling syn v1.0.109\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking raw-cpuid v10.7.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n   Compiling base64 v0.13.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:03:46|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:46:22.830098447 +08:00:00\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling proc-macro2 v1.0.95\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling indexmap v2.10.0\n    Checking cfg-if v1.0.1\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n   Compiling syn v1.0.109\n    Checking raw-cpuid v10.7.0\n   Compiling quote v1.0.40\n   Compiling toml_edit v0.22.27\n    Checking log v0.4.27\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n   Compiling base64 v0.13.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n    Checking buddy_system_allocator v0.10.0\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking slab_allocator v0.3.1 (https://github.com/arceos-org/slab_allocator.git#3c13499d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking buddy_system_allocator v0.9.1\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:13.131254583 +08:00:00\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axalloc, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:13.400538115 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:27:55.969527795 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal  ---\nlog     0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:46:29.35553432 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling proc-macro2 v1.0.95\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling indexmap v2.10.0\n    Checking cfg-if v1.0.1\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n   Compiling syn v1.0.109\n    Checking raw-cpuid v10.7.0\n   Compiling quote v1.0.40\n   Compiling toml_edit v0.22.27\n    Checking log v0.4.27\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n   Compiling base64 v0.13.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n    Checking buddy_system_allocator v0.10.0\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking slab_allocator v0.3.1 (https://github.com/arceos-org/slab_allocator.git#3c13499d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking buddy_system_allocator v0.9.1\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/bee485a/src/arch/x86_64.rs:158:3\n    |\n158 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n158 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axlog",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:12.844118091 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:07:54.705551107 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling x86 v0.52.0\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:08:01|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:51:12.023524676 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling x86 v0.52.0\n    Checking raw-cpuid v10.7.0\n    Checking bit_field v0.10.2\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling num-traits v0.2.19\n   Compiling toml_edit v0.22.27\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.27\n   Compiling quote v1.0.40\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:08:33.150653874 +08:00:00\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axlog, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:33.424676542 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:42:26.433773145 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal  ---\nchrono  0.4.38   0.4.41  0.4.41  Normal  ---\nlog     0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:51:17.308039505 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling x86 v0.52.0\n    Checking raw-cpuid v10.7.0\n    Checking bit_field v0.10.2\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.5.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling num-traits v0.2.19\n   Compiling toml_edit v0.22.27\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.27\n   Compiling quote v1.0.40\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:370:1\n    |\n370 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arceos-bwbench",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:04.575771084 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 12:59:28.183738162 +08:00:00\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.21\n   Compiling bitflags v1.3.2\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rustversion v1.0.18\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling volatile v0.4.6\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling tock-registers v0.8.1\n   Compiling spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling const-default v1.0.0\n   Compiling rlsf v0.2.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling x86_64 v0.15.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n   Compiling byteorder v1.5.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling x86_64 v0.14.12\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:01:24.382247129 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking log v0.4.21\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking bitflags v2.6.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling unicode-width v0.1.14\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:01:32|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:07:51.287877065 +08:00:00\n    Checking bit_field v0.10.2\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking raw-cpuid v10.7.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.18\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling svgbobdoc v0.3.0\n    Checking tock-registers v0.8.1\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking rlsf v0.2.1\n    Checking x86_64 v0.15.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking byteorder v1.5.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.14.12\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arceos-bwbench, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:07:54.115554706 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking bit_field v0.10.2\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking raw-cpuid v10.7.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.18\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling svgbobdoc v0.3.0\n    Checking tock-registers v0.8.1\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking rlsf v0.2.1\n    Checking x86_64 v0.15.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking byteorder v1.5.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.14.12\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "monolithic_userboot",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Audit\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:42.443546165 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:00:47.904279282 +08:00:00\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-06-28 13:14:07.800454612 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.18\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:14:15|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Udeps\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \n// timestamp=2025-06-28 14:09:04.93281682 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=monolithic_userboot, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:09:05.8864227 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\nerror: unsafe attribute used without unsafe\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:155:3\n    |\n155 | #[naked]\n    |   ^^^^^ usage of unsafe attribute\n    |\nhelp: wrap the attribute in `unsafe(...)`\n    |\n155 | #[unsafe(naked)]\n    |   +++++++     +\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n382 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n362 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n282 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n294 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 -     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n349 +     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axconfig",
      "count": 4,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-06-28 12:46:40.976407472 +08:00:00\n    Building axconfig v0.1.0 (current)\n       Built [   3.336s] (current)\n     Parsing axconfig v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: axconfig not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axconfig, checker=Udeps\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-none \ntimestamp=2025-06-28 14:08:15.066890513 +08:00:00\n\n\nstdout:\nunused dependencies:\n`axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)`\n└─── build-dependencies\n     └─── \"serde\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.37s\ninfo: Loading depinfo from \"/home/runner/check/batch_1/Starry-OS/Starry-Old/target/debug/build/axconfig-b34186e4181918a6/build_script_build-b34186e4181918a6.d\"\ninfo: Loading depinfo from \"/home/runner/check/batch_1/Starry-OS/Starry-Old/target/x86_64-unknown-none/debug/deps/axconfig-44baa30bad4d46a9.d\"\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:29:32.773832141 +08:00:00\n\nName       Project  Compat   Latest   Kind   Platform\n----       -------  ------   ------   ----   --------\nserde      1.0.215  1.0.219  1.0.219  Build  ---\ntoml_edit  0.22.22  0.22.27  0.22.27  Build  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-06-28 12:46:44.753670927 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\n       Built [   3.336s] (current)\n     Parsing axconfig v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: axconfig not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}