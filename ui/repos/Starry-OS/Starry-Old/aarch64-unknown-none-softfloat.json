{
  "repo": {
    "user": "Starry-OS",
    "repo": "Starry-Old"
  },
  "data": [
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axnet",
      "count": 16,
      "raw_reports": [
        {
          "file": "modules/axnet/src/smoltcp_impl/addr.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n",
              "warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:27.478855573 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:16.694808344 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:08:34.005492007 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling lock_api v0.4.12\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling heapless v0.8.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking hash32 v0.3.1\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:08:41|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:51:56.833398099 +08:00:00\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axnet, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:36.586076857 +08:00:00\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axnet, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:37.001080507 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:44:52.533035573 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal  ---\nlog     0.4.21   0.4.27  0.4.27  Normal  ---\nspin    0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:52:02.457284566 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axnet/src/smoltcp_impl/listen_table.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "modules/axnet/src/smoltcp_impl/tcp.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/smoltcp_impl/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axfs",
      "count": 15,
      "raw_reports": [
        {
          "file": "modules/axfs/src/fs/fatfs.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n",
              "warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:20.74964423 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:01.265455863 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling rand_core v0.6.4\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:05:40.077040488 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n    Checking log v0.4.21\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:05:47|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:48:35.559542154 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:22.501359548 +08:00:00\n    Checking log v0.4.21\n    Checking bitflags v2.6.0\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axfs, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:22.775933496 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking log v0.4.21\n    Checking bitflags v2.6.0\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:35:09.016394911 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\nlog       0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:48:40.292539196 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axfs/src/api/file.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
            ]
          }
        },
        {
          "file": "modules/axfs/src/fops.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axprocess",
      "count": 15,
      "raw_reports": [
        {
          "file": "modules/axtask/src/task.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:29.588422654 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:18.330404292 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling ahash v0.7.8\n   Compiling capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:09:04.747108349 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking const-default v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:09:12|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:52:50.670703031 +08:00:00\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n    Checking log v0.4.27\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling serde v1.0.219\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axprocess, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:38.831543016 +08:00:00\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `log` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axprocess, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:39.112443545 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `log` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:46:29.55410854 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\nriscv     0.10.1   ---     0.14.0  Normal  ---\nxmas-elf  0.9.1    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:52:55.98675144 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n    Checking log v0.4.27\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling serde v1.0.219\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axprocess/src/process.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "modules/axtask/src/processor.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "linux_syscall_api",
      "count": 15,
      "raw_reports": [
        {
          "file": "api/linux_syscall_api/src/syscall_fs/imp/ctl.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n",
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"
            ]
          }
        },
        {
          "file": "api/linux_syscall_api/src/syscall_fs/imp/io.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n",
              "warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:40.992921435 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:41.489283567 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:13:18.069063216 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking const-default v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:13:26|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:57:34.54987105 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=linux_syscall_api, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:09:01.396421807 +08:00:00\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=linux_syscall_api, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:09:01.685000258 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:58:57.246869149 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\nnum_enum  0.5.11   ---     0.7.4   Normal  ---\nrand      0.8.5    ---     0.9.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:57:40.156607349 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axfutex",
      "count": 14,
      "raw_reports": [
        {
          "file": "modules/axtask/src/task.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:21.636198599 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:05.52433371 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling ahash v0.7.8\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:06:03.299238113 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling proc-macro2 v1.0.92\n    Checking log v0.4.21\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:06:11|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:49:02.459678468 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.4\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfutex, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:25.673345518 +08:00:00\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axfutex, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:25.955041563 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:36:46.494602409 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nbitflags   2.6.0    2.9.1   2.9.1   Normal  ---\nhashbrown  0.11.2   ---     0.15.4  Normal  ---\nlog        0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:49:07.779247849 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.4\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"
            ]
          }
        },
        {
          "file": "modules/axtask/src/processor.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arceos_posix_api",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:12.54231671 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:59:47.943708967 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling clang-sys v1.8.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:02:20.8997749 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n   Compiling glob v0.3.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling clang-sys v1.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:02:28|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:44:40.680595692 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling serde v1.0.219\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_posix_api, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:03.68333361 +08:00:00\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling syn v2.0.90\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arceos_posix_api, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:06.597177976 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling syn v2.0.90\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:23:52.78945459 +08:00:00\n\nName     Project  Compat  Latest  Kind    Platform\n----     -------  ------  ------  ----    --------\nbindgen  0.69.5   ---     0.72.0  Build   ---\nspin     0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:44:46.199660335 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling serde v1.0.219\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arch_boot",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:14.421435639 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:59:49.926923617 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lazy_static v1.5.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:02:59.6827866 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:03:06|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:45:35.429146085 +08:00:00\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arch_boot, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:10.226525773 +08:00:00\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking log v0.4.21\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arch_boot, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:10.642283014 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking log v0.4.21\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:25:06.118862697 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\ncfg-if          1.0.0    1.0.1   1.0.1   Normal  ---\nlog             0.4.21   0.4.27  0.4.27  Normal  ---\nraw-cpuid       11.2.0   11.5.0  11.5.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.10.1   ---     0.14.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:45:41.423943462 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axdisplay",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:16.213148664 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:59:53.725588853 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling virtio-drivers v0.7.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:04:10.585896281 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:04:17|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:46:54.232216707 +08:00:00\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling toml_write v0.1.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdisplay, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:15.727165422 +08:00:00\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axdisplay, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:16.139233662 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:29:56.721398076 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:47:01.305728486 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling toml_write v0.1.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n   Compiling syn v2.0.104\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axdriver",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:17.663698435 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:59:56.782190625 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:04:40.059434591 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking aarch64-cpu v9.4.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n    Checking either v1.13.0\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling zerocopy-derive v0.7.35\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:04:47|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:47:20.564218229 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling toml_write v0.1.2\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axdriver, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:17.516316655 +08:00:00\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axdriver, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:17.933806207 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:31:55.124171989 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal  ---\nlog     0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:47:27.280790254 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling toml_write v0.1.2\n   Compiling indexmap v2.10.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axhal",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:23.789536615 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:07.61365891 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:06:35.436656272 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:06:42|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:49:53.698640733 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking cfg-if v1.0.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `cfg-if` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:27.345560365 +08:00:00\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axhal, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:27.753109648 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:38:25.364597658 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nbitflags        2.6.0    2.9.1   2.9.1   Normal  ---\ncfg-if          1.0.0    1.0.1   1.0.1   Normal  ---\neither          1.13.0   1.15.0  1.15.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.27  0.4.27  Normal  ---\nraw-cpuid       11.2.0   11.5.0  11.5.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.11.1   ---     0.14.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx2apic          0.4.3    ---     0.5.0   Normal  cfg(target_arch = \"x86_64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:49:59.513820561 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking cfg-if v1.0.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `cfg-if` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axlibc",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:25.241419255 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:10.507887892 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling rustix v0.38.41\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling libc v0.2.167\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:07:12.395454037 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n   Compiling glob v0.3.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling clang-sys v1.8.1\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:07:20|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:50:31.208819022 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling equivalent v1.0.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlibc, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:29.728264872 +08:00:00\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axlibc, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:30.152962224 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:40:02.12649282 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.72.0  Build  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:50:34.284603439 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling equivalent v1.0.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axmem",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:26.688107987 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:13.502813421 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling nb v1.1.0\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling rand v0.8.5\n   Compiling nb v0.1.3\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:08:09.138805897 +08:00:00\n    Checking log v0.4.21\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:08:17|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:51:17.311831475 +08:00:00\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axmem, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:34.107337644 +08:00:00\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axmem, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:34.386885108 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:43:14.460645739 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nlog       0.4.21   0.4.27  0.4.27  Normal  ---\nriscv     0.10.1   ---     0.14.0  Normal  ---\nxmas-elf  0.9.1    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:51:22.618354446 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axruntime",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:31.002527025 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:21.526657453 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:09:43.731803657 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:09:50|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:53:30.992650593 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling unicode-ident v1.0.18\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axruntime, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:41.771015822 +08:00:00\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking log v0.4.21\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axruntime, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:42.177460215 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking log v0.4.21\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axruntime, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:47:42.724886912 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:53:37.135035823 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling unicode-ident v1.0.18\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axsignal",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:32.480859564 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:23.047763011 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:10:13.122244247 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:10:20|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:54:11.518724161 +08:00:00\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking cfg-if v1.0.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsignal, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:44.098013933 +08:00:00\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axsignal, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:44.499819599 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axsignal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:49:19.630822015 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.9.1   2.9.1   Normal  ---\ncfg-if    1.0.0    1.0.1   1.0.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:54:16.676145742 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking cfg-if v1.0.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axsync",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:37.118702005 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:30.328282576 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:11:37.581317454 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:11:44|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:55:34.298681409 +08:00:00\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n    Checking cfg-if v1.0.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsync, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:51.563994561 +08:00:00\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking log v0.4.21\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axsync, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:51.971960201 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking log v0.4.21\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axsync, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:54:33.539451547 +08:00:00\n\nName    Project  Compat  Latest  Kind         Platform\n----    -------  ------  ------  ----         --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal       ---\nrand    0.8.5    ---     0.9.1   Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:55:39.802697103 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n    Checking cfg-if v1.0.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axtask",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:38.584285512 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:32.281071801 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:12:14.186899892 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:12:21|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:56:09.516798193 +08:00:00\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtask, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:53.898192712 +08:00:00\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axtask, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:54.306549434 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:55:43.030868411 +08:00:00\n\nName    Project  Compat  Latest  Kind         Platform\n----    -------  ------  ------  ----         --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal       ---\nlog     0.4.21   0.4.27  0.4.27  Normal       ---\nrand    0.8.5    ---     0.9.1   Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:56:15.923642121 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling toml_write v0.1.2\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axtrap",
      "count": 11,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:38.925146609 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:34.236772069 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:12:36.165025224 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:12:43|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:56:37.275180276 +08:00:00\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axtrap, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:56.248294453 +08:00:00\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axtrap, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:56.658726795 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:57:43.404791838 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\ncfg-if          1.0.0    1.0.1   1.0.1   Normal  ---\nlog             0.4.21   0.4.27  0.4.27  Normal  ---\nriscv           0.10.1   ---     0.14.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:56:43.053832335 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "mingo",
      "count": 11,
      "raw_reports": [
        {
          "file": "src/main.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n",
              "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n",
              "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
            ]
          }
        },
        {
          "file": "(virtual) atomvchecker",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=mingo, checker=Atomvchecker\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader\n// cmd=cargo +nightly-2023-03-09 atomvchecker -k atomicity_violation -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:59.297096404 +08:00:00\n   Compiling tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `compiler_builtins`\n\nerror[E0463]: can't find crate for `core`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/lib.rs:71:5\n   |\n71 | use core::ops::{BitAnd, BitOr, BitOrAssign, Not, Shl, Shr};\n   |     ^^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none-softfloat` target may not be installed\n   = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:68:5\n   |\n68 | use core::marker::PhantomData;\n   |     ^^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none-softfloat` target may not be installed\n   = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:69:5\n   |\n69 | use core::ops::{Add, AddAssign};\n   |     ^^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none-softfloat` target may not be installed\n   = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:4:5\n  |\n4 | use core::fmt;\n  |     ^^^^ can't find crate\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `core`\n --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:5:5\n  |\n5 | use core::marker::PhantomData;\n  |     ^^^^ can't find crate\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:193:3\n    |\n193 | #[derive(Copy, Clone)]\n    |   ^^^^^^\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:30:3\n   |\n30 | #[derive(Copy, Clone)]\n   |   ^^^^^^\n\nerror: cannot find macro `write` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:108:9\n    |\n108 |         write!(f, \"{:?}\", self.value)\n    |         ^^^^^\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:140:76\n    |\n140 |     pub fn read_as_enum<E: TryFromValue<T, EnumType = E>>(self, val: T) -> Option<E> {\n    |                                                                            ^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Clone` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:161:40\n    |\n161 | impl<T: UIntLike, R: RegisterLongName> Clone for Field<T, R> {\n    |                                        ^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Copy` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:170:40\n    |\n170 | impl<T: UIntLike, R: RegisterLongName> Copy for Field<T, R> {}\n    |                                        ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:217:35\n    |\n217 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n225 | FieldValue_impl_for!(u8);\n    | ------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:217:35\n    |\n217 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n226 | FieldValue_impl_for!(u16);\n    | ------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:217:35\n    |\n217 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n227 | FieldValue_impl_for!(u32);\n    | ------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:217:35\n    |\n217 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n228 | FieldValue_impl_for!(u64);\n    | ------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:217:35\n    |\n217 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n229 | FieldValue_impl_for!(u128);\n    | -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:217:35\n    |\n217 |         impl<R: RegisterLongName> From<FieldValue<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n230 | FieldValue_impl_for!(usize);\n    | --------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `FieldValue_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/fields.rs:300:32\n    |\n300 |     fn try_from_value(v: V) -> Option<Self::EnumType>;\n    |                                ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/interfaces.rs:217:10\n    |\n217 |     ) -> Option<E> {\n    |          ^^^^^^ not found in this scope\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:64:89\n   |\n64 |     pub fn read_as_enum<E: TryFromValue<T, EnumType = E>>(&self, field: Field<T, R>) -> Option<E> {\n   |                                                                                         ^^^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:116:35\n    |\n116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n124 | From_impl_for!(u8);\n    | ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:116:35\n    |\n116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n125 | From_impl_for!(u16);\n    | ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:116:35\n    |\n116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n126 | From_impl_for!(u32);\n    | ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:116:35\n    |\n116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n127 | From_impl_for!(u64);\n    | ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:116:35\n    |\n116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n128 | From_impl_for!(u128);\n    | -------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/local_register.rs:116:35\n    |\n116 |         impl<R: RegisterLongName> From<LocalRegisterCopy<$type, R>> for $type {\n    |                                   ^^^^ not found in this scope\n...\n129 | From_impl_for!(usize);\n    | --------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `From_impl_for` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror[E0405]: cannot find trait `Eq` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/lib.rs:87:7\n   |\n87 |     + Eq\n   |       ^^ not found in this scope\n\nerror[E0405]: cannot find trait `Copy` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/lib.rs:90:7\n   |\n90 |     + Copy\n   |       ^^^^ not found in this scope\n\nerror[E0405]: cannot find trait `Clone` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tock-registers-0.8.1/src/lib.rs:91:7\n   |\n91 |     + Clone\n   |       ^^^^^ not found in this scope\n\nSome errors have detailed explanations: E0405, E0412, E0463.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `tock-registers` (lib) due to 31 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat  --no-deps\n// timestamp=2025-06-28 12:43:55.271051908 +08:00:00\n Downloading crates ...\n  Downloaded aarch64-cpu v9.0.0\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:44.063807762 +08:00:00\n   Compiling tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader)\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n   --> src/main.rs:110:12\n    |\n110 | #![feature(asm_const)]\n    |            ^^^^^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n   --> src/main.rs:112:12\n    |\n112 | #![feature(panic_info_message)]\n    |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap_or` found for struct `core::panic::PanicMessage` in the current scope\n  --> src/panic_wait.rs:60:24\n   |\n60 |         info.message().unwrap_or(&format_args!(\"\")),\n   |                        ^^^^^^^^^ method not found in `PanicMessage<'_>`\n\nSome errors have detailed explanations: E0425, E0433, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 3 warnings\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 3 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=mingo, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:13:42.025998328 +08:00:00\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader)\n    Checking aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n   --> src/main.rs:110:12\n    |\n110 | #![feature(asm_const)]\n    |            ^^^^^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n   --> src/main.rs:112:12\n    |\n112 | #![feature(panic_info_message)]\n    |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap_or` found for struct `core::panic::PanicMessage` in the current scope\n  --> src/panic_wait.rs:60:24\n   |\n60 |         info.message().unwrap_or(&format_args!(\"\")),\n   |                        ^^^^^^^^^ method not found in `PanicMessage<'_>`\n\nSome errors have detailed explanations: E0425, E0433, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 3 warnings\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 3 warnings emitted\n05:13:43|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=mingo, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:09:03.137037519 +08:00:00\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=mingo, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:09:03.351888183 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=mingo, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/tools/raspi4/chainloader\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 14:00:09.488363882 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.0.0    9.4.0   10.0.0  Normal  cfg(target_arch = \"aarch64\")\ntock-registers  0.8.1    ---     0.9.0   Normal  ---\n"
            ]
          }
        },
        {
          "file": "src/cpu.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arceos_api",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:10.747309564 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:59:40.476642193 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling spin v0.9.8\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:01:50.892137913 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:01:58|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:44:10.631325525 +08:00:00\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos_api, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:01.777723097 +08:00:00\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arceos_api, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:02.188312913 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:44:16.381113299 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axfeat",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:19.09488373 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:59:59.284864678 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:05:10.023013566 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:05:17|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:48:05.454408562 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfeat, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:20.133382771 +08:00:00\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axfeat, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:20.544540015 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:48:11.483057718 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.219\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axstarry",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:33.927937849 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:24.957256583 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:10:42.945242426 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:10:50|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:54:34.362234247 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstarry, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:45.831004542 +08:00:00\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axstarry, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:46.123709956 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:54:41.003162905 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling hashbrown v0.15.4\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axstd",
      "count": 10,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:35.030890515 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:28.273143714 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:11:14.486085821 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:11:21|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:54:59.992443529 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axstd, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:49.167480554 +08:00:00\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axstd, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:49.580676207 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:55:06.319759573 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axalloc",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:59:52.549856057 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:03:28.473778394 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking aarch64-cpu v9.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n05:03:34|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:46:12.631892874 +08:00:00\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling proc-macro2 v1.0.95\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling toml_write v0.1.2\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.10.0\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axalloc, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:12.368737535 +08:00:00\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `log` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axalloc, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:12.708667934 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `log` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:27:08.378997925 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal  ---\nlog     0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:46:16.843719124 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling proc-macro2 v1.0.95\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.7.11\n   Compiling toml_write v0.1.2\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.10.0\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.1\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axlog",
      "count": 9,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:12.498048634 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:07:42.747981863 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking tock-registers v0.8.1\n   Compiling unicode-ident v1.0.14\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:07:49|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:51:04.557499515 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n    Checking tock-registers v0.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axlog, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:32.607695454 +08:00:00\n    Checking tock-registers v0.8.1\n    Checking axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `axconfig` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `numeric-enum-macro` (lib) due to 1 previous error\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axlog, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:32.867154864 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking tock-registers v0.8.1\n    Checking axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `axconfig` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `numeric-enum-macro` (lib) due to 1 previous error\nerror: could not compile `memory_addr` (lib) due to 1 previous error\nerror: could not compile `tock-registers` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:41:14.344815339 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\ncfg-if  1.0.0    1.0.1   1.0.1   Normal  ---\nchrono  0.4.38   0.4.41  0.4.41  Normal  ---\nlog     0.4.21   0.4.27  0.4.27  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:51:08.118615836 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling toml_datetime v0.6.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n    Checking tock-registers v0.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "arceos-bwbench",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:05.259213686 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:59:22.813774858 +08:00:00\n   Compiling log v0.4.21\n   Compiling tock-registers v0.8.1\n   Compiling cfg-if v1.0.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n   Compiling aarch64-cpu v9.4.0\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v2.6.0\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling spin v0.9.8\n   Compiling svgbobdoc v0.3.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling bit_field v0.10.2\n   Compiling const-default v1.0.0\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling fdt v0.1.5\n   Compiling rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axhal)\n   Compiling arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling either v1.13.0\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n   Compiling driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling heapless v0.8.0\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling hash32 v0.3.1\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/arch_boot)\n   Compiling zerocopy v0.7.35\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:01:08.484510438 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n    Checking tock-registers v0.8.1\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking const-default v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n    Checking bit_field v0.10.2\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:01:16|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arceos-bwbench, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:07:50.244897011 +08:00:00\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arceos-bwbench, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/net/bwbench\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:07:50.704501409 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "monolithic_userboot",
      "count": 8,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_1/Starry-OS/Starry-Old/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     xmas-elf\nVersion:   0.9.1\nTitle:     Potential out-of-bounds read with a malformed ELF file and the HashTable API.\nDate:      2025-03-26\nID:        RUSTSEC-2025-0018\nURL:       https://rustsec.org/advisories/RUSTSEC-2025-0018\nSolution:  Upgrade to >=0.10\nDependency tree:\nxmas-elf 0.9.1\n├── elf_parser 0.1.0\n│   ├── axprocess 0.1.0\n│   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axtrap 0.1.0\n│   │   │   │   └── arch_boot 0.1.0\n│   │   │   │       ├── axstd 0.1.0\n│   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │   │       ├── axstarry 0.1.0\n│   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │   │       └── axlibc 0.1.0\n│   │   │   ├── axstarry 0.1.0\n│   │   │   └── arch_boot 0.1.0\n│   │   ├── axruntime 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   │   ├── axstd 0.1.0\n│   │   │   │   ├── axstarry 0.1.0\n│   │   │   │   ├── axlibc 0.1.0\n│   │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   │   │   └── axlibc 0.1.0\n│   │   │   │   └── arceos_api 0.1.0\n│   │   │   │       └── axstd 0.1.0\n│   │   │   ├── arch_boot 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   └── arceos_api 0.1.0\n│   │   ├── axnet 0.1.0\n│   │   │   ├── linux_syscall_api 0.1.0\n│   │   │   ├── axruntime 0.1.0\n│   │   │   ├── axfeat 0.1.0\n│   │   │   ├── arceos_posix_api 0.1.0\n│   │   │   ├── arceos_api 0.1.0\n│   │   │   └── arceos-bwbench 0.1.0\n│   │   └── axfeat 0.1.0\n│   └── axmem 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axruntime 0.1.0\n│       └── axprocess 0.1.0\n├── axprocess 0.1.0\n└── axmem 0.1.0\n\nCrate:     atomic-polyfill\nVersion:   1.0.3\nWarning:   unmaintained\nTitle:     atomic-polyfill is unmaintained\nDate:      2023-07-11\nID:        RUSTSEC-2023-0089\nURL:       https://rustsec.org/advisories/RUSTSEC-2023-0089\nDependency tree:\natomic-polyfill 1.0.3\n└── heapless 0.7.17\n    └── smoltcp 0.10.0\n        └── ixgbe-driver 0.1.0\n            └── driver_net 0.1.0\n                ├── driver_virtio 0.1.0\n                │   └── axdriver 0.1.0\n                │       ├── axruntime 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axtrap 0.1.0\n                │       │   │   │   └── arch_boot 0.1.0\n                │       │   │   │       ├── axstd 0.1.0\n                │       │   │   │       │   ├── arceos-yield 0.1.0\n                │       │   │   │       │   ├── arceos-udpserver 0.1.0\n                │       │   │   │       │   ├── arceos-tls 0.1.0\n                │       │   │   │       │   ├── arceos-sleep 0.1.0\n                │       │   │   │       │   ├── arceos-shell 0.1.0\n                │       │   │   │       │   ├── arceos-priority 0.1.0\n                │       │   │   │       │   ├── arceos-parallel 0.1.0\n                │       │   │   │       │   ├── arceos-memtest 0.1.0\n                │       │   │   │       │   ├── arceos-httpserver 0.1.0\n                │       │   │   │       │   ├── arceos-httpclient 0.1.0\n                │       │   │   │       │   ├── arceos-helloworld 0.1.0\n                │       │   │   │       │   ├── arceos-exception 0.1.0\n                │       │   │   │       │   ├── arceos-echoserver 0.1.0\n                │       │   │   │       │   ├── arceos-display 0.1.0\n                │       │   │   │       │   └── arceos-bwbench 0.1.0\n                │       │   │   │       ├── axstarry 0.1.0\n                │       │   │   │       │   └── monolithic_userboot 0.1.0\n                │       │   │   │       └── axlibc 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   └── arch_boot 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axstd 0.1.0\n                │       │   │   ├── axstarry 0.1.0\n                │       │   │   ├── axlibc 0.1.0\n                │       │   │   ├── arceos_posix_api 0.1.0\n                │       │   │   │   └── axlibc 0.1.0\n                │       │   │   └── arceos_api 0.1.0\n                │       │   │       └── axstd 0.1.0\n                │       │   ├── arch_boot 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axnet 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   ├── arceos_api 0.1.0\n                │       │   └── arceos-bwbench 0.1.0\n                │       ├── axfs 0.1.0\n                │       │   ├── linux_syscall_api 0.1.0\n                │       │   ├── axstarry 0.1.0\n                │       │   ├── axruntime 0.1.0\n                │       │   ├── axprocess 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   ├── axnet 0.1.0\n                │       │   │   └── axfeat 0.1.0\n                │       │   ├── axmem 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   ├── axruntime 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfutex 0.1.0\n                │       │   │   ├── linux_syscall_api 0.1.0\n                │       │   │   └── axprocess 0.1.0\n                │       │   ├── axfeat 0.1.0\n                │       │   ├── arceos_posix_api 0.1.0\n                │       │   └── arceos_api 0.1.0\n                │       ├── axfeat 0.1.0\n                │       └── axdisplay 0.1.0\n                │           ├── axruntime 0.1.0\n                │           ├── axfeat 0.1.0\n                │           └── arceos_api 0.1.0\n                ├── axnet 0.1.0\n                └── axdriver 0.1.0\n\nCrate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   │   └── arch_boot 0.1.0\n        │   │       ├── axstd 0.1.0\n        │   │       │   ├── arceos-yield 0.1.0\n        │   │       │   ├── arceos-udpserver 0.1.0\n        │   │       │   ├── arceos-tls 0.1.0\n        │   │       │   ├── arceos-sleep 0.1.0\n        │   │       │   ├── arceos-shell 0.1.0\n        │   │       │   ├── arceos-priority 0.1.0\n        │   │       │   ├── arceos-parallel 0.1.0\n        │   │       │   ├── arceos-memtest 0.1.0\n        │   │       │   ├── arceos-httpserver 0.1.0\n        │   │       │   ├── arceos-httpclient 0.1.0\n        │   │       │   ├── arceos-helloworld 0.1.0\n        │   │       │   ├── arceos-exception 0.1.0\n        │   │       │   ├── arceos-echoserver 0.1.0\n        │   │       │   ├── arceos-display 0.1.0\n        │   │       │   └── arceos-bwbench 0.1.0\n        │   │       ├── axstarry 0.1.0\n        │   │       │   └── monolithic_userboot 0.1.0\n        │   │       └── axlibc 0.1.0\n        │   ├── axstarry 0.1.0\n        │   └── arch_boot 0.1.0\n        ├── axtrap 0.1.0\n        ├── axtask 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtrap 0.1.0\n        │   ├── axtask 0.1.0\n        │   ├── axsync 0.1.0\n        │   │   ├── linux_syscall_api 0.1.0\n        │   │   ├── axsync 0.1.0\n        │   │   ├── axprocess 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   │   ├── axstd 0.1.0\n        │   │   │   │   │   ├── axstarry 0.1.0\n        │   │   │   │   │   ├── axlibc 0.1.0\n        │   │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   │   │   └── axlibc 0.1.0\n        │   │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   │   │       └── axstd 0.1.0\n        │   │   │   │   ├── arch_boot 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   └── arceos_api 0.1.0\n        │   │   │   ├── axnet 0.1.0\n        │   │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   │   ├── axruntime 0.1.0\n        │   │   │   │   ├── axfeat 0.1.0\n        │   │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   │   ├── arceos_api 0.1.0\n        │   │   │   │   └── arceos-bwbench 0.1.0\n        │   │   │   └── axfeat 0.1.0\n        │   │   ├── axnet 0.1.0\n        │   │   ├── axmem 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfutex 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   └── axprocess 0.1.0\n        │   │   ├── axfs 0.1.0\n        │   │   │   ├── linux_syscall_api 0.1.0\n        │   │   │   ├── axstarry 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axprocess 0.1.0\n        │   │   │   ├── axmem 0.1.0\n        │   │   │   ├── axfutex 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   ├── arceos_posix_api 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   ├── axfeat 0.1.0\n        │   │   ├── axdisplay 0.1.0\n        │   │   │   ├── axruntime 0.1.0\n        │   │   │   ├── axfeat 0.1.0\n        │   │   │   └── arceos_api 0.1.0\n        │   │   └── arceos_posix_api 0.1.0\n        │   ├── axstarry 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axprocess 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfutex 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   ├── arceos_posix_api 0.1.0\n        │   └── arceos_api 0.1.0\n        ├── axsync 0.1.0\n        ├── axsignal 0.1.0\n        │   ├── linux_syscall_api 0.1.0\n        │   ├── axtask 0.1.0\n        │   └── axprocess 0.1.0\n        ├── axruntime 0.1.0\n        ├── axprocess 0.1.0\n        ├── axnet 0.1.0\n        ├── axmem 0.1.0\n        ├── axfutex 0.1.0\n        ├── axfeat 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── axruntime 0.1.0\n        │   ├── axnet 0.1.0\n        │   ├── axfs 0.1.0\n        │   ├── axfeat 0.1.0\n        │   └── axdisplay 0.1.0\n        ├── arch_boot 0.1.0\n        ├── arceos_posix_api 0.1.0\n        ├── arceos_api 0.1.0\n        └── arceos-tls 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 243\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": true,\n    \"count\": 1,\n    \"list\": [\n      {\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2025-0018\",\n          \"package\": \"xmas-elf\",\n          \"title\": \"Potential out-of-bounds read with a malformed ELF file and the HashTable API.\",\n          \"description\": \"Affected versions of this crate only validated the `index` argument of\\n`HashTable::get_bucket` and `HashTable::get_chain` against the input-controlled\\n`bucket_count` and `chain_count` fields, but not against the size of the ELF\\nsection. As a result, a malformed ELF file could trigger out-of-bounds reads in\\na consumer of the HashTable API by setting these fields to inappropriately large\\nvalues that would fall outside the relevant hash table section, and by\\nintroducing correspondingly out-of-bounds hash table indexes elsewhere in the ELF\\nfile.\",\n          \"date\": \"2025-03-26\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [\n            \"memory-exposure\"\n          ],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": null,\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/nrc/xmas-elf/issues/86\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"versions\": {\n          \"patched\": [\n            \">=0.10\"\n          ],\n          \"unaffected\": []\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [],\n          \"functions\": {\n            \"xmas_elf::hash::HashTable::get_bucket\": [\n              \"<0.10\"\n            ],\n            \"xmas_elf::hash::HashTable::get_chain\": [\n              \"<0.10\"\n            ]\n          }\n        },\n        \"package\": {\n          \"name\": \"xmas-elf\",\n          \"version\": \"0.9.1\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"42c49817e78342f7f30a181573d82ff55b88a35f86ccaf07fc64b3008f56d1c6\",\n          \"dependencies\": [\n            {\n              \"name\": \"zero\",\n              \"version\": \"0.1.3\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        }\n      }\n    ]\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atomic-polyfill\",\n          \"version\": \"1.0.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4\",\n          \"dependencies\": [\n            {\n              \"name\": \"critical-section\",\n              \"version\": \"1.2.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2023-0089\",\n          \"package\": \"atomic-polyfill\",\n          \"title\": \"atomic-polyfill is unmaintained\",\n          \"description\": \"The author has archived the GitHub repository and mentions deprecation in\\nproject's\\n[README](https://github.com/embassy-rs/atomic-polyfill/blob/48e55c166684f37af0b00fbee5a0809b1a2bae8e/README.md).\\n\\n## Possible alternatives\\n\\n * [portable-atomic](https://crates.io/crates/portable-atomic)\",\n          \"date\": \"2023-07-11\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/embassy-rs/atomic-polyfill/commit/48e55c166684f37af0b00fbee5a0809b1a2bae8e\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      },\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) audit",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Audit\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo audit\n// timestamp=2025-06-28 12:58:41.735279244 +08:00:00\n    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 787 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (243 crate dependencies)\nerror: 1 vulnerability found!\nwarning: 2 allowed warnings found\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:00:45.709426118 +08:00:00\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-00ed8d16ef39a8b8/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling zero v0.1.3\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 13:13:43.621887874 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n05:13:51|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=monolithic_userboot, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:09:04.030477905 +08:00:00\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T04:59:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T04:59:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=monolithic_userboot, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/apps/monolithic_userboot\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:09:04.318888268 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `log` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n"
            ]
          }
        }
      ]
    },
    {
      "user": "Starry-OS",
      "repo": "Starry-Old",
      "pkg": "axconfig",
      "count": 5,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 12:46:29.359586419 +08:00:00\n    Building axconfig v0.1.0 (current)\nerror: running cargo-doc on crate 'axconfig' failed with output:\n-----\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling indexmap v2.10.0\n   Compiling toml_edit v0.22.27\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n Documenting axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `axconfig`\n\n-----\n\nerror: failed to build rustdoc for crate axconfig v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axconfig v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axconfig, checker=Udeps\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-06-28 14:08:13.826801756 +08:00:00\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `axconfig` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axconfig, checker=Udeps\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 14:08:14.237237758 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `axconfig` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-06-28 13:28:44.654166201 +08:00:00\n\nName       Project  Compat   Latest   Kind   Platform\n----       -------  ------   ------   ----   --------\nserde      1.0.215  1.0.219  1.0.219  Build  ---\ntoml_edit  0.22.22  0.22.27  0.22.27  Build  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-06-28 12:46:33.044105961 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\nerror: running cargo-doc on crate 'axconfig' failed with output:\n-----\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling toml_datetime v0.6.11\n   Compiling toml_write v0.1.2\n   Compiling winnow v0.7.11\n   Compiling indexmap v2.10.0\n   Compiling toml_edit v0.22.27\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\n Documenting axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `axconfig`\n\n-----\n\nerror: failed to build rustdoc for crate axconfig v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-Old/modules/axconfig &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axconfig v0.1.0\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}