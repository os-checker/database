{"repo":{"user":"Starry-OS","repo":"Starry-Old"},"data":[{"user":"Starry-OS","repo":"Starry-Old","pkg":"deptool","count":47,"raw_reports":[{"file":"src/cmd_parser.rs","count":17,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:22\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                      ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:50\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                                                  ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/lib.rs","count":17,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/lib.rs:37:39\n   |\n37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);\n   |                                       ^^^^ help: change this to: `cfg`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/lib.rs:55:21\n   |\n55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"]}},{"file":"src/d2_generator.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/d2_generator.rs:8:34\n  |\n8 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:18:29\n   |\n18 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:34:32\n   |\n34 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/mermaid_generator.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/mermaid_generator.rs:6:34\n  |\n6 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:16:29\n   |\n16 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:32:32\n   |\n32 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/cmd_builder.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=deptool, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 1:39:33.514629577 +08:00:00\n    Building deptool v0.1.0 (current)\n       Built [   1.435s] (current)\n     Parsing deptool v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/target/semver-checks/local-deptool-0_1_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/deptool.json\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=deptool, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-01-27 1:39:35.296551527 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building deptool v0.1.0 (current)\n       Built [   1.435s] (current)\n     Parsing deptool v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/target/semver-checks/local-deptool-0_1_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/deptool.json\n"]}},{"file":"src/main.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/Starry-OS/Starry-Old/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axnet","count":40,"raw_reports":[{"file":"modules/axnet/src/smoltcp_impl/addr.rs","count":8,"kinds":{"Clippy(Warn)":["warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"]}},{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:46.571625763 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n   Compiling driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:46.860356691 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:46.387092859 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:46.069624169 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axnet, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:49:40.653057073 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling lock_api v0.4.12\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling heapless v0.8.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking hash32 v0.3.1\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:49:48|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axnet, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:49:48.24573247 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking aarch64-cpu v9.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling heapless v0.8.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:49:55|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axnet, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:49:55.656600137 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling lock_api v0.4.12\n   Compiling syn v2.0.90\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n    Checking byteorder v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling heapless v0.8.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking hash32 v0.3.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:50:03|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axnet, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:50:03.155510988 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:50:11|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:35:40.229902647 +08:00:00\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.15\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling svgbobdoc v0.3.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n   Compiling enumn v0.1.14\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n","// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:35:58.594254442 +08:00:00\n    Building axnet v0.1.0 (current)\n       Built [   4.625s] (current)\n     Parsing axnet v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axnet-0_1_0-a03330a65e166ae5/target/riscv64gc-unknown-none-elf/doc/axnet.json\n","// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:35:51.977629316 +08:00:00\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\n    Checking virtio-drivers v0.7.5\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling ahash v0.7.8\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking nb v0.1.3\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n","// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:36:06.384926016 +08:00:00\n    Building axnet v0.1.0 (current)\n       Built [   6.138s] (current)\n     Parsing axnet v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axnet-0_1_0-a03330a65e166ae5/target/x86_64-unknown-none/doc/axnet.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:11:04.152644611 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:10:52.15292615 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:10:40.829176975 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:10:29.378607818 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:36:06.381879077 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\n       Built [   4.625s] (current)\n     Parsing axnet v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axnet-0_1_0-a03330a65e166ae5/target/riscv64gc-unknown-none-elf/doc/axnet.json\n","pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:35:51.971163521 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.15\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling svgbobdoc v0.3.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n   Compiling enumn v0.1.14\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n","pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:35:58.588481115 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\n    Checking virtio-drivers v0.7.5\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling ahash v0.7.8\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking nb v0.1.3\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n","pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:36:15.40204177 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\n       Built [   6.138s] (current)\n     Parsing axnet v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axnet-0_1_0-a03330a65e166ae5/target/x86_64-unknown-none/doc/axnet.json\n"]}},{"file":"modules/axnet/src/smoltcp_impl/listen_table.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n","warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n","warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n","warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"]}},{"file":"modules/axnet/src/smoltcp_impl/tcp.rs","count":4,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n"]}},{"file":"src/smoltcp_impl/mod.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n","file: /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"linux_syscall_api","count":37,"raw_reports":[{"file":"api/linux_syscall_api/src/syscall_fs/imp/io.rs","count":9,"kinds":{"Clippy(Warn)":["warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:327:5\n    |\n327 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"]}},{"file":"api/linux_syscall_api/src/syscall_fs/imp/ctl.rs","count":8,"kinds":{"Clippy(Warn)":["warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"]}},{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:42:10.347623927 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling zero v0.1.3\n   Compiling once_cell v1.20.2\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling xmas-elf v0.9.1\n   Compiling heapless v0.8.0\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling ahash v0.7.8\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=linux_syscall_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:42:10.963441659 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=linux_syscall_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:42:09.806010409 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling riscv v0.10.1\n   Compiling ahash v0.7.8\n   Compiling critical-section v1.2.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=linux_syscall_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:42:09.463354309 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling zero v0.1.3\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling once_cell v1.20.2\n   Compiling void v1.0.2\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:54:13.075762842 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking byteorder v1.5.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:54:20|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=linux_syscall_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:54:20.9678404 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n    Checking byteorder v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:54:28|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=linux_syscall_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:54:28.83759057 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling svgbobdoc v0.3.0\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:54:36|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=linux_syscall_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:54:36.645638734 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n   Compiling rustversion v1.0.18\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling base64 v0.13.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:54:44|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:39:35.300333967 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n    Checking log v0.4.25\n   Compiling unicode-ident v1.0.15\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n    Checking scopeguard v1.2.0\n    Checking aarch64-cpu v10.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking aarch64-cpu v9.4.0\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking byteorder v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking rlsf v0.2.1\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling zerocopy-derive v0.7.35\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling enumn v0.1.14\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking rand v0.8.5\n    Checking zerocopy v0.7.35\n   Compiling ahash v0.7.8\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:39:53.666099598 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spin v0.9.8\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking critical-section v1.2.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking rand_core v0.6.4\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking rand v0.8.5\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling ahash v0.7.8\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking virtio-drivers v0.7.5\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking void v1.0.2\n    Checking once_cell v1.20.2\n   Compiling riscv v0.10.1\n    Checking zero v0.1.3\n    Checking xmas-elf v0.9.1\n    Checking embedded-hal v0.2.7\n    Checking hashbrown v0.11.2\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking stable_deref_trait v1.2.0\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking bitflags v1.3.2\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking managed v0.8.0\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n   Compiling num_enum_derive v0.5.11\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking axmem v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem)\n    Checking axfutex v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex)\n    Checking axprocess v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess)\n    Checking num_enum v0.5.11\n    Checking axruntime v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axnet v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet)\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: `axnet` (lib) generated 1 warning\n    Checking axfeat v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat)\n Documenting linux_syscall_api v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `linux_syscall_api` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `format_args` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:115:5\n    |\n115 |     axlog::ax_println!(\"Running testcase: {}\", testcase);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `axlog::ax_println` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n    |\n2   + use core::format_args;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:14:1\n   |\n14 | / bitflags! {\n15 | |     /// 指定 sys_wait4 的选项\n16 | |     pub struct WaitFlags: u32 {\n17 | |         /// 不挂起当前进程，直接返回\n...  |\n28 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:44:3\n   |\n44 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:75:3\n   |\n75 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:85:3\n   |\n85 | #[derive(Clone, Copy, Debug, Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:134:7\n    |\n134 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:133:1\n    |\n133 | / bitflags! {\n134 | |     #[derive(Debug)]\n135 | |     /// 指定 mmap 的选项\n136 | |     pub struct MMAPPROT: u32 {\n...   |\n144 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:163:7\n    |\n163 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:162:1\n    |\n162 | / bitflags! {\n163 | |     #[derive(Debug)]\n164 | |     /// 指定 mmap 的选项\n165 | |     pub struct MMAPFlags: u32 {\n...   |\n181 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:184:7\n    |\n184 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:183:1\n    |\n183 | / bitflags! {\n184 | |     #[derive(Debug)]\n185 | |     /// 指定 mremap 的选项\n186 | |     pub struct MREMAPFlags: u32 {\n...   |\n195 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:284:3\n    |\n284 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:312:7\n    |\n312 |     #[derive(PartialEq, Eq)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:310:1\n    |\n310 | / bitflags::bitflags! {\n311 | |     /// 对 futex 的操作\n312 | |     #[derive(PartialEq, Eq)]\n313 | |     pub struct FutexFlags: i32 {\n...   |\n327 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:332:7\n    |\n332 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:352:3\n    |\n352 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:409:3\n    |\n409 | #[derive(Clone, Copy)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:419:7\n    |\n419 |     #[derive(PartialEq,Eq,Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:431:3\n    |\n431 | #[derive(Clone, Copy, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:488:1\n    |\n488 | / bitflags! {\n489 | |     /// sys_renameat2 用到的选项\n490 | |     pub struct RenameFlags: u32 {\n491 | |         /// Nothing\n...   |\n500 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:505:3\n    |\n505 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:555:3\n    |\n555 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:611:3\n    |\n611 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:626:1\n    |\n626 | / bitflags! {\n627 | |     /// 指定 st_mode 的选项\n628 | |     pub struct StMode: u32 {\n629 | |         /// regular file\n...   |\n662 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:677:7\n    |\n677 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:688:3\n    |\n688 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall.rs:53:9\n   |\n53 |         panic!(\"unknown syscall id: {}\", syscall_id);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::panic;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/file.rs:106:13\n    |\n106 |             assert!(inode_map.contains_key(&self.path));\n    |             ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:30:9\n   |\n30 |         assert!(\n   |         ^^^^^^\n   |\nhelp: consider importing this macro\n   |\n2  + use core::assert;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:48:3\n   |\n48 | #[derive(Copy, Clone, PartialEq)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:128:9\n    |\n128 |         assert!(self.readable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:174:9\n    |\n174 |         assert!(self.writable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:19:7\n   |\n19 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:17:1\n   |\n17 | / bitflags! {\n18 | |     /// 定义epoll事件的类别\n19 | |     #[derive(Clone, Copy,Debug)]\n20 | |     pub struct EpollEventType: u32{\n...  |\n37 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:40:3\n   |\n40 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:51:7\n   |\n51 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:10:7\n   |\n10 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:8:1\n   |\n8  | / bitflags! {\n9  | |     // https://sites.uclouvain.be/SystInfo/usr/include/sys/eventfd.h.html\n10 | |     #[derive(Clone, Copy, Debug)]\n11 | |     pub struct EventFdFlag: u32 {\n...  |\n16 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:11:7\n   |\n11 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:9:1\n   |\n9  | / bitflags! {\n10 | |     /// 在文件上等待或者发生过的事件\n11 | |     #[derive(Clone, Copy,Debug)]\n12 | |     pub struct PollEvents: u16 {\n...  |\n24 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:26:3\n   |\n26 | #[derive(Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:35:3\n   |\n35 | #[derive(Clone, Copy, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/stat.rs:73:9\n   |\n73 |         panic!(\"Wrong path at syscall_fstatat: {}(dir_fd={})\", path, dir_fd);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n4  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/fs_syscall_id.rs:14:3\n   |\n14 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:213:9\n    |\n213 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:242:7\n    |\n242 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:241:1\n    |\n241 | / bitflags! {\n242 | |     #[derive(Debug)]\n243 | |     struct ShmFlags: i32 {\n244 | |         const IPC_CREAT = 0o1000;\n...   |\n250 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:314:7\n    |\n314 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:313:1\n    |\n313 | / bitflags! {\n314 | |     #[derive(Debug)]\n315 | |     struct ShmAtFlags: i32 {\n316 | |         const SHM_RND = 0o20000;\n...   |\n321 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:365:13\n    |\n365 |             unimplemented!()\n    |             ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mem_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mod.rs:29:13\n   |\n29 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:295:19\n    |\n295 |         Err(_) => unreachable!(),\n    |                   ^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unreachable;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:501:9\n    |\n501 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:567:9\n    |\n567 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:610:17\n    |\n610 |                 panic!(\"[setsockopt()] option {opt_name} not supported in socket level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:617:17\n    |\n617 |                 panic!(\"[setsockopt()] option {opt_name} not supported in tcp level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:633:3\n    |\n633 | #[derive(TryFromPrimitive)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n3   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:684:9\n    |\n684 |         panic!();\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:29:3\n   |\n29 | #[derive(TryFromPrimitive, Clone, PartialEq, Eq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:39:3\n   |\n39 | #[derive(TryFromPrimitive, PartialEq, Eq, Copy, Clone, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:67:3\n   |\n67 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:77:3\n   |\n77 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:87:3\n   |\n87 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:101:3\n    |\n101 | #[derive(TryFromPrimitive, PartialEq)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:111:3\n    |\n111 | #[derive(TryFromPrimitive, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:137:22\n    |\n137 |                 _ => panic!(\"setsockopt IP_MULTICAST_TTL on a non-udp socket\"),\n    |                      ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:156:21\n    |\n156 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:164:21\n    |\n164 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:175:21\n    |\n175 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:186:21\n    |\n186 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:197:21\n    |\n197 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:226:21\n    |\n226 |                     panic!(\"can't read a timeval from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:238:17\n    |\n238 |                 panic!(\"can't set SO_ERROR\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:252:21\n    |\n252 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:262:21\n    |\n262 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:274:21\n    |\n274 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:286:21\n    |\n286 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:298:21\n    |\n298 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:322:21\n    |\n322 |                     panic!(\"can't write a timeval to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:344:17\n    |\n344 |                 panic!(\"unimplemented!\")\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:354:18\n    |\n354 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:360:21\n    |\n360 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:376:17\n    |\n376 |                 unimplemented!()\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:384:18\n    |\n384 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:392:21\n    |\n392 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:526:17\n    |\n526 |                 unimplemented!();\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/net_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/mod.rs:36:13\n   |\n36 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/task_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/imp/task.rs:328:25\n    |\n328 |                         panic!(\"Shouldn't reach here!\");\n    |                         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/mod.rs:96:13\n   |\n96 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n5  + use core::panic;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:146:6\n    |\n146 | impl From<MMAPPROT> for MappingFlags {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:214:6\n    |\n214 | impl Default for UtsName {\n    |      ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::default::Default;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:394:30\n    |\n394 |     pub fn from(val: i32) -> Option<Self> {\n    |                              ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:101:43\n    |\n101 | pub fn get_stat_in_fs(path: &FilePath) -> Result<Kstat, SyscallError> {\n    |                                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n2   + use core::fmt::Result;\n    |\n2   + use core::result::Result;\n    |\n2   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:60:16\n   |\n60 |     write_end: Option<Weak<Pipe>>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:116:10\n    |\n116 |     ) -> Result<isize, SyscallError> {\n    |          ^^^^^^\n    |\n   ::: /home/runner/.cargo/git/checkouts/axerrno-5ea606781111d899/3e2372c/src/lib.rs:99:1\n    |\n99  | pub type AxResult<T = ()> = Result<T, AxError>;\n    | ------------------------- similarly named type alias `AxResult` defined here\n    |\nhelp: a type alias with a similar name exists\n    |\n116 |     ) -> AxResult<isize, SyscallError> {\n    |          ~~~~~~~~\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:54:6\n   |\n54 | impl Default for ShadowBitset {\n   |      ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::default::Default;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:251:49\n    |\n251 | fn init_fd_set(addr: *mut usize, len: usize) -> Result<PpollFdSet, SyscallError> {\n    |                                                 ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:28:16\n   |\n28 |     path_addr: Option<*const u8>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n12 + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:30:6\n   |\n30 | ) -> Result<FilePath, SyscallError> {\n   |      ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n12 + use core::fmt::Result;\n   |\n12 + use core::result::Result;\n   |\n12 + use alloc::fmt::Result;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:446:25\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n446 |     recv_timeout: Mutex<Option<TimeVal>>,\n    |                         ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n446 |     recv_timeout: Mutex<IpOption<TimeVal>>,\n    |                         ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:449:17\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n449 |     pub buffer: Option<Arc<Pipe>>,\n    |                 ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n449 |     pub buffer: IpOption<Arc<Pipe>>,\n    |                 ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:467:35\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n467 |     fn get_recv_timeout(&self) -> Option<TimeVal> {\n    |                                   ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n467 |     fn get_recv_timeout(&self) -> IpOption<TimeVal> {\n    |                                   ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:491:37\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n491 |     fn set_recv_timeout(&self, val: Option<TimeVal>) {\n    |                                     ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n491 |     fn set_recv_timeout(&self, val: IpOption<TimeVal>) {\n    |                                     ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:659:44\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n659 |     pub fn sendto(&self, buf: &[u8], addr: Option<SocketAddr>) -> AxResult<usize> {\n    |                                            ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n659 |     pub fn sendto(&self, buf: &[u8], addr: IpOption<SocketAddr>) -> AxResult<usize> {\n    |                                            ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:73:33\n   |\n73 | pub fn read_file(path: &str) -> Option<String> {\n   |                                 ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n2  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/lib.rs:34:26\n   |\n34 | pub type SyscallResult = Result<isize, SyscallError>;\n   |                          ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n5  + use core::fmt::Result;\n   |\n5  + use core::result::Result;\n   |\n5  + use alloc::fmt::Result;\n   |\n\nSome errors have detailed explanations: E0405, E0412, E0463.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not document `linux_syscall_api`\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:39:47.541076346 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.9.0\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling ahash v0.7.8\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:40:01.704574762 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling rustversion v1.0.19\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking rlsf v0.2.1\n    Checking x86_64 v0.15.2\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.14.13\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.3.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking rand_core v0.6.4\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking rand v0.8.5\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling ahash v0.7.8\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking virtio-drivers v0.7.5\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking once_cell v1.20.2\n    Checking void v1.0.2\n    Checking zero v0.1.3\n    Checking xmas-elf v0.9.1\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking critical-section v1.2.0\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking hashbrown v0.11.2\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking managed v0.8.0\n    Checking num_enum v0.5.11\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking axmem v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem)\n    Checking axfutex v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex)\n    Checking axprocess v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess)\n    Checking axruntime v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axnet v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet)\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: `axnet` (lib) generated 1 warning\n    Checking axfeat v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat)\n Documenting linux_syscall_api v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `linux_syscall_api` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `todo` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/imp/task.rs:593:28\n    |\n593 |         0x1001 | 0x1004 => todo!(),\n    |                            ^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::todo;\n    |\n\nerror: cannot find macro `format_args` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:115:5\n    |\n115 |     axlog::ax_println!(\"Running testcase: {}\", testcase);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `axlog::ax_println` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n    |\n2   + use core::format_args;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:14:1\n   |\n14 | / bitflags! {\n15 | |     /// 指定 sys_wait4 的选项\n16 | |     pub struct WaitFlags: u32 {\n17 | |         /// 不挂起当前进程，直接返回\n...  |\n28 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:44:3\n   |\n44 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:75:3\n   |\n75 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:85:3\n   |\n85 | #[derive(Clone, Copy, Debug, Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:134:7\n    |\n134 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:133:1\n    |\n133 | / bitflags! {\n134 | |     #[derive(Debug)]\n135 | |     /// 指定 mmap 的选项\n136 | |     pub struct MMAPPROT: u32 {\n...   |\n144 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:163:7\n    |\n163 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:162:1\n    |\n162 | / bitflags! {\n163 | |     #[derive(Debug)]\n164 | |     /// 指定 mmap 的选项\n165 | |     pub struct MMAPFlags: u32 {\n...   |\n181 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:184:7\n    |\n184 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:183:1\n    |\n183 | / bitflags! {\n184 | |     #[derive(Debug)]\n185 | |     /// 指定 mremap 的选项\n186 | |     pub struct MREMAPFlags: u32 {\n...   |\n195 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:284:3\n    |\n284 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:312:7\n    |\n312 |     #[derive(PartialEq, Eq)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:310:1\n    |\n310 | / bitflags::bitflags! {\n311 | |     /// 对 futex 的操作\n312 | |     #[derive(PartialEq, Eq)]\n313 | |     pub struct FutexFlags: i32 {\n...   |\n327 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:332:7\n    |\n332 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:352:3\n    |\n352 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:409:3\n    |\n409 | #[derive(Clone, Copy)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:419:7\n    |\n419 |     #[derive(PartialEq,Eq,Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:431:3\n    |\n431 | #[derive(Clone, Copy, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:488:1\n    |\n488 | / bitflags! {\n489 | |     /// sys_renameat2 用到的选项\n490 | |     pub struct RenameFlags: u32 {\n491 | |         /// Nothing\n...   |\n500 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:505:3\n    |\n505 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:555:3\n    |\n555 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:611:3\n    |\n611 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:626:1\n    |\n626 | / bitflags! {\n627 | |     /// 指定 st_mode 的选项\n628 | |     pub struct StMode: u32 {\n629 | |         /// regular file\n...   |\n662 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:677:7\n    |\n677 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:688:3\n    |\n688 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall.rs:53:9\n   |\n53 |         panic!(\"unknown syscall id: {}\", syscall_id);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::panic;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/file.rs:106:13\n    |\n106 |             assert!(inode_map.contains_key(&self.path));\n    |             ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:30:9\n   |\n30 |         assert!(\n   |         ^^^^^^\n   |\nhelp: consider importing this macro\n   |\n2  + use core::assert;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:48:3\n   |\n48 | #[derive(Copy, Clone, PartialEq)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:128:9\n    |\n128 |         assert!(self.readable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:174:9\n    |\n174 |         assert!(self.writable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:19:7\n   |\n19 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:17:1\n   |\n17 | / bitflags! {\n18 | |     /// 定义epoll事件的类别\n19 | |     #[derive(Clone, Copy,Debug)]\n20 | |     pub struct EpollEventType: u32{\n...  |\n37 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:40:3\n   |\n40 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:51:7\n   |\n51 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:10:7\n   |\n10 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:8:1\n   |\n8  | / bitflags! {\n9  | |     // https://sites.uclouvain.be/SystInfo/usr/include/sys/eventfd.h.html\n10 | |     #[derive(Clone, Copy, Debug)]\n11 | |     pub struct EventFdFlag: u32 {\n...  |\n16 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:11:7\n   |\n11 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:9:1\n   |\n9  | / bitflags! {\n10 | |     /// 在文件上等待或者发生过的事件\n11 | |     #[derive(Clone, Copy,Debug)]\n12 | |     pub struct PollEvents: u16 {\n...  |\n24 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:26:3\n   |\n26 | #[derive(Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:35:3\n   |\n35 | #[derive(Clone, Copy, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/stat.rs:73:9\n   |\n73 |         panic!(\"Wrong path at syscall_fstatat: {}(dir_fd={})\", path, dir_fd);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n4  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/fs_syscall_id.rs:71:7\n   |\n71 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:213:9\n    |\n213 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:242:7\n    |\n242 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:241:1\n    |\n241 | / bitflags! {\n242 | |     #[derive(Debug)]\n243 | |     struct ShmFlags: i32 {\n244 | |         const IPC_CREAT = 0o1000;\n...   |\n250 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:314:7\n    |\n314 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:313:1\n    |\n313 | / bitflags! {\n314 | |     #[derive(Debug)]\n315 | |     struct ShmAtFlags: i32 {\n316 | |         const SHM_RND = 0o20000;\n...   |\n321 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:365:13\n    |\n365 |             unimplemented!()\n    |             ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mem_syscall_id.rs:34:7\n   |\n34 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mod.rs:29:13\n   |\n29 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:295:19\n    |\n295 |         Err(_) => unreachable!(),\n    |                   ^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unreachable;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:501:9\n    |\n501 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:567:9\n    |\n567 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:610:17\n    |\n610 |                 panic!(\"[setsockopt()] option {opt_name} not supported in socket level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:617:17\n    |\n617 |                 panic!(\"[setsockopt()] option {opt_name} not supported in tcp level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:633:3\n    |\n633 | #[derive(TryFromPrimitive)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n3   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:684:9\n    |\n684 |         panic!();\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:29:3\n   |\n29 | #[derive(TryFromPrimitive, Clone, PartialEq, Eq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:39:3\n   |\n39 | #[derive(TryFromPrimitive, PartialEq, Eq, Copy, Clone, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:67:3\n   |\n67 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:77:3\n   |\n77 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:87:3\n   |\n87 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:101:3\n    |\n101 | #[derive(TryFromPrimitive, PartialEq)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:111:3\n    |\n111 | #[derive(TryFromPrimitive, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:137:22\n    |\n137 |                 _ => panic!(\"setsockopt IP_MULTICAST_TTL on a non-udp socket\"),\n    |                      ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:156:21\n    |\n156 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:164:21\n    |\n164 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:175:21\n    |\n175 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:186:21\n    |\n186 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:197:21\n    |\n197 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:226:21\n    |\n226 |                     panic!(\"can't read a timeval from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:238:17\n    |\n238 |                 panic!(\"can't set SO_ERROR\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:252:21\n    |\n252 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:262:21\n    |\n262 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:274:21\n    |\n274 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:286:21\n    |\n286 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:298:21\n    |\n298 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:322:21\n    |\n322 |                     panic!(\"can't write a timeval to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:344:17\n    |\n344 |                 panic!(\"unimplemented!\")\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:354:18\n    |\n354 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:360:21\n    |\n360 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:376:17\n    |\n376 |                 unimplemented!()\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:384:18\n    |\n384 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:392:21\n    |\n392 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:526:17\n    |\n526 |                 unimplemented!();\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/net_syscall_id.rs:40:7\n   |\n40 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/mod.rs:36:13\n   |\n36 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/task_syscall_id.rs:78:7\n   |\n78 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/imp/task.rs:328:25\n    |\n328 |                         panic!(\"Shouldn't reach here!\");\n    |                         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/mod.rs:96:13\n   |\n96 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n5  + use core::panic;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:146:6\n    |\n146 | impl From<MMAPPROT> for MappingFlags {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:214:6\n    |\n214 | impl Default for UtsName {\n    |      ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::default::Default;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:394:30\n    |\n394 |     pub fn from(val: i32) -> Option<Self> {\n    |                              ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:101:43\n    |\n101 | pub fn get_stat_in_fs(path: &FilePath) -> Result<Kstat, SyscallError> {\n    |                                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n2   + use core::fmt::Result;\n    |\n2   + use core::result::Result;\n    |\n2   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:60:16\n   |\n60 |     write_end: Option<Weak<Pipe>>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:116:10\n    |\n116 |     ) -> Result<isize, SyscallError> {\n    |          ^^^^^^\n    |\n   ::: /home/runner/.cargo/git/checkouts/axerrno-5ea606781111d899/3e2372c/src/lib.rs:99:1\n    |\n99  | pub type AxResult<T = ()> = Result<T, AxError>;\n    | ------------------------- similarly named type alias `AxResult` defined here\n    |\nhelp: a type alias with a similar name exists\n    |\n116 |     ) -> AxResult<isize, SyscallError> {\n    |          ~~~~~~~~\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:54:6\n   |\n54 | impl Default for ShadowBitset {\n   |      ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::default::Default;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:251:49\n    |\n251 | fn init_fd_set(addr: *mut usize, len: usize) -> Result<PpollFdSet, SyscallError> {\n    |                                                 ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:28:16\n   |\n28 |     path_addr: Option<*const u8>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n12 + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:30:6\n   |\n30 | ) -> Result<FilePath, SyscallError> {\n   |      ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n12 + use core::fmt::Result;\n   |\n12 + use core::result::Result;\n   |\n12 + use alloc::fmt::Result;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:446:25\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n446 |     recv_timeout: Mutex<Option<TimeVal>>,\n    |                         ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n446 |     recv_timeout: Mutex<IpOption<TimeVal>>,\n    |                         ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:449:17\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n449 |     pub buffer: Option<Arc<Pipe>>,\n    |                 ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n449 |     pub buffer: IpOption<Arc<Pipe>>,\n    |                 ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:467:35\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n467 |     fn get_recv_timeout(&self) -> Option<TimeVal> {\n    |                                   ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n467 |     fn get_recv_timeout(&self) -> IpOption<TimeVal> {\n    |                                   ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:491:37\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n491 |     fn set_recv_timeout(&self, val: Option<TimeVal>) {\n    |                                     ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n491 |     fn set_recv_timeout(&self, val: IpOption<TimeVal>) {\n    |                                     ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:659:44\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n659 |     pub fn sendto(&self, buf: &[u8], addr: Option<SocketAddr>) -> AxResult<usize> {\n    |                                            ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n659 |     pub fn sendto(&self, buf: &[u8], addr: IpOption<SocketAddr>) -> AxResult<usize> {\n    |                                            ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:73:33\n   |\n73 | pub fn read_file(path: &str) -> Option<String> {\n   |                                 ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n2  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/lib.rs:34:26\n   |\n34 | pub type SyscallResult = Result<isize, SyscallError>;\n   |                          ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n5  + use core::fmt::Result;\n   |\n5  + use core::result::Result;\n   |\n5  + use alloc::fmt::Result;\n   |\n\nSome errors have detailed explanations: E0405, E0412, E0463.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not document `linux_syscall_api`\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:18:14.151889609 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\n","pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:18:02.300663395 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\n","pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:17:50.705179333 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\n","pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:17:38.496529533 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:40:01.699605402 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spin v0.9.8\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking critical-section v1.2.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking rand_core v0.6.4\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking rand v0.8.5\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling ahash v0.7.8\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking virtio-drivers v0.7.5\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking void v1.0.2\n    Checking once_cell v1.20.2\n   Compiling riscv v0.10.1\n    Checking zero v0.1.3\n    Checking xmas-elf v0.9.1\n    Checking embedded-hal v0.2.7\n    Checking hashbrown v0.11.2\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking stable_deref_trait v1.2.0\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking bitflags v1.3.2\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking managed v0.8.0\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n   Compiling num_enum_derive v0.5.11\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking axmem v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem)\n    Checking axfutex v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex)\n    Checking axprocess v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess)\n    Checking num_enum v0.5.11\n    Checking axruntime v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axnet v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet)\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: `axnet` (lib) generated 1 warning\n    Checking axfeat v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat)\n Documenting linux_syscall_api v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `linux_syscall_api` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `format_args` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:115:5\n    |\n115 |     axlog::ax_println!(\"Running testcase: {}\", testcase);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `axlog::ax_println` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n    |\n2   + use core::format_args;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:14:1\n   |\n14 | / bitflags! {\n15 | |     /// 指定 sys_wait4 的选项\n16 | |     pub struct WaitFlags: u32 {\n17 | |         /// 不挂起当前进程，直接返回\n...  |\n28 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:44:3\n   |\n44 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:75:3\n   |\n75 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:85:3\n   |\n85 | #[derive(Clone, Copy, Debug, Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:134:7\n    |\n134 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:133:1\n    |\n133 | / bitflags! {\n134 | |     #[derive(Debug)]\n135 | |     /// 指定 mmap 的选项\n136 | |     pub struct MMAPPROT: u32 {\n...   |\n144 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:163:7\n    |\n163 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:162:1\n    |\n162 | / bitflags! {\n163 | |     #[derive(Debug)]\n164 | |     /// 指定 mmap 的选项\n165 | |     pub struct MMAPFlags: u32 {\n...   |\n181 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:184:7\n    |\n184 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:183:1\n    |\n183 | / bitflags! {\n184 | |     #[derive(Debug)]\n185 | |     /// 指定 mremap 的选项\n186 | |     pub struct MREMAPFlags: u32 {\n...   |\n195 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:284:3\n    |\n284 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:312:7\n    |\n312 |     #[derive(PartialEq, Eq)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:310:1\n    |\n310 | / bitflags::bitflags! {\n311 | |     /// 对 futex 的操作\n312 | |     #[derive(PartialEq, Eq)]\n313 | |     pub struct FutexFlags: i32 {\n...   |\n327 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:332:7\n    |\n332 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:352:3\n    |\n352 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:409:3\n    |\n409 | #[derive(Clone, Copy)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:419:7\n    |\n419 |     #[derive(PartialEq,Eq,Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:431:3\n    |\n431 | #[derive(Clone, Copy, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:488:1\n    |\n488 | / bitflags! {\n489 | |     /// sys_renameat2 用到的选项\n490 | |     pub struct RenameFlags: u32 {\n491 | |         /// Nothing\n...   |\n500 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:505:3\n    |\n505 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:555:3\n    |\n555 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:611:3\n    |\n611 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:626:1\n    |\n626 | / bitflags! {\n627 | |     /// 指定 st_mode 的选项\n628 | |     pub struct StMode: u32 {\n629 | |         /// regular file\n...   |\n662 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:677:7\n    |\n677 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:688:3\n    |\n688 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall.rs:53:9\n   |\n53 |         panic!(\"unknown syscall id: {}\", syscall_id);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::panic;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/file.rs:106:13\n    |\n106 |             assert!(inode_map.contains_key(&self.path));\n    |             ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:30:9\n   |\n30 |         assert!(\n   |         ^^^^^^\n   |\nhelp: consider importing this macro\n   |\n2  + use core::assert;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:48:3\n   |\n48 | #[derive(Copy, Clone, PartialEq)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:128:9\n    |\n128 |         assert!(self.readable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:174:9\n    |\n174 |         assert!(self.writable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:19:7\n   |\n19 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:17:1\n   |\n17 | / bitflags! {\n18 | |     /// 定义epoll事件的类别\n19 | |     #[derive(Clone, Copy,Debug)]\n20 | |     pub struct EpollEventType: u32{\n...  |\n37 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:40:3\n   |\n40 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:51:7\n   |\n51 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:10:7\n   |\n10 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:8:1\n   |\n8  | / bitflags! {\n9  | |     // https://sites.uclouvain.be/SystInfo/usr/include/sys/eventfd.h.html\n10 | |     #[derive(Clone, Copy, Debug)]\n11 | |     pub struct EventFdFlag: u32 {\n...  |\n16 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:11:7\n   |\n11 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:9:1\n   |\n9  | / bitflags! {\n10 | |     /// 在文件上等待或者发生过的事件\n11 | |     #[derive(Clone, Copy,Debug)]\n12 | |     pub struct PollEvents: u16 {\n...  |\n24 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:26:3\n   |\n26 | #[derive(Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:35:3\n   |\n35 | #[derive(Clone, Copy, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/stat.rs:73:9\n   |\n73 |         panic!(\"Wrong path at syscall_fstatat: {}(dir_fd={})\", path, dir_fd);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n4  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/fs_syscall_id.rs:14:3\n   |\n14 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:213:9\n    |\n213 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:242:7\n    |\n242 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:241:1\n    |\n241 | / bitflags! {\n242 | |     #[derive(Debug)]\n243 | |     struct ShmFlags: i32 {\n244 | |         const IPC_CREAT = 0o1000;\n...   |\n250 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:314:7\n    |\n314 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:313:1\n    |\n313 | / bitflags! {\n314 | |     #[derive(Debug)]\n315 | |     struct ShmAtFlags: i32 {\n316 | |         const SHM_RND = 0o20000;\n...   |\n321 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:365:13\n    |\n365 |             unimplemented!()\n    |             ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mem_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mod.rs:29:13\n   |\n29 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:295:19\n    |\n295 |         Err(_) => unreachable!(),\n    |                   ^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unreachable;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:501:9\n    |\n501 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:567:9\n    |\n567 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:610:17\n    |\n610 |                 panic!(\"[setsockopt()] option {opt_name} not supported in socket level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:617:17\n    |\n617 |                 panic!(\"[setsockopt()] option {opt_name} not supported in tcp level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:633:3\n    |\n633 | #[derive(TryFromPrimitive)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n3   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:684:9\n    |\n684 |         panic!();\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:29:3\n   |\n29 | #[derive(TryFromPrimitive, Clone, PartialEq, Eq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:39:3\n   |\n39 | #[derive(TryFromPrimitive, PartialEq, Eq, Copy, Clone, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:67:3\n   |\n67 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:77:3\n   |\n77 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:87:3\n   |\n87 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:101:3\n    |\n101 | #[derive(TryFromPrimitive, PartialEq)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:111:3\n    |\n111 | #[derive(TryFromPrimitive, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:137:22\n    |\n137 |                 _ => panic!(\"setsockopt IP_MULTICAST_TTL on a non-udp socket\"),\n    |                      ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:156:21\n    |\n156 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:164:21\n    |\n164 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:175:21\n    |\n175 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:186:21\n    |\n186 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:197:21\n    |\n197 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:226:21\n    |\n226 |                     panic!(\"can't read a timeval from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:238:17\n    |\n238 |                 panic!(\"can't set SO_ERROR\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:252:21\n    |\n252 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:262:21\n    |\n262 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:274:21\n    |\n274 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:286:21\n    |\n286 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:298:21\n    |\n298 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:322:21\n    |\n322 |                     panic!(\"can't write a timeval to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:344:17\n    |\n344 |                 panic!(\"unimplemented!\")\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:354:18\n    |\n354 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:360:21\n    |\n360 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:376:17\n    |\n376 |                 unimplemented!()\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:384:18\n    |\n384 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:392:21\n    |\n392 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:526:17\n    |\n526 |                 unimplemented!();\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/net_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/mod.rs:36:13\n   |\n36 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/task_syscall_id.rs:13:3\n   |\n13 | #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/imp/task.rs:328:25\n    |\n328 |                         panic!(\"Shouldn't reach here!\");\n    |                         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/mod.rs:96:13\n   |\n96 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n5  + use core::panic;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:146:6\n    |\n146 | impl From<MMAPPROT> for MappingFlags {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:214:6\n    |\n214 | impl Default for UtsName {\n    |      ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::default::Default;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:394:30\n    |\n394 |     pub fn from(val: i32) -> Option<Self> {\n    |                              ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:101:43\n    |\n101 | pub fn get_stat_in_fs(path: &FilePath) -> Result<Kstat, SyscallError> {\n    |                                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n2   + use core::fmt::Result;\n    |\n2   + use core::result::Result;\n    |\n2   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:60:16\n   |\n60 |     write_end: Option<Weak<Pipe>>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:116:10\n    |\n116 |     ) -> Result<isize, SyscallError> {\n    |          ^^^^^^\n    |\n   ::: /home/runner/.cargo/git/checkouts/axerrno-5ea606781111d899/3e2372c/src/lib.rs:99:1\n    |\n99  | pub type AxResult<T = ()> = Result<T, AxError>;\n    | ------------------------- similarly named type alias `AxResult` defined here\n    |\nhelp: a type alias with a similar name exists\n    |\n116 |     ) -> AxResult<isize, SyscallError> {\n    |          ~~~~~~~~\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:54:6\n   |\n54 | impl Default for ShadowBitset {\n   |      ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::default::Default;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:251:49\n    |\n251 | fn init_fd_set(addr: *mut usize, len: usize) -> Result<PpollFdSet, SyscallError> {\n    |                                                 ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:28:16\n   |\n28 |     path_addr: Option<*const u8>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n12 + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:30:6\n   |\n30 | ) -> Result<FilePath, SyscallError> {\n   |      ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n12 + use core::fmt::Result;\n   |\n12 + use core::result::Result;\n   |\n12 + use alloc::fmt::Result;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:446:25\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n446 |     recv_timeout: Mutex<Option<TimeVal>>,\n    |                         ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n446 |     recv_timeout: Mutex<IpOption<TimeVal>>,\n    |                         ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:449:17\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n449 |     pub buffer: Option<Arc<Pipe>>,\n    |                 ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n449 |     pub buffer: IpOption<Arc<Pipe>>,\n    |                 ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:467:35\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n467 |     fn get_recv_timeout(&self) -> Option<TimeVal> {\n    |                                   ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n467 |     fn get_recv_timeout(&self) -> IpOption<TimeVal> {\n    |                                   ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:491:37\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n491 |     fn set_recv_timeout(&self, val: Option<TimeVal>) {\n    |                                     ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n491 |     fn set_recv_timeout(&self, val: IpOption<TimeVal>) {\n    |                                     ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:659:44\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n659 |     pub fn sendto(&self, buf: &[u8], addr: Option<SocketAddr>) -> AxResult<usize> {\n    |                                            ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n659 |     pub fn sendto(&self, buf: &[u8], addr: IpOption<SocketAddr>) -> AxResult<usize> {\n    |                                            ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:73:33\n   |\n73 | pub fn read_file(path: &str) -> Option<String> {\n   |                                 ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n2  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/lib.rs:34:26\n   |\n34 | pub type SyscallResult = Result<isize, SyscallError>;\n   |                          ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n5  + use core::fmt::Result;\n   |\n5  + use core::result::Result;\n   |\n5  + use alloc::fmt::Result;\n   |\n\nSome errors have detailed explanations: E0405, E0412, E0463.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not document `linux_syscall_api`\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:39:47.535095341 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n    Checking log v0.4.25\n   Compiling unicode-ident v1.0.15\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n    Checking scopeguard v1.2.0\n    Checking aarch64-cpu v10.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking aarch64-cpu v9.4.0\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking byteorder v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking rlsf v0.2.1\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling zerocopy-derive v0.7.35\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling enumn v0.1.14\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking rand v0.8.5\n    Checking zerocopy v0.7.35\n   Compiling ahash v0.7.8\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:39:53.659444892 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.9.0\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling ahash v0.7.8\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:40:11.262795234 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling rustversion v1.0.19\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking rlsf v0.2.1\n    Checking x86_64 v0.15.2\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.14.13\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking x2apic v0.4.3\n    Checking raw-cpuid v11.3.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking rand_core v0.6.4\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking rand v0.8.5\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling ahash v0.7.8\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking virtio-drivers v0.7.5\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking once_cell v1.20.2\n    Checking void v1.0.2\n    Checking zero v0.1.3\n    Checking xmas-elf v0.9.1\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking critical-section v1.2.0\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking hashbrown v0.11.2\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking managed v0.8.0\n    Checking num_enum v0.5.11\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking axmem v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem)\n    Checking axfutex v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex)\n    Checking axprocess v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess)\n    Checking axruntime v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axnet v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet)\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: `axnet` (lib) generated 1 warning\n    Checking axfeat v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat)\n Documenting linux_syscall_api v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `linux_syscall_api` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find macro `todo` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/imp/task.rs:593:28\n    |\n593 |         0x1001 | 0x1004 => todo!(),\n    |                            ^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::todo;\n    |\n\nerror: cannot find macro `format_args` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:115:5\n    |\n115 |     axlog::ax_println!(\"Running testcase: {}\", testcase);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `axlog::ax_println` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this macro\n    |\n2   + use core::format_args;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:14:1\n   |\n14 | / bitflags! {\n15 | |     /// 指定 sys_wait4 的选项\n16 | |     pub struct WaitFlags: u32 {\n17 | |         /// 不挂起当前进程，直接返回\n...  |\n28 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:44:3\n   |\n44 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:75:3\n   |\n75 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:85:3\n   |\n85 | #[derive(Clone, Copy, Debug, Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:134:7\n    |\n134 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:133:1\n    |\n133 | / bitflags! {\n134 | |     #[derive(Debug)]\n135 | |     /// 指定 mmap 的选项\n136 | |     pub struct MMAPPROT: u32 {\n...   |\n144 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:163:7\n    |\n163 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:162:1\n    |\n162 | / bitflags! {\n163 | |     #[derive(Debug)]\n164 | |     /// 指定 mmap 的选项\n165 | |     pub struct MMAPFlags: u32 {\n...   |\n181 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:184:7\n    |\n184 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:183:1\n    |\n183 | / bitflags! {\n184 | |     #[derive(Debug)]\n185 | |     /// 指定 mremap 的选项\n186 | |     pub struct MREMAPFlags: u32 {\n...   |\n195 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:284:3\n    |\n284 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:312:7\n    |\n312 |     #[derive(PartialEq, Eq)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:310:1\n    |\n310 | / bitflags::bitflags! {\n311 | |     /// 对 futex 的操作\n312 | |     #[derive(PartialEq, Eq)]\n313 | |     pub struct FutexFlags: i32 {\n...   |\n327 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:332:7\n    |\n332 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:352:3\n    |\n352 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:409:3\n    |\n409 | #[derive(Clone, Copy)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:419:7\n    |\n419 |     #[derive(PartialEq,Eq,Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:431:3\n    |\n431 | #[derive(Clone, Copy, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:488:1\n    |\n488 | / bitflags! {\n489 | |     /// sys_renameat2 用到的选项\n490 | |     pub struct RenameFlags: u32 {\n491 | |         /// Nothing\n...   |\n500 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:505:3\n    |\n505 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:555:3\n    |\n555 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:611:3\n    |\n611 | #[derive(Debug, Default)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:626:1\n    |\n626 | / bitflags! {\n627 | |     /// 指定 st_mode 的选项\n628 | |     pub struct StMode: u32 {\n629 | |         /// regular file\n...   |\n662 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:677:7\n    |\n677 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:688:3\n    |\n688 | #[derive(Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall.rs:53:9\n   |\n53 |         panic!(\"unknown syscall id: {}\", syscall_id);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::panic;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/file.rs:106:13\n    |\n106 |             assert!(inode_map.contains_key(&self.path));\n    |             ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:30:9\n   |\n30 |         assert!(\n   |         ^^^^^^\n   |\nhelp: consider importing this macro\n   |\n2  + use core::assert;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:48:3\n   |\n48 | #[derive(Copy, Clone, PartialEq)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:128:9\n    |\n128 |         assert!(self.readable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find macro `assert` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:174:9\n    |\n174 |         assert!(self.writable());\n    |         ^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::assert;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:19:7\n   |\n19 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:17:1\n   |\n17 | / bitflags! {\n18 | |     /// 定义epoll事件的类别\n19 | |     #[derive(Clone, Copy,Debug)]\n20 | |     pub struct EpollEventType: u32{\n...  |\n37 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:40:3\n   |\n40 | #[derive(Debug, Clone, Copy)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:51:7\n   |\n51 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:10:7\n   |\n10 |     #[derive(Clone, Copy, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/eventfd.rs:8:1\n   |\n8  | / bitflags! {\n9  | |     // https://sites.uclouvain.be/SystInfo/usr/include/sys/eventfd.h.html\n10 | |     #[derive(Clone, Copy, Debug)]\n11 | |     pub struct EventFdFlag: u32 {\n...  |\n16 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:11:7\n   |\n11 |     #[derive(Clone, Copy,Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:9:1\n   |\n9  | / bitflags! {\n10 | |     /// 在文件上等待或者发生过的事件\n11 | |     #[derive(Clone, Copy,Debug)]\n12 | |     pub struct PollEvents: u16 {\n...  |\n24 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:26:3\n   |\n26 | #[derive(Default)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:35:3\n   |\n35 | #[derive(Clone, Copy, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/stat.rs:73:9\n   |\n73 |         panic!(\"Wrong path at syscall_fstatat: {}(dir_fd={})\", path, dir_fd);\n   |         ^^^^^\n   |\nhelp: consider importing this macro\n   |\n4  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/fs_syscall_id.rs:71:7\n   |\n71 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:213:9\n    |\n213 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:242:7\n    |\n242 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:241:1\n    |\n241 | / bitflags! {\n242 | |     #[derive(Debug)]\n243 | |     struct ShmFlags: i32 {\n244 | |         const IPC_CREAT = 0o1000;\n...   |\n250 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:314:7\n    |\n314 |     #[derive(Debug)]\n    |       ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:313:1\n    |\n313 | / bitflags! {\n314 | |     #[derive(Debug)]\n315 | |     struct ShmAtFlags: i32 {\n316 | |         const SHM_RND = 0o20000;\n...   |\n321 | | }\n    | |_^\n    |\n    = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n    |\n1   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/imp.rs:365:13\n    |\n365 |             unimplemented!()\n    |             ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mem_syscall_id.rs:34:7\n   |\n34 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_mem/mod.rs:29:13\n   |\n29 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:295:19\n    |\n295 |         Err(_) => unreachable!(),\n    |                   ^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unreachable;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:501:9\n    |\n501 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:567:9\n    |\n567 |         unimplemented!();\n    |         ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:610:17\n    |\n610 |                 panic!(\"[setsockopt()] option {opt_name} not supported in socket level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:617:17\n    |\n617 |                 panic!(\"[setsockopt()] option {opt_name} not supported in tcp level\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:633:3\n    |\n633 | #[derive(TryFromPrimitive)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n3   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/imp.rs:684:9\n    |\n684 |         panic!();\n    |         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n3   + use core::panic;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:29:3\n   |\n29 | #[derive(TryFromPrimitive, Clone, PartialEq, Eq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:39:3\n   |\n39 | #[derive(TryFromPrimitive, PartialEq, Eq, Copy, Clone, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:67:3\n   |\n67 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:77:3\n   |\n77 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:87:3\n   |\n87 | #[derive(TryFromPrimitive, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n2  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:101:3\n    |\n101 | #[derive(TryFromPrimitive, PartialEq)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find attribute `derive` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:111:3\n    |\n111 | #[derive(TryFromPrimitive, Debug)]\n    |   ^^^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n2   + use core::prelude::rust_2024::derive;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:137:22\n    |\n137 |                 _ => panic!(\"setsockopt IP_MULTICAST_TTL on a non-udp socket\"),\n    |                      ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:156:21\n    |\n156 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:164:21\n    |\n164 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:175:21\n    |\n175 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:186:21\n    |\n186 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:197:21\n    |\n197 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:226:21\n    |\n226 |                     panic!(\"can't read a timeval from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:238:17\n    |\n238 |                 panic!(\"can't set SO_ERROR\");\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:252:21\n    |\n252 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:262:21\n    |\n262 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:274:21\n    |\n274 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:286:21\n    |\n286 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:298:21\n    |\n298 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:322:21\n    |\n322 |                     panic!(\"can't write a timeval to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:344:17\n    |\n344 |                 panic!(\"unimplemented!\")\n    |                 ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:354:18\n    |\n354 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:360:21\n    |\n360 |                     panic!(\"can't read a int from socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:376:17\n    |\n376 |                 unimplemented!()\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:384:18\n    |\n384 |             _ => panic!(\"calling tcp option on a wrong type of socket\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:392:21\n    |\n392 |                     panic!(\"can't write a int to socket opt value\");\n    |                     ^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::panic;\n    |\n\nerror: cannot find macro `unimplemented` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:526:17\n    |\n526 |                 unimplemented!();\n    |                 ^^^^^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n2   + use core::unimplemented;\n    |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/net_syscall_id.rs:40:7\n   |\n40 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/mod.rs:36:13\n   |\n36 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n3  + use core::panic;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/task_syscall_id.rs:78:7\n   |\n78 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n4  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/imp/task.rs:328:25\n    |\n328 |                         panic!(\"Shouldn't reach here!\");\n    |                         ^^^^^\n    |\nhelp: consider importing this macro\n    |\n1   + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_task/mod.rs:96:13\n   |\n96 |             panic!(\"Invalid Syscall Id: {:?}!\", syscall_id);\n   |             ^^^^^\n   |\nhelp: consider importing this macro\n   |\n5  + use core::panic;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:146:6\n    |\n146 | impl From<MMAPPROT> for MappingFlags {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::convert::From;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:214:6\n    |\n214 | impl Default for UtsName {\n    |      ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n1   + use core::default::Default;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/ctypes.rs:394:30\n    |\n394 |     pub fn from(val: i32) -> Option<Self> {\n    |                              ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n1   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/mount.rs:101:43\n    |\n101 | pub fn get_stat_in_fs(path: &FilePath) -> Result<Kstat, SyscallError> {\n    |                                           ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n2   + use core::fmt::Result;\n    |\n2   + use core::result::Result;\n    |\n2   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/pipe.rs:60:16\n   |\n60 |     write_end: Option<Weak<Pipe>>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n1  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/ctype/epoll.rs:116:10\n    |\n116 |     ) -> Result<isize, SyscallError> {\n    |          ^^^^^^\n    |\n   ::: /home/runner/.cargo/git/checkouts/axerrno-5ea606781111d899/3e2372c/src/lib.rs:99:1\n    |\n99  | pub type AxResult<T = ()> = Result<T, AxError>;\n    | ------------------------- similarly named type alias `AxResult` defined here\n    |\nhelp: a type alias with a similar name exists\n    |\n116 |     ) -> AxResult<isize, SyscallError> {\n    |          ~~~~~~~~\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:54:6\n   |\n54 | impl Default for ShadowBitset {\n   |      ^^^^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n1  + use core::default::Default;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/poll.rs:251:49\n    |\n251 | fn init_fd_set(addr: *mut usize, len: usize) -> Result<PpollFdSet, SyscallError> {\n    |                                                 ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these items\n    |\n1   + use core::fmt::Result;\n    |\n1   + use core::result::Result;\n    |\n1   + use alloc::fmt::Result;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:28:16\n   |\n28 |     path_addr: Option<*const u8>,\n   |                ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n12 + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_fs/imp/mod.rs:30:6\n   |\n30 | ) -> Result<FilePath, SyscallError> {\n   |      ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n12 + use core::fmt::Result;\n   |\n12 + use core::result::Result;\n   |\n12 + use alloc::fmt::Result;\n   |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:446:25\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n446 |     recv_timeout: Mutex<Option<TimeVal>>,\n    |                         ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n446 |     recv_timeout: Mutex<IpOption<TimeVal>>,\n    |                         ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:449:17\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n449 |     pub buffer: Option<Arc<Pipe>>,\n    |                 ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n449 |     pub buffer: IpOption<Arc<Pipe>>,\n    |                 ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:467:35\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n467 |     fn get_recv_timeout(&self) -> Option<TimeVal> {\n    |                                   ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n467 |     fn get_recv_timeout(&self) -> IpOption<TimeVal> {\n    |                                   ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:491:37\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n491 |     fn set_recv_timeout(&self, val: Option<TimeVal>) {\n    |                                     ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n491 |     fn set_recv_timeout(&self, val: IpOption<TimeVal>) {\n    |                                     ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/syscall_net/socket.rs:659:44\n    |\n80  | pub enum IpOption {\n    | ----------------- similarly named enum `IpOption` defined here\n...\n659 |     pub fn sendto(&self, buf: &[u8], addr: Option<SocketAddr>) -> AxResult<usize> {\n    |                                            ^^^^^^\n    |\nhelp: an enum with a similar name exists\n    |\n659 |     pub fn sendto(&self, buf: &[u8], addr: IpOption<SocketAddr>) -> AxResult<usize> {\n    |                                            ~~~~~~~~\nhelp: consider importing this enum\n    |\n2   + use core::option::Option;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/api.rs:73:33\n   |\n73 | pub fn read_file(path: &str) -> Option<String> {\n   |                                 ^^^^^^ not found in this scope\n   |\nhelp: consider importing this enum\n   |\n2  + use core::option::Option;\n   |\n\nerror[E0412]: cannot find type `Result` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api/src/lib.rs:34:26\n   |\n34 | pub type SyscallResult = Result<isize, SyscallError>;\n   |                          ^^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n5  + use core::fmt::Result;\n   |\n5  + use core::result::Result;\n   |\n5  + use alloc::fmt::Result;\n   |\n\nSome errors have detailed explanations: E0405, E0412, E0463.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not document `linux_syscall_api`\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axfs","count":36,"raw_reports":[{"file":"modules/axfs/src/fs/fatfs.rs","count":8,"kinds":{"Clippy(Warn)":["warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n","warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n","warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n","warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n","warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n","warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n","warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n","warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n"]}},{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:31.741513601 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lazy_static v1.5.0\n   Compiling zerocopy v0.7.35\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:32.414382397 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:31.399511933 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling rand_core v0.6.4\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:30.033661134 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling virtio-drivers v0.7.4\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axfs, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:46:43.519845555 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:46:50|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfs, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:46:50.910394992 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n    Checking log v0.4.21\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bitflags v2.6.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:46:58|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfs, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:46:58.386364224 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n    Checking log v0.4.21\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking lazy_static v1.5.0\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking fdt v0.1.5\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:47:05|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfs, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:47:05.776437049 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n    Checking log v0.4.21\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bitflags v2.6.0\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling syn v2.0.90\n   Compiling lock_api v0.4.12\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:47:13|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:32:54.64075751 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling indexmap v2.7.1\n   Compiling unicode-ident v1.0.15\n    Checking bitflags v2.8.0\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking either v1.13.0\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking byteorder v1.5.0\n    Checking cty v0.2.2\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking memchr v2.7.4\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:33:09.931150499 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spin v0.9.8\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking critical-section v1.2.0\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking lazy_static v1.5.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking memchr v2.7.4\n    Checking either v1.13.0\n    Checking zerocopy v0.7.35\n    Checking cty v0.2.2\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking bitflags v1.3.2\n    Checking rand_core v0.6.4\n    Checking printf-compat v0.1.1\n    Checking virtio-drivers v0.7.5\n    Checking rand v0.8.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axfs-0_1_0-8194177ce25a18e3/target/debug/build/lwext4_rust-d0778c7be2d441aa/build-script-build` (exit status: 101)\n  --- stdout\n  Retrieve lwext4 source code\n  To patch lwext4 src\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/c/lwext4'\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/c/lwext4'\n\n  --- stderr\n  make: *** No rule to make target 'musl-generic'.  Stop.\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:33:03.693018407 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking either v1.13.0\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n    Checking cty v0.2.2\n    Checking memchr v2.7.4\n    Checking cstr_core v0.2.6\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking itertools v0.9.0\n    Checking zerocopy v0.7.35\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking virtio-drivers v0.7.5\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking rand_core v0.6.4\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:33:14.791234197 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.19\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking lazy_static v1.5.0\n    Checking tock-registers v0.8.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.13\n    Checking x86_64 v0.15.2\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking raw-cpuid v11.3.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking byteorder v1.5.0\n    Checking memchr v2.7.4\n    Checking zerocopy v0.7.35\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking either v1.13.0\n    Checking cty v0.2.2\n    Checking cstr_core v0.2.6\n    Checking itertools v0.9.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking virtio-drivers v0.7.5\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking rand_core v0.6.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking rand v0.8.5\n    Checking printf-compat v0.1.1\n   Compiling lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axfs-0_1_0-8194177ce25a18e3/target/debug/build/lwext4_rust-d0778c7be2d441aa/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:06:18.726184268 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nlog       0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:06:07.452300124 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nlog       0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:05:56.041163332 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nlog       0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:05:43.827134607 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nlog       0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:33:14.788687108 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spin v0.9.8\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking critical-section v1.2.0\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking lazy_static v1.5.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking memchr v2.7.4\n    Checking either v1.13.0\n    Checking zerocopy v0.7.35\n    Checking cty v0.2.2\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking bitflags v1.3.2\n    Checking rand_core v0.6.4\n    Checking printf-compat v0.1.1\n    Checking virtio-drivers v0.7.5\n    Checking rand v0.8.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axfs-0_1_0-8194177ce25a18e3/target/debug/build/lwext4_rust-d0778c7be2d441aa/build-script-build` (exit status: 101)\n  --- stdout\n  Retrieve lwext4 source code\n  To patch lwext4 src\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/c/lwext4'\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/c/lwext4'\n\n  --- stderr\n  make: *** No rule to make target 'musl-generic'.  Stop.\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:33:03.690113701 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling indexmap v2.7.1\n   Compiling unicode-ident v1.0.15\n    Checking bitflags v2.8.0\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking either v1.13.0\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking byteorder v1.5.0\n    Checking cty v0.2.2\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking memchr v2.7.4\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:33:09.928374143 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking either v1.13.0\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n    Checking cty v0.2.2\n    Checking memchr v2.7.4\n    Checking cstr_core v0.2.6\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking itertools v0.9.0\n    Checking zerocopy v0.7.35\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking virtio-drivers v0.7.5\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking rand_core v0.6.4\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:33:21.466917609 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.19\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking lazy_static v1.5.0\n    Checking tock-registers v0.8.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.13\n    Checking x86_64 v0.15.2\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking raw-cpuid v11.3.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking byteorder v1.5.0\n    Checking memchr v2.7.4\n    Checking zerocopy v0.7.35\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking either v1.13.0\n    Checking cty v0.2.2\n    Checking cstr_core v0.2.6\n    Checking itertools v0.9.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking virtio-drivers v0.7.5\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking rand_core v0.6.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking rand v0.8.5\n    Checking printf-compat v0.1.1\n   Compiling lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (https://github.com/elliott10/lwext4_rust.git#83489293)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axfs-0_1_0-8194177ce25a18e3/target/debug/build/lwext4_rust-d0778c7be2d441aa/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/lwext4_rust-e3da1e9953ef8e9f/8348929/build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"]}},{"file":"modules/axfs/src/api/file.rs","count":4,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"]}},{"file":"modules/axfs/src/fops.rs","count":4,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axprocess","count":36,"raw_reports":[{"file":"modules/axtask/src/task.rs","count":8,"kinds":{"Clippy(Warn)":["warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"]}},{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:48.71787872 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling rand v0.8.5\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling nb v0.1.3\n   Compiling ahash v0.7.8\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:49.294792769 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n","// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:48.291466632 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling ahash v0.7.8\n   Compiling capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:47.830042079 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling ahash v0.7.8\n   Compiling capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:50:11.189368694 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:50:19|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axprocess, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:50:19.031901898 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:50:26|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axprocess, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:50:26.855099251 +08:00:00\n    Checking log v0.4.21\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking const-default v1.0.0\n   Compiling svgbobdoc v0.3.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:50:34|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axprocess, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:50:34.797778899 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:50:43|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:36:15.404675531 +08:00:00\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n    Checking log v0.4.25\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling svgbobdoc v0.3.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking rlsf v0.2.1\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling enumn v0.1.14\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n","// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:36:33.1025905 +08:00:00\n    Building axprocess v0.1.0 (current)\n       Built [   3.617s] (current)\n     Parsing axprocess v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axprocess-0_1_0-8bf31115cf79a1a7/target/riscv64gc-unknown-none-elf/doc/axprocess.json\n","// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:36:26.925894011 +08:00:00\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking byteorder v1.5.0\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking zerocopy v0.7.35\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling ahash v0.7.8\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking nb v1.1.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking nb v0.1.3\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n","// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:36:39.542936169 +08:00:00\n    Building axprocess v0.1.0 (current)\n       Built [   5.296s] (current)\n     Parsing axprocess v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axprocess-0_1_0-8bf31115cf79a1a7/target/x86_64-unknown-none/doc/axprocess.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:11:52.156731402 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nriscv     0.10.1   ---     0.12.1  Normal  ---\n","pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:11:40.350451368 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nriscv     0.10.1   ---     0.12.1  Normal  ---\n","pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:11:28.008025638 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nriscv     0.10.1   ---     0.12.1  Normal  ---\n","pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:11:15.810837433 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\nriscv     0.10.1   ---     0.12.1  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:36:39.539887986 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\n       Built [   3.617s] (current)\n     Parsing axprocess v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axprocess-0_1_0-8bf31115cf79a1a7/target/riscv64gc-unknown-none-elf/doc/axprocess.json\n","pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:36:26.922909867 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n    Checking log v0.4.25\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling svgbobdoc v0.3.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking rlsf v0.2.1\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling enumn v0.1.14\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n","pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:36:33.099641068 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking byteorder v1.5.0\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking zerocopy v0.7.35\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n   Compiling version_check v0.9.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling ahash v0.7.8\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking nb v1.1.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking nb v0.1.3\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n","pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axprocess\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:36:47.57764669 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\n       Built [   5.296s] (current)\n     Parsing axprocess v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axprocess-0_1_0-8bf31115cf79a1a7/target/x86_64-unknown-none/doc/axprocess.json\n"]}},{"file":"modules/axprocess/src/process.rs","count":4,"kinds":{"Clippy(Warn)":["warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"]}},{"file":"modules/axtask/src/processor.rs","count":4,"kinds":{"Clippy(Warn)":["warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axfutex","count":32,"raw_reports":[{"file":"modules/axtask/src/task.rs","count":8,"kinds":{"Clippy(Warn)":["warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"]}},{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axfutex, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:35.09305992 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axfutex, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:35.603794989 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axfutex, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:34.393246639 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling ahash v0.7.8\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling rand_core v0.6.4\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axfutex, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:33.380070866 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling version_check v0.9.5\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling rand v0.8.5\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axfutex, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:47:13.764361326 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n    Checking log v0.4.21\n   Compiling equivalent v1.0.1\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:47:21|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfutex, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:47:21.556671453 +08:00:00\n   Compiling proc-macro2 v1.0.92\n    Checking log v0.4.21\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:47:29|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfutex, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:47:29.30874811 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking bitflags v2.6.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:47:37|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfutex, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:47:37.067234542 +08:00:00\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n    Checking log v0.4.21\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.18\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n    Checking const-default v1.0.0\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:47:45|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:33:21.470111534 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n    Checking log v0.4.25\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking const-default v1.0.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bit_field v0.10.2\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling svgbobdoc v0.3.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking rlsf v0.2.1\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:33:38.678782026 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bit_field v0.10.2\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking aarch64-cpu v9.4.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking spin v0.9.8\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking rand_core v0.6.4\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling ahash v0.7.8\n    Checking rand v0.8.5\n    Checking once_cell v1.20.2\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking virtio-drivers v0.7.5\n    Checking hashbrown v0.11.2\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\nwarning: unused import: `Ordering`\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: method `task_tick` is never used\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: field `irq_state` is never read\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\nwarning: `axtask` (lib) generated 3 warnings (run `cargo fix --lib -p axtask` to apply 1 suggestion)\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n Documenting axfutex v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `axfutex` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:9:7\n  |\n9 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n  |       ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n5 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:32:7\n   |\n32 |     #[derive(PartialEq, Eq, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:30:1\n   |\n30 | / bitflags::bitflags! {\n31 | |     #[allow(missing_docs)]\n32 | |     #[derive(PartialEq, Eq, Debug)]\n33 | |     /// Futex flags for posix syscall listed in <https://manpages.debian.org/unstable/manpages-dev/futex.2.en.html#FUTEX_WAIT>\n...  |\n44 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/futex.rs:30:3\n   |\n30 | #[derive(Copy, Clone, Default, Ord, PartialOrd, Eq, PartialEq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/jhash.rs:87:13\n   |\n87 |             unreachable!(\"Never happen\");\n   |             ^^^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::unreachable;\n   |\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `axfutex`\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:33:32.204072908 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spin v0.9.8\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n   Compiling version_check v0.9.5\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling ahash v0.7.8\n    Checking zerocopy v0.7.35\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking virtio-drivers v0.7.5\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:33:44.49653891 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling rustversion v1.0.19\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking rlsf v0.2.1\n    Checking aarch64-cpu v9.4.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking raw-cpuid v11.3.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking x2apic v0.4.3\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking rand v0.8.5\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling ahash v0.7.8\n    Checking once_cell v1.20.2\n    Checking virtio-drivers v0.7.5\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking hashbrown v0.11.2\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\nwarning: unused import: `Ordering`\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\nwarning: method `task_tick` is never used\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: field `irq_state` is never read\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\nwarning: `axtask` (lib) generated 3 warnings (run `cargo fix --lib -p axtask` to apply 1 suggestion)\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n Documenting axfutex v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `axfutex` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:9:7\n  |\n9 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n  |       ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n5 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:32:7\n   |\n32 |     #[derive(PartialEq, Eq, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:30:1\n   |\n30 | / bitflags::bitflags! {\n31 | |     #[allow(missing_docs)]\n32 | |     #[derive(PartialEq, Eq, Debug)]\n33 | |     /// Futex flags for posix syscall listed in <https://manpages.debian.org/unstable/manpages-dev/futex.2.en.html#FUTEX_WAIT>\n...  |\n44 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/futex.rs:30:3\n   |\n30 | #[derive(Copy, Clone, Default, Ord, PartialOrd, Eq, PartialEq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/jhash.rs:87:13\n   |\n87 |             unreachable!(\"Never happen\");\n   |             ^^^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::unreachable;\n   |\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `axfutex`\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:07:05.465885036 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nbitflags   2.6.0    2.8.0   2.8.0   Normal  ---\nhashbrown  0.11.2   ---     0.15.2  Normal  ---\nlog        0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:06:53.76099391 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nbitflags   2.6.0    2.8.0   2.8.0   Normal  ---\nhashbrown  0.11.2   ---     0.15.2  Normal  ---\nlog        0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:06:41.847041091 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nbitflags   2.6.0    2.8.0   2.8.0   Normal  ---\nhashbrown  0.11.2   ---     0.15.2  Normal  ---\nlog        0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:06:30.268288449 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nbitflags   2.6.0    2.8.0   2.8.0   Normal  ---\nhashbrown  0.11.2   ---     0.15.2  Normal  ---\nlog        0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:33:44.493608036 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bit_field v0.10.2\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking aarch64-cpu v9.4.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking spin v0.9.8\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking rand_core v0.6.4\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling ahash v0.7.8\n    Checking rand v0.8.5\n    Checking once_cell v1.20.2\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking virtio-drivers v0.7.5\n    Checking hashbrown v0.11.2\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\nwarning: unused import: `Ordering`\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: method `task_tick` is never used\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: field `irq_state` is never read\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\nwarning: `axtask` (lib) generated 3 warnings (run `cargo fix --lib -p axtask` to apply 1 suggestion)\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n Documenting axfutex v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `axfutex` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:9:7\n  |\n9 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n  |       ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n5 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:32:7\n   |\n32 |     #[derive(PartialEq, Eq, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:30:1\n   |\n30 | / bitflags::bitflags! {\n31 | |     #[allow(missing_docs)]\n32 | |     #[derive(PartialEq, Eq, Debug)]\n33 | |     /// Futex flags for posix syscall listed in <https://manpages.debian.org/unstable/manpages-dev/futex.2.en.html#FUTEX_WAIT>\n...  |\n44 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/futex.rs:30:3\n   |\n30 | #[derive(Copy, Clone, Default, Ord, PartialOrd, Eq, PartialEq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/jhash.rs:87:13\n   |\n87 |             unreachable!(\"Never happen\");\n   |             ^^^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::unreachable;\n   |\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `axfutex`\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:33:32.201067121 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n    Checking log v0.4.25\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking const-default v1.0.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bit_field v0.10.2\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling svgbobdoc v0.3.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking rlsf v0.2.1\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:33:38.675638906 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spin v0.9.8\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n   Compiling version_check v0.9.5\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling ahash v0.7.8\n    Checking zerocopy v0.7.35\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking virtio-drivers v0.7.5\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:33:52.21409677 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling rustversion v1.0.19\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking rlsf v0.2.1\n    Checking aarch64-cpu v9.4.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking raw-cpuid v11.3.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking x2apic v0.4.3\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking rand_core v0.6.4\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking rand v0.8.5\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling ahash v0.7.8\n    Checking once_cell v1.20.2\n    Checking virtio-drivers v0.7.5\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking hashbrown v0.11.2\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\nwarning: unused import: `Ordering`\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\nwarning: method `task_tick` is never used\n   --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\nwarning: field `irq_state` is never read\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\nwarning: `axtask` (lib) generated 3 warnings (run `cargo fix --lib -p axtask` to apply 1 suggestion)\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n Documenting axfutex v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex)\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `axfutex` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `derive` in this scope\n --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:9:7\n  |\n9 |     #[derive(Eq, PartialEq, Debug, Copy, Clone)]\n  |       ^^^^^^\n  |\nhelp: consider importing this attribute macro\n  |\n5 + use core::prelude::rust_2024::derive;\n  |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:32:7\n   |\n32 |     #[derive(PartialEq, Eq, Debug)]\n   |       ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/flags.rs:30:1\n   |\n30 | / bitflags::bitflags! {\n31 | |     #[allow(missing_docs)]\n32 | |     #[derive(PartialEq, Eq, Debug)]\n33 | |     /// Futex flags for posix syscall listed in <https://manpages.debian.org/unstable/manpages-dev/futex.2.en.html#FUTEX_WAIT>\n...  |\n44 | | }\n   | |_^\n   |\n   = note: this error originates in the macro `$crate::__declare_internal_bitflags` which comes from the expansion of the macro `bitflags::bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\nhelp: consider importing this attribute macro\n   |\n5  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/futex.rs:30:3\n   |\n30 | #[derive(Copy, Clone, Default, Ord, PartialOrd, Eq, PartialEq, Debug)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n1  + use core::prelude::rust_2024::derive;\n   |\n\nerror: cannot find macro `unreachable` in this scope\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex/src/jhash.rs:87:13\n   |\n87 |             unreachable!(\"Never happen\");\n   |             ^^^^^^^^^^^\n   |\nhelp: consider importing this macro\n   |\n1  + use core::unreachable;\n   |\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `axfutex`\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"]}},{"file":"modules/axtask/src/processor.rs","count":4,"kinds":{"Clippy(Warn)":["warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arch_boot","count":21,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:20.04926416 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling critical-section v1.2.0\n   Compiling lazy_static v1.5.0\n   Compiling fdt v0.1.5\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling embedded-hal v1.0.0\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=arch_boot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:20.535086627 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling bit v0.1.1\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=arch_boot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:19.789119073 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=arch_boot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:19.063568069 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:44:06.060096475 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:44:13|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arch_boot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:44:13.040170793 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:44:20|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arch_boot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:44:20.132600428 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking static_assertions v1.1.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling riscv v0.11.1\n    Checking critical-section v1.2.0\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking bitflags v2.6.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking bit_field v0.10.2\n    Checking sbi-spec v0.0.4\n    Checking sbi-rt v0.0.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:44:27|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arch_boot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:44:27.393595504 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:44:35|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:30:47.584749746 +08:00:00\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling svgbobdoc v0.3.0\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking rlsf v0.2.1\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling zerocopy-derive v0.7.35\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n","// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:31:05.141460245 +08:00:00\n    Building arch_boot v0.1.0 (current)\n       Built [   5.835s] (current)\n     Parsing arch_boot v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-arch_boot-0_1_0-e9b33d9235a1d372/target/riscv64gc-unknown-none-elf/doc/arch_boot.json\n","// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:30:58.911528953 +08:00:00\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n   Compiling enumn v0.1.14\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking virtio-drivers v0.7.5\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling version_check v0.9.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking rand_core v0.6.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking rand v0.8.5\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n","// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:31:15.205637435 +08:00:00\n    Building arch_boot v0.1.0 (current)\n       Built [   7.137s] (current)\n     Parsing arch_boot v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-arch_boot-0_1_0-e9b33d9235a1d372/target/x86_64-unknown-none/doc/arch_boot.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:01:30.740654824 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nraw-cpuid       11.2.0   11.3.0  11.3.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:01:18.827415524 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nraw-cpuid       11.2.0   11.3.0  11.3.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:01:06.163740102 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nraw-cpuid       11.2.0   11.3.0  11.3.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:00:54.436767153 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nraw-cpuid       11.2.0   11.3.0  11.3.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:31:15.203509137 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\n       Built [   5.835s] (current)\n     Parsing arch_boot v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-arch_boot-0_1_0-e9b33d9235a1d372/target/riscv64gc-unknown-none-elf/doc/arch_boot.json\n","pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:30:58.909122906 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling svgbobdoc v0.3.0\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking rlsf v0.2.1\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling zerocopy-derive v0.7.35\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n","pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:31:05.138852642 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking zerocopy v0.7.35\n   Compiling enumn v0.1.14\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking virtio-drivers v0.7.5\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling version_check v0.9.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking rand_core v0.6.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking rand v0.8.5\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n","pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:31:25.401977511 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\n       Built [   7.137s] (current)\n     Parsing arch_boot v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-arch_boot-0_1_0-e9b33d9235a1d372/target/x86_64-unknown-none/doc/arch_boot.json\n"]}},{"file":"modules/axtrap/src/arch/riscv/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axlibc","count":21,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:40.649450277 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling cfg-if v1.0.0\n   Compiling minimal-lexical v0.2.1\n   Compiling linux-raw-sys v0.4.14\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling memchr v2.7.4\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:41.418255063 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:38.968690862 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling rustix v0.38.41\n   Compiling libc v0.2.167\n   Compiling prettyplease v0.2.25\n   Compiling clang-sys v1.8.1\n   Compiling either v1.13.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling regex-syntax v0.8.5\n   Compiling bitflags v2.6.0\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:38.548375274 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling prettyplease v0.2.25\n   Compiling rustix v0.38.41\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling libc v0.2.167\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axlibc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:48:13.65512701 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n   Compiling glob v0.3.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling clang-sys v1.8.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:48:21|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlibc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:48:21.383780202 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n   Compiling glob v0.3.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling clang-sys v1.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:48:29|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlibc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:48:29.10514025 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking critical-section v1.2.0\n    Checking spin v0.9.8\n   Compiling riscv v0.11.1\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking sbi-spec v0.0.7\n    Checking bitflags v2.6.0\n   Compiling glob v0.3.1\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling clang-sys v1.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:48:36|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlibc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:48:36.789231115 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking log v0.4.21\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:48:45|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:34:15.938717838 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n    Checking log v0.4.25\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking spin v0.9.8\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking fdt v0.1.5\n   Compiling svgbobdoc v0.3.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking rlsf v0.2.1\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling glob v0.3.2\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n   Compiling zerocopy-derive v0.7.35\n   Compiling enumn v0.1.14\n   Compiling clang-sys v1.8.1\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:34:34.811470663 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spin v0.9.8\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking rlsf v0.2.1\n    Checking aarch64-cpu v9.4.0\n    Checking critical-section v1.2.0\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling memchr v2.7.4\n   Compiling linux-raw-sys v0.4.15\n    Checking virtio-drivers v0.7.5\n   Compiling minimal-lexical v0.2.1\n   Compiling either v1.13.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling rustix v0.38.44\n   Compiling nom v7.1.3\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n   Compiling libloading v0.8.6\n   Compiling heapless v0.8.0\n   Compiling regex-automata v0.4.9\n   Compiling libc v0.2.169\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n   Compiling bindgen v0.69.5\n    Checking stable_deref_trait v1.2.0\n   Compiling home v0.5.11\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n   Compiling which v4.4.2\n    Checking rand v0.8.5\n   Compiling clang-sys v1.8.1\n   Compiling cexpr v0.6.0\n   Compiling regex v1.11.1\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n   Compiling itertools v0.12.1\n   Compiling prettyplease v0.2.29\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling shlex v1.3.0\n   Compiling rustc-hash v1.1.0\n    Checking managed v0.8.0\n   Compiling lazycell v1.3.0\n    Checking bitflags v1.3.2\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking axnet v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet)\n   Compiling riscv v0.10.1\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\nwarning: `axnet` (lib) generated 1 warning\n    Checking axruntime v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime)\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot)\n    Checking sbi-spec v0.0.4\n    Checking bitmaps v3.2.1\n    Checking axtrap v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap/src/lib.rs:14:12\n   |\n14 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap/src/lib.rs:16:12\n   |\n16 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: unused variable: `stval`\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: `axtrap` (lib) generated 3 warnings\n    Checking sbi-rt v0.0.2\n    Checking axfeat v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat)\nwarning: unexpected `cfg` condition value: `aarch64-phytiumpi`\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/platform/mod.rs:14:5\n   |\n14 |     platform_family = \"aarch64-phytiumpi\",\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `platform_family` are: `aarch64-bsta1000b`, `aarch64-qemu-virt`, `aarch64-raspi`, `aarch64-rk3588j`, `riscv64-qemu-virt`, and `x86-pc`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-phytiumpi\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-phytiumpi\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:6:12\n  |\n6 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: function `start_given_secondary_cpu` is never used\n --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/platform/dummy/mod.rs:5:12\n  |\n5 |     pub fn start_given_secondary_cpu(_cpu_id: usize, _stack_top: PhysAddr) {}\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\nwarning: function `start_secondary_cpus` is never used\n --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/mp.rs:8:15\n  |\n8 | pub(crate) fn start_secondary_cpus(primary_cpu_id: usize) {\n  |               ^^^^^^^^^^^^^^^^^^^^\n\nwarning: creating a shared reference to mutable static is discouraged\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:34:25\n   |\n34 |         let stack_low = BOOT_STACK.as_ptr() as usize;\n   |                         ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n   = note: `#[warn(static_mut_refs)]` on by default\n\nwarning: creating a mutable reference to mutable static is discouraged\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:39:20\n   |\n39 |             return BOOT_STACK.as_mut_ptr();\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\nwarning: `arch_boot` (lib) generated 6 warnings\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:34:28.139233179 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling prettyplease v0.2.29\n   Compiling libc v0.2.169\n    Checking virtio-drivers v0.7.5\n   Compiling rustix v0.38.44\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling clang-sys v1.8.1\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling regex-syntax v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling heapless v0.8.0\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:34:48.66281822 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling rustversion v1.0.19\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bit v0.1.1\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking raw-cpuid v11.3.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking zerocopy v0.7.35\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking x2apic v0.4.3\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n    Checking virtio-drivers v0.7.5\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking rand v0.8.5\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking managed v0.8.0\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n   Compiling arceos_posix_api v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api)\n    Checking bitmaps v3.2.1\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:08:42.269610333 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:08:30.105973635 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:08:18.061576061 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:08:05.205031161 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:34:48.659670501 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spin v0.9.8\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking rlsf v0.2.1\n    Checking aarch64-cpu v9.4.0\n    Checking critical-section v1.2.0\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling memchr v2.7.4\n   Compiling linux-raw-sys v0.4.15\n    Checking virtio-drivers v0.7.5\n   Compiling minimal-lexical v0.2.1\n   Compiling either v1.13.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling rustix v0.38.44\n   Compiling nom v7.1.3\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n   Compiling libloading v0.8.6\n   Compiling heapless v0.8.0\n   Compiling regex-automata v0.4.9\n   Compiling libc v0.2.169\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n   Compiling bindgen v0.69.5\n    Checking stable_deref_trait v1.2.0\n   Compiling home v0.5.11\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n   Compiling which v4.4.2\n    Checking rand v0.8.5\n   Compiling clang-sys v1.8.1\n   Compiling cexpr v0.6.0\n   Compiling regex v1.11.1\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n   Compiling itertools v0.12.1\n   Compiling prettyplease v0.2.29\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling shlex v1.3.0\n   Compiling rustc-hash v1.1.0\n    Checking managed v0.8.0\n   Compiling lazycell v1.3.0\n    Checking bitflags v1.3.2\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking axnet v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet)\n   Compiling riscv v0.10.1\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\nwarning: `axnet` (lib) generated 1 warning\n    Checking axruntime v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime)\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot)\n    Checking sbi-spec v0.0.4\n    Checking bitmaps v3.2.1\n    Checking axtrap v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap/src/lib.rs:14:12\n   |\n14 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap/src/lib.rs:16:12\n   |\n16 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: unused variable: `stval`\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\nwarning: `axtrap` (lib) generated 3 warnings\n    Checking sbi-rt v0.0.2\n    Checking axfeat v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat)\nwarning: unexpected `cfg` condition value: `aarch64-phytiumpi`\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/platform/mod.rs:14:5\n   |\n14 |     platform_family = \"aarch64-phytiumpi\",\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `platform_family` are: `aarch64-bsta1000b`, `aarch64-qemu-virt`, `aarch64-raspi`, `aarch64-rk3588j`, `riscv64-qemu-virt`, and `x86-pc`\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(platform_family, values(\"aarch64-phytiumpi\"))'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(platform_family, values(\\\"aarch64-phytiumpi\\\"))\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:6:12\n  |\n6 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: function `start_given_secondary_cpu` is never used\n --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/platform/dummy/mod.rs:5:12\n  |\n5 |     pub fn start_given_secondary_cpu(_cpu_id: usize, _stack_top: PhysAddr) {}\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\nwarning: function `start_secondary_cpus` is never used\n --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/mp.rs:8:15\n  |\n8 | pub(crate) fn start_secondary_cpus(primary_cpu_id: usize) {\n  |               ^^^^^^^^^^^^^^^^^^^^\n\nwarning: creating a shared reference to mutable static is discouraged\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:34:25\n   |\n34 |         let stack_low = BOOT_STACK.as_ptr() as usize;\n   |                         ^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n   = note: `#[warn(static_mut_refs)]` on by default\n\nwarning: creating a mutable reference to mutable static is discouraged\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot/src/lib.rs:39:20\n   |\n39 |             return BOOT_STACK.as_mut_ptr();\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\nwarning: `arch_boot` (lib) generated 6 warnings\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:34:28.136354672 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n    Checking log v0.4.25\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking spin v0.9.8\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking fdt v0.1.5\n   Compiling svgbobdoc v0.3.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking rlsf v0.2.1\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling glob v0.3.2\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n   Compiling zerocopy-derive v0.7.35\n   Compiling enumn v0.1.14\n   Compiling clang-sys v1.8.1\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:34:34.807941933 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling prettyplease v0.2.29\n   Compiling libc v0.2.169\n    Checking virtio-drivers v0.7.5\n   Compiling rustix v0.38.44\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling clang-sys v1.8.1\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling regex-syntax v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling heapless v0.8.0\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:34:57.197567255 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling rustversion v1.0.19\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bit v0.1.1\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking raw-cpuid v11.3.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking zerocopy v0.7.35\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking x2apic v0.4.3\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n    Checking virtio-drivers v0.7.5\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking rand v0.8.5\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking managed v0.8.0\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n   Compiling arceos_posix_api v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api)\n    Checking bitmaps v3.2.1\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"]}},{"file":"modules/axtrap/src/arch/riscv/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axtrap","count":21,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axtrap, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:42:02.698140162 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling riscv v0.10.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axtrap, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:42:03.070893418 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axtrap, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:42:02.519695509 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axtrap, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:42:02.339215606 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axtrap, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:53:39.91307899 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:53:46|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtrap, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:53:46.863670011 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:53:53|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtrap, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:53:53.711560243 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking critical-section v1.2.0\n    Checking nb v1.1.0\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n    Checking aarch64-cpu v9.4.0\n    Checking nb v0.1.3\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking embedded-hal v0.2.7\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking bit_field v0.10.2\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:54:00|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtrap, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:54:00.834700385 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:54:08|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:38:56.287661888 +08:00:00\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n   Compiling syn v1.0.109\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling svgbobdoc v0.3.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling zerocopy-derive v0.7.35\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n","// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:39:14.492587736 +08:00:00\n    Building axtrap v0.1.0 (current)\n       Built [   5.736s] (current)\n     Parsing axtrap v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axtrap-0_1_0-5ca7167e3d95d0b2/target/riscv64gc-unknown-none-elf/doc/axtrap.json\n","// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:39:07.878116516 +08:00:00\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n   Compiling enumn v0.1.14\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling version_check v0.9.5\n    Checking virtio-drivers v0.7.5\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n","// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:39:23.426354017 +08:00:00\n    Building axtrap v0.1.0 (current)\n       Built [   7.070s] (current)\n     Parsing axtrap v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axtrap-0_1_0-5ca7167e3d95d0b2/target/x86_64-unknown-none/doc/axtrap.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:17:26.065688704 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:17:13.994337985 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:17:01.950469021 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:16:49.83736265 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:39:23.417982587 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\n       Built [   5.736s] (current)\n     Parsing axtrap v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axtrap-0_1_0-5ca7167e3d95d0b2/target/riscv64gc-unknown-none-elf/doc/axtrap.json\n","pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:39:07.875097146 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n   Compiling syn v1.0.109\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling svgbobdoc v0.3.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking rlsf v0.2.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling zerocopy-derive v0.7.35\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n","pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:39:14.489458961 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n   Compiling enumn v0.1.14\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling version_check v0.9.5\n    Checking virtio-drivers v0.7.5\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n","pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtrap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:39:33.505848885 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\n       Built [   7.070s] (current)\n     Parsing axtrap v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axtrap-0_1_0-5ca7167e3d95d0b2/target/x86_64-unknown-none/doc/axtrap.json\n"]}},{"file":"modules/axtrap/src/arch/riscv/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arceos_posix_api","count":20,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:16.079547759 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling spin v0.9.8\n   Compiling riscv v0.11.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling sbi-spec v0.0.7\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:17.991402289 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lazy_static v1.5.0\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling fdt v0.1.5\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n","// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:15.514067395 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling clang-sys v1.8.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:11.46773158 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v2.0.90\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling glob v0.3.1\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:43:34.777146047 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n   Compiling glob v0.3.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling clang-sys v1.8.1\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:43:42|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_posix_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:43:42.436824469 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling glob v0.3.1\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling clang-sys v1.8.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:43:50|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_posix_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:43:50.104389946 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling glob v0.3.1\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking bitflags v2.6.0\n    Checking sbi-spec v0.0.7\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:43:57|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_posix_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:43:57.876096958 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:44:06|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:30:05.401376788 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n    Checking log v0.4.25\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n   Compiling syn v1.0.109\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling unicode-width v0.1.14\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking aarch64-cpu v9.4.0\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n   Compiling svgbobdoc v0.3.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking rlsf v0.2.1\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling glob v0.3.2\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling zerocopy-derive v0.7.35\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling enumn v0.1.14\n   Compiling clang-sys v1.8.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling rustix v0.38.44\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling heapless v0.8.0\n   Compiling prettyplease v0.2.29\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:30:24.92868511 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking critical-section v1.2.0\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking stable_deref_trait v1.2.0\n    Checking rand_core v0.6.4\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n   Compiling linux-raw-sys v0.4.15\n    Checking virtio-drivers v0.7.5\n   Compiling minimal-lexical v0.2.1\n   Compiling libloading v0.8.6\n   Compiling rustix v0.38.44\n   Compiling regex-automata v0.4.9\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n   Compiling nom v7.1.3\n    Checking rand v0.8.5\n   Compiling libc v0.2.169\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n   Compiling home v0.5.11\n   Compiling bindgen v0.69.5\n   Compiling which v4.4.2\n   Compiling clang-sys v1.8.1\n   Compiling cexpr v0.6.0\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling regex v1.11.1\n   Compiling itertools v0.12.1\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling prettyplease v0.2.29\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling shlex v1.3.0\n   Compiling rustc-hash v1.1.0\n   Compiling lazycell v1.3.0\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking axnet v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet)\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n    Checking bitmaps v3.2.1\nwarning: `axnet` (lib) generated 1 warning\n    Checking axruntime v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axfeat v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat)\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:30:17.511011882 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling libc v0.2.169\n    Checking virtio-drivers v0.7.5\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling prettyplease v0.2.29\n   Compiling rustix v0.38.44\n   Compiling heapless v0.8.0\n   Compiling clang-sys v1.8.1\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling memchr v2.7.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking stable_deref_trait v1.2.0\n   Compiling regex-syntax v0.8.5\n    Checking rand_core v0.6.4\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:30:38.880104043 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.19\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking rlsf v0.2.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking raw-cpuid v11.3.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking x2apic v0.4.3\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling heapless v0.8.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n    Checking virtio-drivers v0.7.5\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking rand v0.8.5\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking managed v0.8.0\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n   Compiling arceos_posix_api v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api)\n    Checking bitmaps v3.2.1\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:00:42.181789892 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:00:30.696984702 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:00:19.09413908 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:00:00.14907738 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:30:38.877649001 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking critical-section v1.2.0\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking stable_deref_trait v1.2.0\n    Checking rand_core v0.6.4\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n   Compiling linux-raw-sys v0.4.15\n    Checking virtio-drivers v0.7.5\n   Compiling minimal-lexical v0.2.1\n   Compiling libloading v0.8.6\n   Compiling rustix v0.38.44\n   Compiling regex-automata v0.4.9\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n   Compiling nom v7.1.3\n    Checking rand v0.8.5\n   Compiling libc v0.2.169\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n   Compiling home v0.5.11\n   Compiling bindgen v0.69.5\n   Compiling which v4.4.2\n   Compiling clang-sys v1.8.1\n   Compiling cexpr v0.6.0\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling regex v1.11.1\n   Compiling itertools v0.12.1\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling prettyplease v0.2.29\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling shlex v1.3.0\n   Compiling rustc-hash v1.1.0\n   Compiling lazycell v1.3.0\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking axnet v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet)\nwarning: the feature `new_uninit` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axnet/src/lib.rs:21:12\n   |\n21 | #![feature(new_uninit)]\n   |            ^^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n    Checking bitmaps v3.2.1\nwarning: `axnet` (lib) generated 1 warning\n    Checking axruntime v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime)\n    Checking axfeat v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat)\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:30:17.508544421 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n    Checking log v0.4.25\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n   Compiling syn v1.0.109\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling unicode-width v0.1.14\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking aarch64-cpu v9.4.0\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n   Compiling svgbobdoc v0.3.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking rlsf v0.2.1\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling glob v0.3.2\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling zerocopy-derive v0.7.35\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling enumn v0.1.14\n   Compiling clang-sys v1.8.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling rustix v0.38.44\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling heapless v0.8.0\n   Compiling prettyplease v0.2.29\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:30:24.9262346 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling libc v0.2.169\n    Checking virtio-drivers v0.7.5\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling prettyplease v0.2.29\n   Compiling rustix v0.38.44\n   Compiling heapless v0.8.0\n   Compiling clang-sys v1.8.1\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling memchr v2.7.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking stable_deref_trait v1.2.0\n   Compiling regex-syntax v0.8.5\n    Checking rand_core v0.6.4\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:30:47.581997694 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.19\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking rlsf v0.2.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking raw-cpuid v11.3.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking x2apic v0.4.3\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling heapless v0.8.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n    Checking virtio-drivers v0.7.5\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking rand v0.8.5\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking managed v0.8.0\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `const_option` has been stable since 1.83.0 and no longer requires an attribute to enable\n  --> /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal/src/lib.rs:30:12\n   |\n30 | #![feature(const_option)]\n   |            ^^^^^^^^^^^^\n\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\nwarning: `axhal` (lib) generated 2 warnings\n    Checking axsignal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking axtask v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axsync v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync)\n   Compiling arceos_posix_api v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api)\n    Checking bitmaps v3.2.1\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking axfs v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axfs)\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror[E0635]: unknown feature `const_maybe_uninit_uninit_array`\n  --> /home/runner/.cargo/git/checkouts/flatten_objects-374a6d4d676a91fb/ac43d74/src/lib.rs:34:12\n   |\n34 | #![feature(const_maybe_uninit_uninit_array)]\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `flatten_objects` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axalloc","count":20,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:21.932048711 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:22.248338717 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:21.640553843 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling rlsf v0.2.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axalloc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:21.469710827 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axalloc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:44:35.340126224 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking static_assertions v1.1.0\n   Compiling unicode-width v0.1.14\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:44:41|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axalloc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:44:41.496916429 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling syn v1.0.109\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:44:47|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axalloc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:44:47.61578413 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling syn v1.0.109\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n   Compiling unicode-width v0.1.14\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n17:44:53|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axalloc, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:44:53.144753976 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.0\n    Checking raw-cpuid v10.7.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling base64 v0.13.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:44:59|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:31:25.404409486 +08:00:00\n    Building axalloc v0.1.0 (current)\n       Built [   5.318s] (current)\n     Parsing axalloc v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axalloc-0_1_0-976a0244f7e8ff0f/target/aarch64-unknown-none/doc/axalloc.json\n","// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:31:34.814106109 +08:00:00\n    Building axalloc v0.1.0 (current)\n       Built [   0.573s] (current)\n     Parsing axalloc v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axalloc-0_1_0-976a0244f7e8ff0f/target/riscv64gc-unknown-none-elf/doc/axalloc.json\n","// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:31:31.798945962 +08:00:00\n    Building axalloc v0.1.0 (current)\n       Built [   1.916s] (current)\n     Parsing axalloc v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axalloc-0_1_0-976a0244f7e8ff0f/target/aarch64-unknown-none-softfloat/doc/axalloc.json\n","// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:31:36.271745424 +08:00:00\n    Building axalloc v0.1.0 (current)\n       Built [   1.536s] (current)\n     Parsing axalloc v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axalloc-0_1_0-976a0244f7e8ff0f/target/x86_64-unknown-none/doc/axalloc.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:02:18.290694065 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:02:06.611202423 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:01:54.909532177 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:01:42.438054415 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:31:36.269456296 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\n       Built [   0.573s] (current)\n     Parsing axalloc v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axalloc-0_1_0-976a0244f7e8ff0f/target/riscv64gc-unknown-none-elf/doc/axalloc.json\n","pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:31:31.796380007 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\n       Built [   5.318s] (current)\n     Parsing axalloc v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axalloc-0_1_0-976a0244f7e8ff0f/target/aarch64-unknown-none/doc/axalloc.json\n","pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:31:34.811903349 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\n       Built [   1.916s] (current)\n     Parsing axalloc v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axalloc-0_1_0-976a0244f7e8ff0f/target/aarch64-unknown-none-softfloat/doc/axalloc.json\n","pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:31:38.74513964 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\n       Built [   1.536s] (current)\n     Parsing axalloc v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axalloc-0_1_0-976a0244f7e8ff0f/target/x86_64-unknown-none/doc/axalloc.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axdisplay","count":20,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:23.832668786 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling sbi-rt v0.0.3\n   Compiling riscv v0.11.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:24.207560624 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:23.234085149 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling zerocopy v0.7.35\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:22.955103298 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling either v1.13.0\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:45:15.110514361 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:45:22|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdisplay, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:45:22.344115104 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:45:29|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdisplay, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:45:29.622390822 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:45:37|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdisplay, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:45:37.016596984 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking bitflags v2.6.0\n    Checking log v0.4.21\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:45:44|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:31:44.26105177 +08:00:00\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling toml_edit v0.22.22\n    Checking tock-registers v0.9.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.8.0\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n","// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:31:57.021419609 +08:00:00\n    Building axdisplay v0.1.0 (current)\n       Built [   2.173s] (current)\n     Parsing axdisplay v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axdisplay-0_1_0-01666ec060466c14/target/riscv64gc-unknown-none-elf/doc/axdisplay.json\n","// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:31:52.39904819 +08:00:00\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking lazy_static v1.5.0\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking zerocopy v0.7.35\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n","// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:32:00.96359964 +08:00:00\n    Building axdisplay v0.1.0 (current)\n       Built [   3.991s] (current)\n     Parsing axdisplay v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axdisplay-0_1_0-01666ec060466c14/target/x86_64-unknown-none/doc/axdisplay.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:03:52.976536501 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:03:41.075157811 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:03:29.612098579 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:03:17.828926814 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:32:00.961162275 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\n       Built [   2.173s] (current)\n     Parsing axdisplay v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axdisplay-0_1_0-01666ec060466c14/target/riscv64gc-unknown-none-elf/doc/axdisplay.json\n","pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:31:52.396185101 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling toml_edit v0.22.22\n    Checking tock-registers v0.9.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.8.0\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n","pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:31:57.019016622 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking lazy_static v1.5.0\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking zerocopy v0.7.35\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n","pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdisplay\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:32:07.043680725 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\n       Built [   3.991s] (current)\n     Parsing axdisplay v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axdisplay-0_1_0-01666ec060466c14/target/x86_64-unknown-none/doc/axdisplay.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axdriver","count":20,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:27.036254563 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:27.288144055 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling zerocopy v0.7.35\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:25.800441782 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling virtio-drivers v0.7.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:25.204751167 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling zerocopy v0.7.35\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axdriver, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:45:44.702904235 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling zerocopy-derive v0.7.35\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:45:52|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdriver, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:45:52.153496316 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling zerocopy-derive v0.7.35\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:45:59|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdriver, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:45:59.552775504 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling zerocopy-derive v0.7.35\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:46:06|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdriver, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:46:06.87934579 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking bitflags v1.3.2\n   Compiling toml_edit v0.22.22\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.18\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:46:14|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:32:07.046259785 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n   Compiling semver v1.0.25\n    Checking byteorder v1.5.0\n    Checking tock-registers v0.8.1\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling rustc_version v0.4.1\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n   Compiling heapless v0.7.17\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking hash32 v0.2.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling zerocopy-derive v0.7.35\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling base64 v0.13.1\n    Checking managed v0.8.0\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking bitflags v1.3.2\n   Compiling unicode-width v0.1.14\n    Checking volatile v0.3.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling enumn v0.1.14\n    Checking volatile v0.2.7\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking zerocopy v0.7.35\n    Checking core_detect v1.0.0\n    Checking const-default v1.0.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking virtio-drivers v0.7.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking fdt v0.1.5\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling svgbobdoc v0.3.0\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:32:24.76211288 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking bit_field v0.10.2\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking hash32 v0.2.1\n   Compiling heapless v0.7.17\n    Checking stable_deref_trait v1.2.0\n    Checking bitflags v2.8.0\n    Checking spin v0.9.8\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking volatile v0.3.0\n    Checking bitflags v1.3.2\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking managed v0.8.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking zerocopy v0.7.35\n    Checking const-default v1.0.0\n   Compiling riscv v0.11.1\n    Checking volatile v0.2.7\n    Checking core_detect v1.0.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking rlsf v0.2.1\n    Checking virtio-drivers v0.7.5\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axdriver-0_1_0-f41abb8ac0934789/target/debug/build/axdriver-61d69d1580996e9c/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"mmio\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:32:19.240425843 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v9.4.0\n    Checking aarch64-cpu v10.0.0\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking volatile v0.3.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking zerocopy v0.7.35\n    Checking core_detect v1.0.0\n    Checking const-default v1.0.0\n    Checking volatile v0.2.7\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking rlsf v0.2.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking virtio-drivers v0.7.5\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:32:29.586257394 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n    Checking bit_field v0.10.2\n    Checking log v0.4.25\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n    Checking byteorder v1.5.0\n    Checking bitflags v2.8.0\n   Compiling x86 v0.52.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling rustversion v1.0.19\n    Checking spin v0.9.8\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking aarch64-cpu v9.4.0\n    Checking volatile v0.4.6\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking managed v0.8.0\n    Checking volatile v0.3.0\n   Compiling paste v1.0.15\n    Checking zerocopy v0.7.35\n    Checking volatile v0.2.7\n    Checking core_detect v1.0.0\n    Checking const-default v1.0.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking rlsf v0.2.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking virtio-drivers v0.7.5\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n    Checking x86_64 v0.14.13\n    Checking x86_64 v0.15.2\n    Checking lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking raw-cpuid v11.3.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axdriver-0_1_0-f41abb8ac0934789/target/debug/build/axdriver-61d69d1580996e9c/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"mmio\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:04:40.286344897 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:04:29.16080616 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:04:16.436750115 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:04:04.432781485 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:32:29.583501976 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n    Checking bit_field v0.10.2\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking hash32 v0.2.1\n   Compiling heapless v0.7.17\n    Checking stable_deref_trait v1.2.0\n    Checking bitflags v2.8.0\n    Checking spin v0.9.8\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking volatile v0.3.0\n    Checking bitflags v1.3.2\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking managed v0.8.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking zerocopy v0.7.35\n    Checking const-default v1.0.0\n   Compiling riscv v0.11.1\n    Checking volatile v0.2.7\n    Checking core_detect v1.0.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking rlsf v0.2.1\n    Checking virtio-drivers v0.7.5\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axdriver-0_1_0-f41abb8ac0934789/target/debug/build/axdriver-61d69d1580996e9c/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"mmio\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:32:19.237413807 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n   Compiling semver v1.0.25\n    Checking byteorder v1.5.0\n    Checking tock-registers v0.8.1\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling rustc_version v0.4.1\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n   Compiling heapless v0.7.17\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking hash32 v0.2.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling zerocopy-derive v0.7.35\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling base64 v0.13.1\n    Checking managed v0.8.0\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking bitflags v1.3.2\n   Compiling unicode-width v0.1.14\n    Checking volatile v0.3.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling enumn v0.1.14\n    Checking volatile v0.2.7\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking zerocopy v0.7.35\n    Checking core_detect v1.0.0\n    Checking const-default v1.0.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking virtio-drivers v0.7.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking fdt v0.1.5\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling svgbobdoc v0.3.0\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:32:24.759519395 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v9.4.0\n    Checking aarch64-cpu v10.0.0\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking volatile v0.3.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking zerocopy v0.7.35\n    Checking core_detect v1.0.0\n    Checking const-default v1.0.0\n    Checking volatile v0.2.7\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking rlsf v0.2.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking virtio-drivers v0.7.5\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:32:35.999562962 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\n    Checking bit_field v0.10.2\n    Checking log v0.4.25\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking raw-cpuid v10.7.0\n    Checking byteorder v1.5.0\n    Checking bitflags v2.8.0\n   Compiling x86 v0.52.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling rustversion v1.0.19\n    Checking spin v0.9.8\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n   Compiling heapless v0.7.17\n    Checking hash32 v0.2.1\n    Checking aarch64-cpu v9.4.0\n    Checking volatile v0.4.6\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking managed v0.8.0\n    Checking volatile v0.3.0\n   Compiling paste v1.0.15\n    Checking zerocopy v0.7.35\n    Checking volatile v0.2.7\n    Checking core_detect v1.0.0\n    Checking const-default v1.0.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking rlsf v0.2.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking virtio-drivers v0.7.5\n    Checking ixgbe-driver v0.1.0 (https://github.com/KuangjuX/ixgbe-driver.git?rev=8e5eb74#8e5eb741)\n    Checking bcm2835-sdhci v0.1.0 (https://github.com/lhw2002426/bcm2835-sdhci.git?rev=e974f16#e974f168)\n    Checking e1000-driver v0.2.0 (https://github.com/elliott10/e1000-driver.git?rev=7b2458e5#7b2458e5)\n    Checking x86_64 v0.14.13\n    Checking x86_64 v0.15.2\n    Checking lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking raw-cpuid v11.3.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axdriver-0_1_0-f41abb8ac0934789/target/debug/build/axdriver-61d69d1580996e9c/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"mmio\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axhal","count":20,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:36.951509806 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:37.123939986 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling raw-cpuid v11.2.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:36.776188023 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:36.599745058 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:47:45.066688373 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:47:51|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:47:51.946628693 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:47:58|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:47:58.797029465 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking bitflags v2.6.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:48:05|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:48:05.686494328 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:48:13|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:33:52.217236464 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.9.0\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v2.0.96\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling svgbobdoc v0.3.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n","// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:34:06.74235494 +08:00:00\n    Building axhal v0.1.0 (current)\n       Built [   2.155s] (current)\n     Parsing axhal v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axhal-0_1_0-dcf14c8627d21651/target/riscv64gc-unknown-none-elf/doc/axhal.json\n","// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:34:02.03371962 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking aarch64-cpu v9.4.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n","// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:34:10.624696641 +08:00:00\n    Building axhal v0.1.0 (current)\n       Built [   3.523s] (current)\n     Parsing axhal v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axhal-0_1_0-dcf14c8627d21651/target/x86_64-unknown-none/doc/axhal.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:07:53.670688277 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nbitflags        2.6.0    2.8.0   2.8.0   Normal  ---\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nraw-cpuid       11.2.0   11.3.0  11.3.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.11.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:07:41.868850031 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nbitflags        2.6.0    2.8.0   2.8.0   Normal  ---\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nraw-cpuid       11.2.0   11.3.0  11.3.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.11.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:07:29.868294334 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nbitflags        2.6.0    2.8.0   2.8.0   Normal  ---\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nraw-cpuid       11.2.0   11.3.0  11.3.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.11.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:07:18.029137441 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nbitflags        2.6.0    2.8.0   2.8.0   Normal  ---\nlog             0.4.21   0.4.25  0.4.25  Normal  ---\nraw-cpuid       11.2.0   11.3.0  11.3.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.11.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:34:10.621532121 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\n       Built [   2.155s] (current)\n     Parsing axhal v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axhal-0_1_0-dcf14c8627d21651/target/riscv64gc-unknown-none-elf/doc/axhal.json\n","pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:34:02.03080206 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.9.0\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v2.0.96\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling svgbobdoc v0.3.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n","pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:34:06.739032416 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking aarch64-cpu v9.4.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n","pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:34:15.935838469 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\n       Built [   3.523s] (current)\n     Parsing axhal v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axhal-0_1_0-dcf14c8627d21651/target/x86_64-unknown-none/doc/axhal.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axlog","count":20,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axlog, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:42.715076183 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axlog, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:42.88042791 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axlog, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:42.544411801 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axlog, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:42.373123943 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axlog, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:48:45.009917683 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:48:51|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlog, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:48:51.238243425 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking cfg-if v1.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:48:57|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlog, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:48:57.404075342 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:49:02|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlog, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:49:02.908222538 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking raw-cpuid v10.7.0\n    Checking bit_field v0.10.2\n   Compiling unicode-ident v1.0.14\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:49:09|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:34:57.20637626 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n    Checking tock-registers v0.9.0\n   Compiling indexmap v2.7.1\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling num-traits v0.2.19\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:35:04.845771634 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.38\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:35:02.259070525 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking aarch64-cpu v10.0.0\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:35:05.988126847 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking bit_field v0.10.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking raw-cpuid v10.7.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling num-traits v0.2.19\n   Compiling syn v2.0.96\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:09:29.27970126 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nchrono  0.4.38   0.4.39  0.4.39  Normal  ---\nlog     0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:09:17.691181866 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nchrono  0.4.38   0.4.39  0.4.39  Normal  ---\nlog     0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:09:05.854859368 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nchrono  0.4.38   0.4.39  0.4.39  Normal  ---\nlog     0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:08:54.53309189 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nchrono  0.4.38   0.4.39  0.4.39  Normal  ---\nlog     0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:35:05.985137373 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.38\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:35:02.255472454 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n    Checking tock-registers v0.9.0\n   Compiling indexmap v2.7.1\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling num-traits v0.2.19\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:35:04.841362282 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking aarch64-cpu v10.0.0\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:35:09.21914428 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\n   Compiling x86 v0.52.0\n    Checking bitflags v1.3.2\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking bit_field v0.10.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking raw-cpuid v10.7.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling num-traits v0.2.19\n   Compiling syn v2.0.96\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axmem","count":20,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:43.864387854 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling virtio-drivers v0.7.4\n   Compiling driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling rand_core v0.6.4\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling nb v1.1.0\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:45.111586559 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:43.610621349 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling nb v1.1.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling void v1.0.2\n   Compiling riscv v0.10.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling nb v0.1.3\n   Compiling zero v0.1.3\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:43.047649474 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling nb v1.1.0\n   Compiling rand v0.8.5\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling nb v0.1.3\n   Compiling driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axmem, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:49:09.246345886 +08:00:00\n    Checking log v0.4.21\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:49:17|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axmem, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:49:17.084358473 +08:00:00\n    Checking log v0.4.21\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:49:24|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axmem, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:49:24.889123855 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking const-default v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:49:32|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axmem, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:49:32.708066145 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n    Checking bit_field v0.10.2\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:49:40|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:35:09.224318447 +08:00:00\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.15\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking scopeguard v1.2.0\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking aarch64-cpu v9.4.0\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking const-default v1.0.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking rlsf v0.2.1\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking fdt v0.1.5\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking nb v1.1.0\n    Checking rand_core v0.6.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking nb v0.1.3\n   Compiling riscv v0.10.1\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n","// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:35:26.776014613 +08:00:00\n    Building axmem v0.1.0 (current)\n       Built [   3.264s] (current)\n     Parsing axmem v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axmem-0_1_0-1c1f5e5a9e077b23/target/riscv64gc-unknown-none-elf/doc/axmem.json\n","// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:35:21.01356672 +08:00:00\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking byteorder v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking zerocopy v0.7.35\n    Checking nb v1.1.0\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking nb v0.1.3\n    Checking zero v0.1.3\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking xmas-elf v0.9.1\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n","// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:35:32.685037678 +08:00:00\n    Building axmem v0.1.0 (current)\n       Built [   5.028s] (current)\n     Parsing axmem v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axmem-0_1_0-1c1f5e5a9e077b23/target/x86_64-unknown-none/doc/axmem.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:10:17.116293453 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nlog    0.4.21   0.4.25  0.4.25  Normal  ---\nriscv  0.10.1   ---     0.12.1  Normal  ---\n","pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:10:05.250168599 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nlog    0.4.21   0.4.25  0.4.25  Normal  ---\nriscv  0.10.1   ---     0.12.1  Normal  ---\n","pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:09:53.456891499 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nlog    0.4.21   0.4.25  0.4.25  Normal  ---\nriscv  0.10.1   ---     0.12.1  Normal  ---\n","pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:09:41.672618567 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nlog    0.4.21   0.4.25  0.4.25  Normal  ---\nriscv  0.10.1   ---     0.12.1  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:35:32.682246754 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\n       Built [   3.264s] (current)\n     Parsing axmem v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axmem-0_1_0-1c1f5e5a9e077b23/target/riscv64gc-unknown-none-elf/doc/axmem.json\n","pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:35:21.006478172 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.15\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n    Checking scopeguard v1.2.0\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking aarch64-cpu v9.4.0\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking const-default v1.0.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking rlsf v0.2.1\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking fdt v0.1.5\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n   Compiling zerocopy-derive v0.7.35\n    Checking byteorder v1.5.0\n   Compiling enumn v0.1.14\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking nb v1.1.0\n    Checking rand_core v0.6.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking nb v0.1.3\n   Compiling riscv v0.10.1\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n","pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:35:26.770099868 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking byteorder v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking zerocopy v0.7.35\n    Checking nb v1.1.0\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking virtio-drivers v0.7.5\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking nb v0.1.3\n    Checking zero v0.1.3\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking xmas-elf v0.9.1\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n","pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axmem\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:35:40.222482676 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\n       Built [   5.028s] (current)\n     Parsing axmem v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axmem-0_1_0-1c1f5e5a9e077b23/target/x86_64-unknown-none/doc/axmem.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axsignal","count":20,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:52.263140039 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:52.436213101 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:52.083641108 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:51.905177279 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:51:12.546440491 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:51:19|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsignal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:51:19.445950519 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:51:26|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsignal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:51:26.140397943 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling riscv v0.11.1\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:51:33|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsignal, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:51:33.320632768 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:51:41|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:37:17.39452985 +08:00:00\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.96\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.25\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.8.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n","// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:37:28.864194526 +08:00:00\n    Building axsignal v0.1.0 (current)\n       Built [   1.918s] (current)\n     Parsing axsignal v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axsignal-0_1_0-5f34a8e9237717c9/target/riscv64gc-unknown-none-elf/doc/axsignal.json\n","// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:37:25.083968627 +08:00:00\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking log v0.4.25\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.8.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n","// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:37:32.072978273 +08:00:00\n    Building axsignal v0.1.0 (current)\n       Built [   3.242s] (current)\n     Parsing axsignal v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axsignal-0_1_0-5f34a8e9237717c9/target/x86_64-unknown-none/doc/axsignal.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axsignal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:13:26.525086989 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\n","pkg=axsignal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:13:14.789629744 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\n","pkg=axsignal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:13:03.233605723 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\n","pkg=axsignal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:12:51.54706001 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  2.6.0    2.8.0   2.8.0   Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:37:32.066793563 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\n       Built [   1.918s] (current)\n     Parsing axsignal v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axsignal-0_1_0-5f34a8e9237717c9/target/riscv64gc-unknown-none-elf/doc/axsignal.json\n","pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:37:25.078610219 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.96\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.25\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.8.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n","pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:37:28.852664792 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking log v0.4.25\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.8.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n","pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsignal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:37:36.893238682 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\n       Built [   3.242s] (current)\n     Parsing axsignal v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axsignal-0_1_0-5f34a8e9237717c9/target/x86_64-unknown-none/doc/axsignal.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axtask","count":20,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:42:01.232613489 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:42:01.40523079 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:42:01.054636815 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:42:00.87647894 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axtask, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:53:11.297475806 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:53:18|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtask, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:53:18.214798092 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:53:25|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtask, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:53:25.071309105 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking critical-section v1.2.0\n    Checking fdt v0.1.5\n    Checking bitflags v2.6.0\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:53:31|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtask, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:53:31.973391806 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:53:39|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:38:31.185017397 +08:00:00\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking log v0.4.25\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling autocfg v1.4.0\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n","// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:38:45.911483363 +08:00:00\n    Building axtask v0.1.0 (current)\n       Built [   2.366s] (current)\n     Parsing axtask v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axtask-0_1_0-0a7fd5c74320049a/target/riscv64gc-unknown-none-elf/doc/axtask.json\n","// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:38:41.203474873 +08:00:00\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking aarch64-cpu v9.4.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n","// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:38:50.5200887 +08:00:00\n    Building axtask v0.1.0 (current)\n       Built [   3.721s] (current)\n     Parsing axtask v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axtask-0_1_0-0a7fd5c74320049a/target/x86_64-unknown-none/doc/axtask.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:16:37.930905322 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:16:26.095219916 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:16:14.21070462 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n","pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:16:02.417627904 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.25  0.4.25  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:38:50.517146294 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\n       Built [   2.366s] (current)\n     Parsing axtask v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axtask-0_1_0-0a7fd5c74320049a/target/riscv64gc-unknown-none-elf/doc/axtask.json\n","pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:38:41.200406655 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking log v0.4.25\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n   Compiling autocfg v1.4.0\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking tock-registers v0.8.1\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n","pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:38:45.908477798 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n    Checking static_assertions v1.1.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking aarch64-cpu v9.4.0\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n","pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:38:56.284366424 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\n       Built [   3.721s] (current)\n     Parsing axtask v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axtask-0_1_0-0a7fd5c74320049a/target/x86_64-unknown-none/doc/axtask.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axstd","count":17,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:58.184104477 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling embedded-hal v0.2.7\n   Compiling riscv v0.10.1\n   Compiling sbi-spec v0.0.4\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot)\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:58.426142379 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:58.001055579 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:57.81259666 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot)\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axstd, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:52:12.888831468 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:52:20|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstd, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:52:20.021497368 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:52:27|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstd, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:52:27.122335424 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking critical-section v1.2.0\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking embedded-hal v0.2.7\n    Checking bit_field v0.10.2\n    Checking sbi-spec v0.0.4\n    Checking sbi-rt v0.0.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:52:34|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstd, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:52:34.519439884 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.15.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:52:42|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:37:53.570920439 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling toml_datetime v0.6.8\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:38:01.778503102 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling serde v1.0.217\n   Compiling proc-macro2 v1.0.93\n   Compiling toml_edit v0.22.22\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling unicode-ident v1.0.15\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:37:57.344916553 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling indexmap v2.7.1\n   Compiling serde v1.0.217\n   Compiling proc-macro2 v1.0.93\n   Compiling winnow v0.6.24\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:38:06.683526772 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling autocfg v1.4.0\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:38:06.677375419 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling serde v1.0.217\n   Compiling proc-macro2 v1.0.93\n   Compiling toml_edit v0.22.22\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling unicode-ident v1.0.15\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:37:57.339363921 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling toml_datetime v0.6.8\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:38:01.772837169 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling indexmap v2.7.1\n   Compiling serde v1.0.217\n   Compiling proc-macro2 v1.0.93\n   Compiling winnow v0.6.24\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:38:10.307600904 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling autocfg v1.4.0\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"]}},{"file":"modules/axtrap/src/arch/riscv/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arceos_api","count":16,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:10.312084313 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling tock-registers v0.8.1\n   Compiling spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling riscv v0.11.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:10.534799981 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling spin v0.9.8\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:09.657959412 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling spin v0.9.8\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling lazy_static v1.5.0\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:09.187525853 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling spin v0.9.8\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling fdt v0.1.5\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:43:06.120546792 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:43:13|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:43:13.027116771 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:43:20|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:43:20.053981401 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking bitflags v2.6.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:43:27|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_api, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:43:27.116674966 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking log v0.4.21\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:43:34|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:29:31.440751849 +08:00:00\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n   Compiling syn v1.0.109\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling svgbobdoc v0.3.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking rlsf v0.2.1\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling zerocopy-derive v0.7.35\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling enumn v0.1.14\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking zerocopy v0.7.35\n    Checking stable_deref_trait v1.2.0\n    Checking rand v0.8.5\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n","// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:29:50.129995869 +08:00:00\n    Building arceos_api v0.1.0 (current)\n       Built [   3.804s] (current)\n     Parsing arceos_api v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-arceos_api-0_1_0-b2477b8ed093a142/target/riscv64gc-unknown-none-elf/doc/arceos_api.json\n","// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:29:44.054292079 +08:00:00\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking virtio-drivers v0.7.5\n    Checking rand_core v0.6.4\n    Checking stable_deref_trait v1.2.0\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking managed v0.8.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n","// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:29:56.815445571 +08:00:00\n    Building arceos_api v0.1.0 (current)\n       Built [   5.687s] (current)\n     Parsing arceos_api v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-arceos_api-0_1_0-b2477b8ed093a142/target/x86_64-unknown-none/doc/arceos_api.json\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:29:56.813306342 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\n       Built [   3.804s] (current)\n     Parsing arceos_api v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-arceos_api-0_1_0-b2477b8ed093a142/target/riscv64gc-unknown-none-elf/doc/arceos_api.json\n","pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:29:44.051726454 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.217\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking tock-registers v0.9.0\n   Compiling syn v1.0.109\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling svgbobdoc v0.3.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking rlsf v0.2.1\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling zerocopy-derive v0.7.35\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling enumn v0.1.14\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking rand_core v0.6.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking zerocopy v0.7.35\n    Checking stable_deref_trait v1.2.0\n    Checking rand v0.8.5\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n","pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:29:50.127635026 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking tock-registers v0.9.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking virtio-drivers v0.7.5\n    Checking rand_core v0.6.4\n    Checking stable_deref_trait v1.2.0\n    Checking rand v0.8.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking managed v0.8.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n","pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/arceos_api\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:30:05.398980549 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\n       Built [   5.687s] (current)\n     Parsing arceos_api v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-arceos_api-0_1_0-b2477b8ed093a142/target/x86_64-unknown-none/doc/arceos_api.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axfeat","count":16,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:28.844442763 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:29.045182019 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.14.12\n   Compiling x86_64 v0.15.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:28.66571869 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:28.465391967 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:46:14.655457799 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:46:21|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfeat, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:46:21.657965824 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:46:28|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfeat, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:46:28.673904883 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n   Compiling riscv v0.11.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:46:35|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfeat, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:46:35.81440449 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:46:43|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:32:36.004389712 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling serde v1.0.217\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:32:44.453852969 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling toml_datetime v0.6.8\n   Compiling quote v1.0.38\n   Compiling serde v1.0.217\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:32:39.957811893 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling serde v1.0.217\n   Compiling indexmap v2.7.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling winnow v0.6.24\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:32:49.514168031 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking bitflags v2.8.0\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:32:49.511451556 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling toml_datetime v0.6.8\n   Compiling quote v1.0.38\n   Compiling serde v1.0.217\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:32:39.955200773 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling serde v1.0.217\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:32:44.451348419 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling serde v1.0.217\n   Compiling indexmap v2.7.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling winnow v0.6.24\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:32:54.637977376 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n    Checking bitflags v2.8.0\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axruntime","count":16,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:50.770219818 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:50.94477302 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:50.590967073 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:50.413646499 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:50:43.680844719 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:50:50|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axruntime, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:50:50.63183801 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:50:57|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axruntime, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:50:57.65581848 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.11.1\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking bitflags v2.6.0\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:51:04|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axruntime, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:51:04.560074891 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.7.0\n   Compiling proc-macro2 v1.0.92\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:51:12|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:36:47.580374655 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking byteorder v1.5.0\n   Compiling svgbobdoc v0.3.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking rlsf v0.2.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling enumn v0.1.14\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:37:04.936365892 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking rlsf v0.2.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling riscv v0.11.1\n    Checking byteorder v1.5.0\n    Checking critical-section v1.2.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axruntime-0_1_0-19388cf34775fb41/target/debug/build/axdriver-8f6fd504e718c874/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"pci\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:36:59.215814225 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axruntime-0_1_0-19388cf34775fb41/target/debug/build/axdriver-8f6fd504e718c874/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"pci\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:37:09.776978603 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling rustversion v1.0.19\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking x86_64 v0.15.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.14.13\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking raw-cpuid v11.3.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking x2apic v0.4.3\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axruntime-0_1_0-19388cf34775fb41/target/debug/build/axdriver-8f6fd504e718c874/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"pci\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:37:09.77400106 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking rlsf v0.2.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling riscv v0.11.1\n    Checking byteorder v1.5.0\n    Checking critical-section v1.2.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axruntime-0_1_0-19388cf34775fb41/target/debug/build/axdriver-8f6fd504e718c874/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"pci\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:36:59.212709206 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.15\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.96\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.9.0\n    Checking aarch64-cpu v10.0.0\n   Compiling syn v1.0.109\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling base64 v0.13.1\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking byteorder v1.5.0\n   Compiling svgbobdoc v0.3.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking rlsf v0.2.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling zerocopy-derive v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling enumn v0.1.14\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:37:04.932985279 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking aarch64-cpu v9.4.0\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axruntime-0_1_0-19388cf34775fb41/target/debug/build/axdriver-8f6fd504e718c874/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"pci\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:37:17.385975412 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling rustversion v1.0.19\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n   Compiling paste v1.0.15\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking lazy_static v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking x86_64 v0.15.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n    Checking x86_64 v0.14.13\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axalloc)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking raw-cpuid v11.3.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking x2apic v0.4.3\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\nerror: failed to run custom build command for `axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axruntime-0_1_0-19388cf34775fb41/target/debug/build/axdriver-8f6fd504e718c874/build-script-build` (exit status: 101)\n  --- stdout\n  cargo:rustc-cfg=bus=\"pci\"\n\n  --- stderr\n\n  thread 'main' panicked at /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver/build.rs:34:49:\n  called `Result::unwrap()` on an `Err` value: NotPresent\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axstarry","count":16,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axstarry, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:55.236178099 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling void v1.0.2\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axstarry, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:56.186819056 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling virtio-drivers v0.7.4\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axstarry, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:54.331389634 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling once_cell v1.20.2\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling xmas-elf v0.9.1\n   Compiling embedded-hal v0.2.7\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=axstarry, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:53.368425614 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axstarry, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:51:41.297433233 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking byteorder v1.5.0\n    Checking const-default v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:51:49|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstarry, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:51:49.121966112 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:51:56|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstarry, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:51:56.944714361 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:52:04|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstarry, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:52:04.945900527 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:52:12|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:37:36.896370912 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling unicode-ident v1.0.15\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:37:44.485945191 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling indexmap v2.7.1\n   Compiling winnow v0.6.24\n   Compiling quote v1.0.38\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:37:41.045071757 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:37:48.776027753 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n   Compiling toml_edit v0.22.22\n   Compiling serde v1.0.217\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:37:48.769983721 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling indexmap v2.7.1\n   Compiling winnow v0.6.24\n   Compiling quote v1.0.38\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:37:41.03921041 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling unicode-ident v1.0.15\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:37:44.480477778 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.25\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:37:53.564667611 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n   Compiling toml_edit v0.22.22\n   Compiling serde v1.0.217\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axsync","count":16,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:41:59.725452527 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:41:59.900944366 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:41:59.547159349 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n","// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:41:59.367489123 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=axsync, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:52:42.591803843 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:52:49|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsync, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:52:49.516046764 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:52:56|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsync, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:52:56.393924664 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.11.1\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking critical-section v1.2.0\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:53:03|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsync, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:53:03.314804772 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.7.0\n   Compiling proc-macro2 v1.0.92\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:53:11|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:38:10.310720259 +08:00:00\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.96\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.8.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n","// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:38:22.22704204 +08:00:00\n    Building axsync v0.1.0 (current)\n       Built [   2.096s] (current)\n     Parsing axsync v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axsync-0_1_0-99e768b6bc008528/target/riscv64gc-unknown-none-elf/doc/axsync.json\n","// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:38:18.024700653 +08:00:00\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.9.0\n    Checking log v0.4.25\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking bitflags v2.8.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking lazy_static v1.5.0\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n","// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:38:25.867088569 +08:00:00\n    Building axsync v0.1.0 (current)\n       Built [   3.485s] (current)\n     Parsing axsync v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axsync-0_1_0-99e768b6bc008528/target/x86_64-unknown-none/doc/axsync.json\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:38:25.86368333 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\n       Built [   2.096s] (current)\n     Parsing axsync v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axsync-0_1_0-99e768b6bc008528/target/riscv64gc-unknown-none-elf/doc/axsync.json\n","pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:38:18.021852145 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n    Checking tock-registers v0.8.1\n    Checking tock-registers v0.9.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking aarch64-cpu v10.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.96\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.8.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n","pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:38:22.223946987 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\n    Checking cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking tock-registers v0.9.0\n    Checking log v0.4.25\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v10.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking bitflags v2.8.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n    Checking lazy_static v1.5.0\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\nerror: queries overflow the depth limit!\n  |\n  = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`arm_gic`)\n  = note: query depth increased by 130 when simplifying constant for the type system `registers::gicv3_regs::_`\n\n    Checking axlog v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axlog)\nerror: could not compile `arm_gic` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n","pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axsync\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:38:31.181863778 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\n       Built [   3.485s] (current)\n     Parsing axsync v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axsync-0_1_0-99e768b6bc008528/target/x86_64-unknown-none/doc/axsync.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"axconfig","count":12,"raw_reports":[{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:31:42.419912005 +08:00:00\n    Building axconfig v0.1.0 (current)\n       Built [   0.210s] (current)\n     Parsing axconfig v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axconfig-0_1_0-01666ec060466c14/target/aarch64-unknown-none-softfloat/doc/axconfig.json\n","// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-01-27 1:31:43.658029276 +08:00:00\n    Building axconfig v0.1.0 (current)\n       Built [   0.208s] (current)\n     Parsing axconfig v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axconfig-0_1_0-01666ec060466c14/target/x86_64-unknown-none/doc/axconfig.json\n","// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:31:43.064080441 +08:00:00\n    Building axconfig v0.1.0 (current)\n       Built [   0.200s] (current)\n     Parsing axconfig v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axconfig-0_1_0-01666ec060466c14/target/riscv64gc-unknown-none-elf/doc/axconfig.json\n","// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-01-27 1:31:38.747444077 +08:00:00\n    Building axconfig v0.1.0 (current)\n       Built [   3.245s] (current)\n     Parsing axconfig v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axconfig-0_1_0-01666ec060466c14/target/aarch64-unknown-none/doc/axconfig.json\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:02:30.449868866 +08:00:00\n\nName   Project  Compat   Latest   Kind   Platform\n----   -------  ------   ------   ----   --------\nserde  1.0.215  1.0.217  1.0.217  Build  ---\n","pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:02:42.179974888 +08:00:00\n\nName   Project  Compat   Latest   Kind   Platform\n----   -------  ------   ------   ----   --------\nserde  1.0.215  1.0.217  1.0.217  Build  ---\n","pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:02:54.430538764 +08:00:00\n\nName   Project  Compat   Latest   Kind   Platform\n----   -------  ------   ------   ----   --------\nserde  1.0.215  1.0.217  1.0.217  Build  ---\n","pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:03:06.282836763 +08:00:00\n\nName   Project  Compat   Latest   Kind   Platform\n----   -------  ------   ------   ----   --------\nserde  1.0.215  1.0.217  1.0.217  Build  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-01-27 1:31:43.655859261 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\n       Built [   0.200s] (current)\n     Parsing axconfig v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axconfig-0_1_0-01666ec060466c14/target/riscv64gc-unknown-none-elf/doc/axconfig.json\n","pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-01-27 1:31:43.061812155 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\n       Built [   0.210s] (current)\n     Parsing axconfig v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axconfig-0_1_0-01666ec060466c14/target/aarch64-unknown-none-softfloat/doc/axconfig.json\n","pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-01-27 1:31:42.417451404 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\n       Built [   3.245s] (current)\n     Parsing axconfig v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axconfig-0_1_0-01666ec060466c14/target/aarch64-unknown-none/doc/axconfig.json\n","pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-01-27 1:31:44.258725008 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\n       Built [   0.208s] (current)\n     Parsing axconfig v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_4/Starry-OS/Starry-Old/target/semver-checks/local-axconfig-0_1_0-01666ec060466c14/target/x86_64-unknown-none/doc/axconfig.json\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arceos-bwbench","count":9,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=arceos-bwbench, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:40:50.903719308 +08:00:00\n   Compiling log v0.4.21\n   Compiling cfg-if v1.0.0\n   Compiling tock-registers v0.8.1\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling aarch64-cpu v9.4.0\n   Compiling bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling svgbobdoc v0.3.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling bit_field v0.10.2\n   Compiling spin v0.9.8\n   Compiling const-default v1.0.0\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling fdt v0.1.5\n   Compiling rlsf v0.2.1\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n   Compiling arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling either v1.13.0\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling zerocopy-derive v0.7.35\n   Compiling heapless v0.8.0\n   Compiling driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling hash32 v0.3.1\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n   Compiling stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=arceos-bwbench, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:40:42.156310259 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n   Compiling log v0.4.21\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling tock-registers v0.8.1\n   Compiling syn v2.0.90\n   Compiling aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v2.6.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling base64 v0.13.1\n   Compiling const-default v1.0.0\n   Compiling bit_field v0.10.2\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling lazy_static v1.5.0\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=arceos-bwbench, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:40:56.534066282 +08:00:00\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.21\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v1.3.2\n   Compiling bitflags v2.6.0\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.18\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling volatile v0.4.6\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling paste v1.0.15\n   Compiling spin v0.9.8\n   Compiling const-default v1.0.0\n   Compiling tock-registers v0.8.1\n   Compiling rlsf v0.2.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling x86_64 v0.15.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n   Compiling byteorder v1.5.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling x86_64 v0.14.12\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `x86_64` (lib) due to 2 previous errors\n","// pkg_name=arceos-bwbench, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:40:56.059918731 +08:00:00\n   Compiling log v0.4.21\n   Compiling cfg-if v1.0.0\n   Compiling static_assertions v1.1.0\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n   Compiling scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling bitflags v2.6.0\n   Compiling bit_field v0.10.2\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling const-default v1.0.0\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=arceos-bwbench, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:42:17.1041022 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:42:24|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos-bwbench, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:42:32.544169171 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling svgbobdoc v0.3.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:42:40|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos-bwbench, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:42:40.480454767 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking bitflags v2.6.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling base64 v0.13.1\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:42:48|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos-bwbench, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:42:24.768598452 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking const-default v1.0.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:42:32|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"modules/axtrap/src/arch/riscv/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"mingo","count":8,"raw_reports":[{"file":"src/main.rs","count":3,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n","error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n","error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat  --no-deps\n// timestamp=2025-01-27 1:29:28.823385977 +08:00:00\n Downloading crates ...\n  Downloaded aarch64-cpu v9.0.0\n   Compiling mingo v0.6.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/raspi4/chainloader)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:42:11.949661821 +08:00:00\n   Compiling tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/raspi4/chainloader)\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n   --> src/main.rs:110:12\n    |\n110 | #![feature(asm_const)]\n    |            ^^^^^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n   --> src/main.rs:112:12\n    |\n112 | #![feature(panic_info_message)]\n    |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap_or` found for struct `core::panic::PanicMessage` in the current scope\n  --> src/panic_wait.rs:60:24\n   |\n60 |         info.message().unwrap_or(&format_args!(\"\")),\n   |                        ^^^^^^^^^ method not found in `PanicMessage<'_>`\n\nSome errors have detailed explanations: E0425, E0433, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 3 warnings\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 3 warnings emitted\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:54:44.545463876 +08:00:00\n   Compiling mingo v0.6.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/raspi4/chainloader)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n   --> src/main.rs:110:12\n    |\n110 | #![feature(asm_const)]\n    |            ^^^^^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n   --> src/main.rs:112:12\n    |\n112 | #![feature(panic_info_message)]\n    |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap_or` found for struct `core::panic::PanicMessage` in the current scope\n  --> src/panic_wait.rs:60:24\n   |\n60 |         info.message().unwrap_or(&format_args!(\"\")),\n   |                        ^^^^^^^^^ method not found in `PanicMessage<'_>`\n\nSome errors have detailed explanations: E0425, E0433, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 3 warnings\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 3 warnings emitted\n17:54:46|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=mingo, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/raspi4/chainloader\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 2:18:14.314074112 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.0.0    9.4.0   10.0.0  Normal  cfg(target_arch = \"aarch64\")\ntock-registers  0.8.1    ---     0.9.0   Normal  ---\n"]}},{"file":"src/cpu.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"monolithic_userboot","count":8,"raw_reports":[{"file":"(virtual) lockbud","count":4,"kinds":{"Cargo":["// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:42:14.170262342 +08:00:00\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling hashbrown v0.11.2\n   Compiling num_enum_derive v0.5.11\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/arch_boot)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:42:13.614966652 +08:00:00\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:43Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axdriver)\n   Compiling riscv v0.10.1\n   Compiling xmas-elf v0.9.1\n   Compiling ahash v0.7.8\n   Compiling embedded-hal v0.2.7\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n","// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:42:15.472952724 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling x86_64 v0.15.1\n   Compiling x86_64 v0.14.12\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n","// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:42:14.961464882 +08:00:00\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:40:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n   Compiling hashbrown v0.11.2\n   Compiling managed v0.8.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":4,"kinds":{"Cargo":["// pkg_name=monolithic_userboot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none \n// timestamp=2025-01-27 1:54:46.097570461 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking byteorder v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:54:53|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=monolithic_userboot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-01-27 1:55:02.132938927 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:55:09|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=monolithic_userboot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-01-27 1:55:09.796593454 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.18\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:55:17|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=monolithic_userboot, checker=Rapx\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-01-27 1:54:54.008461738 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking byteorder v1.5.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:55:02|RAP|ERROR|: Finished with non-zero exit code.\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arceos-tls","count":5,"raw_reports":[{"file":"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs","count":1,"kinds":{"Mirai":["error[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~\n\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs","count":1,"kinds":{"Mirai":["error[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\n               found signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~\n\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos-tls, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/task/tls\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 1:41:05.616344816 +08:00:00\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling lock_api v0.4.12\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling raw-cpuid v10.7.0\n   Compiling bitflags v2.6.0\n   Compiling scopeguard v1.2.0\n   Compiling cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling static_assertions v1.1.0\n   Compiling log v0.4.21\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling volatile v0.4.6\n[2025-01-26T17:41:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T17:41:06Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling tock-registers v0.8.1\n   Compiling spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axhal)\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_static v1.5.0\n   Compiling paste v1.0.15\n   Compiling x86_64 v0.14.12\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/addr.rs:382:51\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n382 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n   Compiling x86_64 v0.15.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.12/src/structures/paging/page.rs:282:51\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n282 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/addr.rs:362:51\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n362 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page.rs:294:51\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n294 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.1/src/structures/paging/page_table.rs:349:51\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page_table::PageTableIndex, &structures::paging::page_table::PageTableIndex) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n349 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `x86_64` (lib) due to 3 previous errors\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=arceos-tls, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/task/tls\n// cmd=cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 1:40:25.211057764 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rapx","count":1,"kinds":{"Cargo":["// pkg_name=arceos-tls, checker=Rapx\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/task/tls\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 1:42:57.106442614 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n17:43:05|RAP|ERROR|: Finished with non-zero exit code.\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"bwbench-client","count":2,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=bwbench-client, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/bwbench_client\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-01-27 1:29:13.62459848 +08:00:00\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.169\n    Checking iana-time-zone v0.1.61\n   Compiling num-traits v0.2.19\n    Checking chrono v0.4.39\n    Checking bwbench-client v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/tools/bwbench_client)\nerror: could not compile `bwbench-client` (bin \"bwbench-client\") due to 2 previous errors\n"]}},{"file":"src/device.rs","count":1,"kinds":{"Clippy(Error)":["error: the loop variable `i` is used to index `mac_addr`\n  --> src/device.rs:80:22\n   |\n80 |             for i in 0..6 {\n   |                      ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nnote: the lint level is defined here\n  --> src/main.rs:3:9\n   |\n3  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`\nhelp: consider using an iterator and enumerate()\n   |\n80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {\n   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arceos-display","count":1,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=arceos-display, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/display\n// cmd=cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 1:40:15.108335939 +08:00:00\n   Compiling autocfg v1.4.0\n   Compiling az v1.2.1\n    Checking byteorder v1.5.0\n    Checking micromath v2.1.0\n   Compiling num-traits v0.2.19\n    Checking embedded-graphics-core v0.4.0\n    Checking float-cmp v0.9.0\n    Checking embedded-graphics v0.8.1\n    Checking arceos-display v0.1.0 (/home/runner/check/batch_4/Starry-OS/Starry-Old/apps/display)\nerror: could not compile `arceos-display` (bin \"arceos-display\")\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.cargo/bin/cargo-mirai /home/runner/.rustup/toolchains/nightly-2025-01-04-x86_64-unknown-linux-gnu/bin/rustc --crate-name arceos_display --edition=2021 apps/display/src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values(\"axstd\"))' -C metadata=a21f4324b9f9ee9f -C extra-filename=-4cac0fe192a30614 --out-dir /home/runner/check/batch_4/Starry-OS/Starry-Old/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -L dependency=/home/runner/check/batch_4/Starry-OS/Starry-Old/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/runner/check/batch_4/Starry-OS/Starry-Old/target/debug/deps --extern embedded_graphics=/home/runner/check/batch_4/Starry-OS/Starry-Old/target/x86_64-unknown-linux-gnu/debug/deps/libembedded_graphics-3a03747bef027f51.rmeta --cfg mirai -Z always_encode_mir` (exit status: 1)\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arceos-exception","count":1,"raw_reports":[{"file":"apps/exception/src/main.rs","count":1,"kinds":{"Mirai":["warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> apps/exception/src/main.rs:13:9\n   |\n13 |         asm!(\"int3\");\n   |         ^^^^^^^^^^^^\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-Old","pkg":"arceos-priority","count":1,"raw_reports":[{"file":"apps/task/priority/src/main.rs","count":1,"kinds":{"Mirai":["warning: unexpected `cfg` condition value: `arceos`\n  --> apps/task/priority/src/main.rs:12:30\n   |\n12 | #[cfg(any(feature = \"axstd\", target_os = \"arceos\"))]\n   |                              ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `target_os` are: `aix`, `android`, `cuda`, `dragonfly`, `emscripten`, `espidf`, `freebsd`, `fuchsia`, `haiku`, `hermit`, `horizon`, `hurd`, `illumos`, `ios`, `l4re`, `linux`, `macos`, `netbsd`, `none`, `nto`, `nuttx`, `openbsd`, `psp`, `psx`, `redox`, `rtems`, `solaris`, `solid_asp3`, `teeos`, `trusty`, `tvos`, `uefi`, `unknown`, `visionos`, and `vita` and 6 more\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rapx","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}