{"repo":{"user":"Starry-OS","repo":"Starry-New"},"data":[{"user":"Starry-OS","repo":"Starry-New","pkg":"linux_syscall_api","count":30,"raw_reports":[{"file":"modules/axhal/src/platform/mod.rs","count":5,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `irq` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `irq` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/gic.rs","count":3,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_IRQ` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:12:57\n   |\n12 | pub const UART_IRQ_NUM: usize = translate_irq(axconfig::UART_IRQ, InterruptType::SPI).unwrap();\n   |                                                         ^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `GICD_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:14:54\n   |\n14 | const GICD_BASE: PhysAddr = PhysAddr::from(axconfig::GICD_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `GICC_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:15:54\n   |\n15 | const GICC_BASE: PhysAddr = PhysAddr::from(axconfig::GICC_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":3,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_irq` in module `crate::platform::console`\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:42:31\n   |\n42 |     crate::platform::console::init_irq();\n   |                               ^^^^^^^^ not found in `crate::platform::console`\n\n","error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:39:22\n   |\n39 |     crate::platform::irq::init_primary();\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":3,"kinds":{"Clippy(Error)":["error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/time.rs:12:26\n   |\n12 | pub use crate::platform::irq::TIMER_IRQ_NUM;\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:14:26\n   |\n14 | pub use crate::platform::time::set_oneshot_timer;\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n","error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/irq.rs","count":2,"kinds":{"Clippy(Error)":["error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:5:22\n   |\n5  | use crate::platform::irq::MAX_IRQ_COUNT;\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:7:26\n   |\n7  | pub use crate::platform::irq::{dispatch_irq, register_handler, set_enable};\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/generic_timer.rs","count":2,"kinds":{"Clippy(Error)":["error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:26\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:59\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                                                           ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\nerror: could not compile `axhal` (lib) due to 19 previous errors; 7 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling num_enum v0.5.11\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_IRQ` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:12:57\n   |\n12 | pub const UART_IRQ_NUM: usize = translate_irq(axconfig::UART_IRQ, InterruptType::SPI).unwrap();\n   |                                                         ^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `GICD_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:14:54\n   |\n14 | const GICD_BASE: PhysAddr = PhysAddr::from(axconfig::GICD_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `GICC_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:15:54\n   |\n15 | const GICC_BASE: PhysAddr = PhysAddr::from(axconfig::GICC_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find function `init_irq` in module `crate::platform::console`\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:42:31\n   |\n42 |     crate::platform::console::init_irq();\n   |                               ^^^^^^^^ not found in `crate::platform::console`\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/time.rs:12:26\n   |\n12 | pub use crate::platform::irq::TIMER_IRQ_NUM;\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:14:26\n   |\n14 | pub use crate::platform::time::set_oneshot_timer;\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:5:22\n   |\n5  | use crate::platform::irq::MAX_IRQ_COUNT;\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:7:26\n   |\n7  | pub use crate::platform::irq::{dispatch_irq, register_handler, set_enable};\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:26\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:59\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                                                           ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:39:22\n   |\n39 |     crate::platform::irq::init_primary();\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `irq` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `irq` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 8 warnings\nerror: could not compile `axhal` (lib) due to 18 previous errors; 8 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\ncmd=cargo outdated -R --exit-code=2\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axstarry","count":29,"raw_reports":[{"file":"modules/axhal/src/platform/mod.rs","count":5,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `irq` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `irq` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/gic.rs","count":3,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_IRQ` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:12:57\n   |\n12 | pub const UART_IRQ_NUM: usize = translate_irq(axconfig::UART_IRQ, InterruptType::SPI).unwrap();\n   |                                                         ^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `GICD_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:14:54\n   |\n14 | const GICD_BASE: PhysAddr = PhysAddr::from(axconfig::GICD_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `GICC_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:15:54\n   |\n15 | const GICC_BASE: PhysAddr = PhysAddr::from(axconfig::GICC_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":3,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_irq` in module `crate::platform::console`\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:42:31\n   |\n42 |     crate::platform::console::init_irq();\n   |                               ^^^^^^^^ not found in `crate::platform::console`\n\n","error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:39:22\n   |\n39 |     crate::platform::irq::init_primary();\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":3,"kinds":{"Clippy(Error)":["error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/time.rs:12:26\n   |\n12 | pub use crate::platform::irq::TIMER_IRQ_NUM;\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:14:26\n   |\n14 | pub use crate::platform::time::set_oneshot_timer;\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n","error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/irq.rs","count":2,"kinds":{"Clippy(Error)":["error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:5:22\n   |\n5  | use crate::platform::irq::MAX_IRQ_COUNT;\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:7:26\n   |\n7  | pub use crate::platform::irq::{dispatch_irq, register_handler, set_enable};\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/generic_timer.rs","count":2,"kinds":{"Clippy(Error)":["error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:26\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:59\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                                                           ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axstarry, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n    Checking num_enum v0.5.11\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot)\nerror: could not compile `axhal` (lib) due to 19 previous errors; 7 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axstarry, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling num_enum_derive v0.5.11\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_IRQ` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:12:57\n   |\n12 | pub const UART_IRQ_NUM: usize = translate_irq(axconfig::UART_IRQ, InterruptType::SPI).unwrap();\n   |                                                         ^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `GICD_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:14:54\n   |\n14 | const GICD_BASE: PhysAddr = PhysAddr::from(axconfig::GICD_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `GICC_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:15:54\n   |\n15 | const GICC_BASE: PhysAddr = PhysAddr::from(axconfig::GICC_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find function `init_irq` in module `crate::platform::console`\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:42:31\n   |\n42 |     crate::platform::console::init_irq();\n   |                               ^^^^^^^^ not found in `crate::platform::console`\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/time.rs:12:26\n   |\n12 | pub use crate::platform::irq::TIMER_IRQ_NUM;\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:14:26\n   |\n14 | pub use crate::platform::time::set_oneshot_timer;\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:5:22\n   |\n5  | use crate::platform::irq::MAX_IRQ_COUNT;\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:7:26\n   |\n7  | pub use crate::platform::irq::{dispatch_irq, register_handler, set_enable};\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:26\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:59\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                                                           ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:39:22\n   |\n39 |     crate::platform::irq::init_primary();\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `irq` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `irq` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 8 warnings\nerror: could not compile `axhal` (lib) due to 18 previous errors; 8 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"monolithic_userboot","count":29,"raw_reports":[{"file":"modules/axhal/src/platform/mod.rs","count":5,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `irq` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `irq` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/gic.rs","count":3,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `UART_IRQ` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:12:57\n   |\n12 | pub const UART_IRQ_NUM: usize = translate_irq(axconfig::UART_IRQ, InterruptType::SPI).unwrap();\n   |                                                         ^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `GICD_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:14:54\n   |\n14 | const GICD_BASE: PhysAddr = PhysAddr::from(axconfig::GICD_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `GICC_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:15:54\n   |\n15 | const GICC_BASE: PhysAddr = PhysAddr::from(axconfig::GICC_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":3,"kinds":{"Clippy(Error)":["error[E0425]: cannot find function `init_irq` in module `crate::platform::console`\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:42:31\n   |\n42 |     crate::platform::console::init_irq();\n   |                               ^^^^^^^^ not found in `crate::platform::console`\n\n","error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:39:22\n   |\n39 |     crate::platform::irq::init_primary();\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":3,"kinds":{"Clippy(Error)":["error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/time.rs:12:26\n   |\n12 | pub use crate::platform::irq::TIMER_IRQ_NUM;\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:14:26\n   |\n14 | pub use crate::platform::time::set_oneshot_timer;\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n","error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/irq.rs","count":2,"kinds":{"Clippy(Error)":["error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:5:22\n   |\n5  | use crate::platform::irq::MAX_IRQ_COUNT;\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:7:26\n   |\n7  | pub use crate::platform::irq::{dispatch_irq, register_handler, set_enable};\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/generic_timer.rs","count":2,"kinds":{"Clippy(Error)":["error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:26\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n","error[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:59\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                                                           ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=monolithic_userboot, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/monolithic_userboot\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 19 previous errors; 7 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_IRQ` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:12:57\n   |\n12 | pub const UART_IRQ_NUM: usize = translate_irq(axconfig::UART_IRQ, InterruptType::SPI).unwrap();\n   |                                                         ^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `GICD_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:14:54\n   |\n14 | const GICD_BASE: PhysAddr = PhysAddr::from(axconfig::GICD_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `GICC_PADDR` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/gic.rs:15:54\n   |\n15 | const GICC_BASE: PhysAddr = PhysAddr::from(axconfig::GICC_PADDR);\n   |                                                      ^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find function `init_irq` in module `crate::platform::console`\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:42:31\n   |\n42 |     crate::platform::console::init_irq();\n   |                               ^^^^^^^^ not found in `crate::platform::console`\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/time.rs:12:26\n   |\n12 | pub use crate::platform::irq::TIMER_IRQ_NUM;\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:14:26\n   |\n14 | pub use crate::platform::time::set_oneshot_timer;\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:5:22\n   |\n5  | use crate::platform::irq::MAX_IRQ_COUNT;\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/irq.rs:7:26\n   |\n7  | pub use crate::platform::irq::{dispatch_irq, register_handler, set_enable};\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:26\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                          ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/generic_timer.rs:58:59\n   |\n58 |         crate::platform::irq::set_enable(crate::platform::irq::TIMER_IRQ_NUM, true);\n   |                                                           ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `irq` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:39:22\n   |\n39 |     crate::platform::irq::init_primary();\n   |                      ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `irq` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\nnote: `irq` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `irq` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `irq` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `irq` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 8 warnings\nerror: could not compile `axhal` (lib) due to 18 previous errors; 8 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axdisplay","count":25,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/lib.rs","count":2,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> /home/runner/.cargo/git/checkouts/axhal-cd2e1a2a36fd7a63/769caa8/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#769caa8b)\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\nerror: could not compile `axhal` (lib) due to 8 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling virtio-drivers v0.7.4\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n   Compiling driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#769caa8b)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\ncmd=cargo outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axnet","count":19,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axnet, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\ncmd=cargo outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"src/smoltcp_impl/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arceos_posix_api","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n   Compiling syn v2.0.77\n   Compiling glob v0.3.1\n   Compiling rustix v0.38.36\n   Compiling prettyplease v0.2.22\n   Compiling libc v0.2.158\n   Compiling bitflags v2.6.0\n   Compiling clang-sys v1.8.1\n   Compiling regex-syntax v0.8.4\n   Compiling minimal-lexical v0.2.1\n   Compiling linux-raw-sys v0.4.14\n   Compiling memchr v2.7.4\n   Compiling cfg-if v1.0.0\n   Compiling either v1.13.0\n   Compiling nom v7.1.3\n   Compiling regex-automata v0.4.7\n   Compiling libloading v0.8.5\n   Compiling home v0.5.9\n   Compiling bindgen v0.69.4\n   Compiling which v4.4.2\n   Compiling regex v1.10.6\n   Compiling cexpr v0.6.0\n   Compiling itertools v0.12.1\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling shlex v1.3.0\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling lazycell v1.3.0\n   Compiling rustc-hash v1.1.0\n   Compiling log v0.4.21\n   Compiling lazy_static v1.5.0\n    Checking bitmaps v3.2.1\n    Checking percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n[2024-11-26T09:51:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:51:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-26T09:51:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:51:56Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling arceos_posix_api v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api)\n   Compiling bitmaps v3.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-26T09:51:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:51:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-26T09:51:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:51:56Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\ncmd=cargo outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.4   0.69.5  0.70.1  Build  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arch_boot","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\ncmd=cargo outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nraw-cpuid       11.1.0   11.2.0  11.2.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.14.12  ---     0.15.1  Normal  cfg(target_arch = \"x86_64\")\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axdriver","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axdriver, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\ncmd=cargo outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axfs","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axfs, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#077ab12e)\n   Compiling capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\ncmd=cargo outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axfutex","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axfutex, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling ahash v0.7.8\n    Checking once_cell v1.19.0\n    Checking hashbrown v0.11.2\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfutex, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling ahash v0.7.8\n   Compiling once_cell v1.19.0\n   Compiling axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling hashbrown v0.11.2\n   Compiling kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n   Compiling spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\ncmd=cargo outdated -R --exit-code=2\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nhashbrown  0.11.2   ---     0.15.2  Normal  ---\nlog        0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axhal","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axhal, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\ncmd=cargo outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nraw-cpuid       11.1.0   11.2.0  11.2.0  Normal  cfg(target_arch = \"x86_64\")\nriscv           0.11.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axlibc","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axlibc, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/axlibc\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n    Checking fdt v0.1.5\n    Checking lock_api v0.4.12\n    Checking axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking spin v0.9.8\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking lazy_static v1.5.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#01ec54f2)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#ae6dc829)\n    Checking axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitmaps v3.2.1\n   Compiling arceos_posix_api v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axlibc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/tools/axlibc)\n    Checking flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#9aedb126)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/axlibc\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling tock-registers v0.8.1\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.21\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling aarch64-cpu v9.4.0\n   Compiling scopeguard v1.2.0\n   Compiling static_assertions v1.1.0\n[2024-11-26T09:52:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:52:19Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling lock_api v0.4.12\n   Compiling bitflags v2.6.0\n   Compiling fdt v0.1.5\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n   Compiling lazy_static v1.5.0\n   Compiling dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#ae6dc829)\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling either v1.13.0\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#01ec54f2)\n[2024-11-26T09:51:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:51:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-26T09:51:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:51:56Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling bitmaps v3.2.1\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling arceos_posix_api v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api)\n   Compiling axlibc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/tools/axlibc)\n   Compiling flatten_objects v0.1.0 (https://github.com/Starry-OS/flatten_objects.git#ac43d74f)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#9aedb126)\n   Compiling spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:52:19Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:52:19Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-26T09:51:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:51:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-26T09:51:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:51:56Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/axlibc\ncmd=cargo outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.4   0.69.5  0.70.1  Build  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axmem","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axmem, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n    Checking nb v1.1.0\n    Checking void v1.0.2\n    Checking zero v0.1.3\n   Compiling riscv v0.10.1\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking xmas-elf v0.9.1\n    Checking embedded-hal v0.2.7\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axmem, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling zero v0.1.3\n   Compiling nb v0.1.3\n   Compiling riscv v0.10.1\n   Compiling critical-section v1.1.3\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling embedded-hal v0.2.7\n   Compiling xmas-elf v0.9.1\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\ncmd=cargo outdated -R --exit-code=2\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nlog    0.4.21   0.4.22  0.4.22  Normal  ---\nriscv  0.10.1   ---     0.12.1  Normal  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axprocess","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\ncmd=cargo outdated -R --exit-code=2\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nriscv  0.10.1   ---     0.12.1  Normal  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axtask","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axtask, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\ncmd=cargo outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axtrap","count":18,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axtrap, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axtrap, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\ncmd=cargo outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\n"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arceos-bwbench","count":17,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=arceos-bwbench, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/net/bwbench\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bit_field v0.10.2\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking fdt v0.1.5\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#ae6dc829)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking zerocopy v0.7.35\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling heapless v0.8.0\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n    Checking hash32 v0.3.1\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#01ec54f2)\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot)\n    Checking virtio-drivers v0.7.4\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#9aedb126)\n    Checking driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos-bwbench, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n   Compiling indexmap v2.5.0\n   Compiling quote v1.0.37\n   Compiling log v0.4.21\n   Compiling tock-registers v0.8.1\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling syn v2.0.77\n   Compiling aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.20\n   Compiling autocfg v1.3.0\n   Compiling lock_api v0.4.12\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling bitflags v2.6.0\n   Compiling scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling static_assertions v1.1.0\n   Compiling spin v0.9.8\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.13\n   Compiling bit_field v0.10.2\n   Compiling const-default v1.0.0\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling lazy_static v1.5.0\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling fdt v0.1.5\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n   Compiling spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#ae6dc829)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#9aedb126)\n   Compiling axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n   Compiling arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n   Compiling either v1.13.0\n   Compiling ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling zerocopy-derive v0.7.35\n   Compiling driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling heapless v0.8.0\n   Compiling svgbobdoc v0.3.0\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling hash32 v0.3.1\n   Compiling axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\n   Compiling linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#01ec54f2)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n   Compiling rlsf v0.2.1\n   Compiling managed v0.8.0\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axalloc v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc)\n   Compiling bitflags v1.3.2\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling arch_boot v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\n   Compiling zerocopy v0.7.35\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arceos_api","count":17,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axfeat","count":17,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axruntime","count":17,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axsignal","count":17,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axstd","count":17,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"],"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axstd, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axsync","count":17,"raw_reports":[{"file":"modules/axhal/src/lib.rs","count":4,"kinds":{"Clippy(Error)":["error[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\n","error[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\n"],"Clippy(Warn)":["warning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}},{"file":"modules/axhal/src/platform/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\n","warning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/psci.rs","count":2,"kinds":{"Clippy(Error)":["error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n","error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"]}},{"file":"/home/runner/check/batch_1/Starry-OS/Starry-New/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (230 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── defmt-macros 0.3.9\n    └── defmt 0.3.8\n        ├── smoltcp 0.11.0\n        │   └── axnet 0.1.0\n        │       ├── linux_syscall_api 0.1.0\n        │       │   ├── axtrap 0.1.0\n        │       │   │   └── arch_boot 0.1.0\n        │       │   │       ├── axstd 0.1.0\n        │       │   │       │   ├── arceos-yield 0.1.0\n        │       │   │       │   ├── arceos-udpserver 0.1.0\n        │       │   │       │   ├── arceos-tls 0.1.0\n        │       │   │       │   ├── arceos-sleep 0.1.0\n        │       │   │       │   ├── arceos-shell 0.1.0\n        │       │   │       │   ├── arceos-priority 0.1.0\n        │       │   │       │   ├── arceos-parallel 0.1.0\n        │       │   │       │   ├── arceos-memtest 0.1.0\n        │       │   │       │   ├── arceos-httpserver 0.1.0\n        │       │   │       │   ├── arceos-httpclient 0.1.0\n        │       │   │       │   ├── arceos-helloworld 0.1.0\n        │       │   │       │   ├── arceos-exception 0.1.0\n        │       │   │       │   ├── arceos-echoserver 0.1.0\n        │       │   │       │   ├── arceos-display 0.1.0\n        │       │   │       │   └── arceos-bwbench 0.1.0\n        │       │   │       ├── axstarry 0.1.0\n        │       │   │       │   └── monolithic_userboot 0.1.0\n        │       │   │       └── axlibc 0.1.0\n        │       │   ├── axstarry 0.1.0\n        │       │   └── arch_boot 0.1.0\n        │       ├── axruntime 0.1.0\n        │       │   ├── linux_syscall_api 0.1.0\n        │       │   ├── axfeat 0.1.0\n        │       │   │   ├── linux_syscall_api 0.1.0\n        │       │   │   ├── axstd 0.1.0\n        │       │   │   ├── axstarry 0.1.0\n        │       │   │   ├── axlibc 0.1.0\n        │       │   │   ├── arceos_posix_api 0.1.0\n        │       │   │   │   └── axlibc 0.1.0\n        │       │   │   └── arceos_api 0.1.0\n        │       │   │       └── axstd 0.1.0\n        │       │   ├── arch_boot 0.1.0\n        │       │   ├── arceos_posix_api 0.1.0\n        │       │   └── arceos_api 0.1.0\n        │       ├── axfeat 0.1.0\n        │       ├── arceos_posix_api 0.1.0\n        │       ├── arceos_api 0.1.0\n        │       └── arceos-bwbench 0.1.0\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    │       ├── axruntime 0.1.0\n                    │       ├── axnet 0.1.0\n                    │       ├── axfs 0.1.0\n                    │       │   ├── linux_syscall_api 0.1.0\n                    │       │   ├── axstarry 0.1.0\n                    │       │   ├── axruntime 0.1.0\n                    │       │   ├── axprocess 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   ├── axnet 0.1.0\n                    │       │   │   └── axfeat 0.1.0\n                    │       │   ├── axmem 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   ├── axruntime 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfutex 0.1.0\n                    │       │   │   ├── linux_syscall_api 0.1.0\n                    │       │   │   └── axprocess 0.1.0\n                    │       │   ├── axfeat 0.1.0\n                    │       │   ├── arceos_posix_api 0.1.0\n                    │       │   └── arceos_api 0.1.0\n                    │       ├── axfeat 0.1.0\n                    │       └── axdisplay 0.1.0\n                    │           ├── axruntime 0.1.0\n                    │           ├── axfeat 0.1.0\n                    │           └── arceos_api 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.3\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.3\n├── riscv 0.11.1\n│   ├── axhal 0.1.0\n│   │   ├── axtask 0.1.0\n│   │   │   └── axsync 0.1.0\n│   │   │       ├── axdisplay 0.1.0\n│   │   │       │   ├── axruntime 0.1.0\n│   │   │       │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axtrap 0.1.0\n│   │   │       │   │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   │   │       ├── axstd 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-yield 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-udpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-tls 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-sleep 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-shell 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-priority 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-parallel 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-memtest 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-httpclient 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-helloworld 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-exception 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-echoserver 0.1.0\n│   │   │       │   │   │   │       │   ├── arceos-display 0.1.0\n│   │   │       │   │   │   │       │   └── arceos-bwbench 0.1.0\n│   │   │       │   │   │   │       ├── axstarry 0.1.0\n│   │   │       │   │   │   │       │   └── monolithic_userboot 0.1.0\n│   │   │       │   │   │   │       └── axlibc 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   └── arch_boot 0.1.0\n│   │   │       │   │   ├── axfeat 0.1.0\n│   │   │       │   │   │   ├── linux_syscall_api 0.1.0\n│   │   │       │   │   │   ├── axstd 0.1.0\n│   │   │       │   │   │   ├── axstarry 0.1.0\n│   │   │       │   │   │   ├── axlibc 0.1.0\n│   │   │       │   │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   │   │   └── axlibc 0.1.0\n│   │   │       │   │   │   └── arceos_api 0.1.0\n│   │   │       │   │   │       └── axstd 0.1.0\n│   │   │       │   │   ├── arch_boot 0.1.0\n│   │   │       │   │   ├── arceos_posix_api 0.1.0\n│   │   │       │   │   └── arceos_api 0.1.0\n│   │   │       │   ├── axfeat 0.1.0\n│   │   │       │   └── arceos_api 0.1.0\n│   │   │       └── another_ext4 0.1.0\n│   │   │           └── axfs 0.1.0\n│   │   │               ├── linux_syscall_api 0.1.0\n│   │   │               ├── axstarry 0.1.0\n│   │   │               ├── axruntime 0.1.0\n│   │   │               ├── axprocess 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   ├── axnet 0.1.0\n│   │   │               │   │   ├── linux_syscall_api 0.1.0\n│   │   │               │   │   ├── axruntime 0.1.0\n│   │   │               │   │   ├── axfeat 0.1.0\n│   │   │               │   │   ├── arceos_posix_api 0.1.0\n│   │   │               │   │   ├── arceos_api 0.1.0\n│   │   │               │   │   └── arceos-bwbench 0.1.0\n│   │   │               │   └── axfeat 0.1.0\n│   │   │               ├── axmem 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   ├── axruntime 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfutex 0.1.0\n│   │   │               │   ├── linux_syscall_api 0.1.0\n│   │   │               │   └── axprocess 0.1.0\n│   │   │               ├── axfeat 0.1.0\n│   │   │               ├── arceos_posix_api 0.1.0\n│   │   │               └── arceos_api 0.1.0\n│   │   ├── axsync 0.1.0\n│   │   └── axsignal 0.1.0\n│   │       └── axtask 0.1.0\n│   └── axhal 0.1.0\n│       ├── linux_syscall_api 0.1.0\n│       ├── axtrap 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtrap 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── linux_syscall_api 0.1.0\n│       │   │   ├── axsync 0.1.0\n│       │   │   ├── axprocess 0.1.0\n│       │   │   ├── axnet 0.1.0\n│       │   │   ├── axmem 0.1.0\n│       │   │   ├── axfutex 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_posix_api 0.1.0\n│       │   ├── axstarry 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axprocess 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfutex 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   ├── arceos_posix_api 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axsync 0.1.0\n│       ├── axsignal 0.1.0\n│       │   ├── linux_syscall_api 0.1.0\n│       │   ├── axtask 0.1.0\n│       │   └── axprocess 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axprocess 0.1.0\n│       ├── axnet 0.1.0\n│       ├── axmem 0.1.0\n│       ├── axfutex 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axnet 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── axdisplay 0.1.0\n│       ├── arch_boot 0.1.0\n│       ├── arceos_posix_api 0.1.0\n│       ├── arceos_api 0.1.0\n│       └── arceos-tls 0.1.0\n├── riscv 0.10.1\n│   ├── axtrap 0.1.0\n│   ├── axprocess 0.1.0\n│   ├── axmem 0.1.0\n│   └── arch_boot 0.1.0\n└── atomic-polyfill 1.0.3\n    └── heapless 0.7.17\n        └── smoltcp 0.10.0\n            └── ixgbe-driver 0.1.0\n                └── driver_net 0.1.0\n                    ├── driver_virtio 0.1.0\n                    │   └── axdriver 0.1.0\n                    ├── axnet 0.1.0\n                    └── axdriver 0.1.0\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 230\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"syn\",\n              \"version\": \"1.0.109\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"f64009896348fc5af4222e9cf7d7d82a95a256c634ebcf61c53e4ea461422242\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axsync, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `axhal` (lib) due to 8 previous errors; 6 warnings emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `platform_init` is ambiguous\n  --> modules/axhal/src/lib.rs:75:25\n   |\n75 | pub use self::platform::platform_init;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_init` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\nnote: `platform_init` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_init` to disambiguate\n\nerror[E0659]: `platform_name` is ambiguous\n  --> modules/axhal/src/lib.rs:76:25\n   |\n76 | pub use self::platform::platform_name;\n   |                         ^^^^^^^^^^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `platform_name` could refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\nnote: `platform_name` could also refer to the function imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `platform_name` to disambiguate\n\nerror[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\nerror[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `time` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `time` in the type namespace is also re-exported here\n   |\n   = note: `#[warn(ambiguous_glob_reexports)]` on by default\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_init` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_init` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `platform_name` in the value namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `platform_name` in the value namespace is also re-exported here\n\nwarning: ambiguous glob re-exports\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^ the name `mem` in the type namespace is first re-exported here\n...\n31 |         pub use self::dummy::*;\n   |                 -------------- but the name `mem` in the type namespace is also re-exported here\n\nwarning: unused import: `self::platform::platform_init`\n  --> modules/axhal/src/lib.rs:75:9\n   |\n75 | pub use self::platform::platform_init;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::platform::platform_name`\n  --> modules/axhal/src/lib.rs:76:9\n   |\n76 | pub use self::platform::platform_name;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n  --> modules/axhal/src/lib.rs:28:12\n   |\n28 | #![feature(asm_const)]\n   |            ^^^^^^^^^\n   |\n   = note: `#[warn(stable_features)]` on by default\n\nSome errors have detailed explanations: E0425, E0659.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `axhal` (lib) generated 7 warnings\nerror: could not compile `axhal` (lib) due to 7 previous errors; 7 warnings emitted\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axhal/src/mem.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `mem` is ambiguous\n  --> modules/axhal/src/mem.rs:75:51\n   |\n75 |     kernel_image_regions().chain(crate::platform::mem::platform_regions())\n   |                                                   ^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `mem` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\nnote: `mem` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `mem` to disambiguate\n\n"]}},{"file":"modules/axhal/src/platform/aarch64_common/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/platform/aarch64_common/mod.rs:40:22\n   |\n40 |     crate::platform::time::init_percpu();\n   |                      ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}},{"file":"modules/axhal/src/time.rs","count":1,"kinds":{"Clippy(Error)":["error[E0659]: `time` is ambiguous\n  --> modules/axhal/src/time.rs:15:26\n   |\n15 | pub use crate::platform::time::{current_ticks, nanos_to_ticks, ticks_to_nanos};\n   |                          ^^^^ ambiguous name\n   |\n   = note: ambiguous because of multiple glob imports of a name in the same module\nnote: `time` could refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:6:17\n   |\n6  |         pub use self::aarch64_common::*;\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\nnote: `time` could also refer to the module imported here\n  --> modules/axhal/src/platform/mod.rs:31:17\n   |\n31 |         pub use self::dummy::*;\n   |                 ^^^^^^^^^^^^^^\n   = help: consider adding an explicit import of `time` to disambiguate\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"mingo","count":7,"raw_reports":[{"file":"src/main.rs","count":3,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n","error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n","error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader)\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader)\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n   --> src/main.rs:110:12\n    |\n110 | #![feature(asm_const)]\n    |            ^^^^^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n   --> src/main.rs:112:12\n    |\n112 | #![feature(panic_info_message)]\n    |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap_or` found for struct `core::panic::PanicMessage` in the current scope\n  --> src/panic_wait.rs:60:24\n   |\n60 |         info.message().unwrap_or(&format_args!(\"\")),\n   |                        ^^^^^^^^^ method not found in `PanicMessage<'_>`\n\nSome errors have detailed explanations: E0425, E0433, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 3 warnings\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 3 warnings emitted\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=mingo, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader\ncmd=cargo outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.0.0    9.4.0   10.0.0  Normal  cfg(target_arch = \"aarch64\")\ntock-registers  0.8.1    ---     0.9.0   Normal  ---\n"]}},{"file":"src/cpu.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axalloc","count":2,"raw_reports":[{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:50:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:50:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\ncmd=cargo outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axconfig","count":1,"raw_reports":[{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\ncmd=cargo outdated -R --exit-code=2\n\nName       Project  Compat   Latest   Kind   Platform\n----       -------  ------   ------   ----   --------\nserde      1.0.210  1.0.215  1.0.215  Build  ---\ntoml_edit  0.22.20  0.22.22  0.22.22  Build  ---\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}