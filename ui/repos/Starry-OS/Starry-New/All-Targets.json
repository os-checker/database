{"repo":{"user":"Starry-OS","repo":"Starry-New"},"data":[{"user":"Starry-OS","repo":"Starry-New","pkg":"linux_syscall_api","count":88,"raw_reports":[{"file":"api/linux_syscall_api/src/syscall_task/mod.rs","count":30,"kinds":{"Clippy(Warn)":["warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:74:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n74 |         GET_MEMPOLICY => Ok(0),\n   |         ^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:75:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n75 |         CLOCK_GETRES => syscall_clock_getres(args),\n   |         ^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:76:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n76 |         CLOCK_NANOSLEEP => syscall_clock_nanosleep(args),\n   |         ^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:77:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n77 |         PRCTL => syscall_prctl(args),\n   |         ^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:78:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n78 |         PIDFD_SEND_SIGNAL => syscall_pidfd_send_signal(args),\n   |         ^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SCHED_GET_PRORITY_MAX`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MAX`\n\n","warning: unused variable: `SCHED_GET_PRORITY_MIN`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MIN`\n\n","warning: variable `SCHED_GET_PRORITY_MAX` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_max`\n\n","warning: variable `SCHED_GET_PRORITY_MIN` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_min`\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:74:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n74 |         GET_MEMPOLICY => Ok(0),\n   |         ^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:75:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n75 |         CLOCK_GETRES => syscall_clock_getres(args),\n   |         ^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:76:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n76 |         CLOCK_NANOSLEEP => syscall_clock_nanosleep(args),\n   |         ^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:77:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n77 |         PRCTL => syscall_prctl(args),\n   |         ^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:78:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n78 |         PIDFD_SEND_SIGNAL => syscall_pidfd_send_signal(args),\n   |         ^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SCHED_GET_PRORITY_MAX`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MAX`\n\n","warning: unused variable: `SCHED_GET_PRORITY_MIN`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MIN`\n\n","warning: variable `SCHED_GET_PRORITY_MAX` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_max`\n\n","warning: variable `SCHED_GET_PRORITY_MIN` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_min`\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:74:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n74 |         GET_MEMPOLICY => Ok(0),\n   |         ^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:75:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n75 |         CLOCK_GETRES => syscall_clock_getres(args),\n   |         ^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:76:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n76 |         CLOCK_NANOSLEEP => syscall_clock_nanosleep(args),\n   |         ^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:77:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n77 |         PRCTL => syscall_prctl(args),\n   |         ^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:78:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n78 |         PIDFD_SEND_SIGNAL => syscall_pidfd_send_signal(args),\n   |         ^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SCHED_GET_PRORITY_MAX`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MAX`\n\n","warning: unused variable: `SCHED_GET_PRORITY_MIN`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MIN`\n\n","warning: variable `SCHED_GET_PRORITY_MAX` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_max`\n\n","warning: variable `SCHED_GET_PRORITY_MIN` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_min`\n\n"]}},{"file":"api/linux_syscall_api/src/syscall_net/mod.rs","count":21,"kinds":{"Clippy(Warn)":["warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:28:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n28 |         SETSOCKOPT => syscall_set_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:30:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n30 |         GETSOCKOPT => syscall_get_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:31:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n31 |         SOCKETPAIR => syscall_socketpair(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:32:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n32 |         ACCEPT4 => syscall_accept4(args),\n   |         ^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:33:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n33 |         SHUTDOWN => syscall_shutdown(args),\n   |         ^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SENDMMSG`\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SENDMMSG`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: variable `SENDMMSG` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: convert the identifier to snake case: `sendmmsg`\n   |\n   = note: `#[warn(non_snake_case)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:28:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n28 |         SETSOCKOPT => syscall_set_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:30:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n30 |         GETSOCKOPT => syscall_get_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:31:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n31 |         SOCKETPAIR => syscall_socketpair(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:32:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n32 |         ACCEPT4 => syscall_accept4(args),\n   |         ^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:33:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n33 |         SHUTDOWN => syscall_shutdown(args),\n   |         ^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SENDMMSG`\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SENDMMSG`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: variable `SENDMMSG` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: convert the identifier to snake case: `sendmmsg`\n   |\n   = note: `#[warn(non_snake_case)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:28:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n28 |         SETSOCKOPT => syscall_set_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:30:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n30 |         GETSOCKOPT => syscall_get_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:31:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n31 |         SOCKETPAIR => syscall_socketpair(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:32:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n32 |         ACCEPT4 => syscall_accept4(args),\n   |         ^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:33:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n33 |         SHUTDOWN => syscall_shutdown(args),\n   |         ^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SENDMMSG`\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SENDMMSG`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: variable `SENDMMSG` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: convert the identifier to snake case: `sendmmsg`\n   |\n   = note: `#[warn(non_snake_case)]` on by default\n\n"]}},{"file":"api/linux_syscall_api/src/syscall_fs/imp/io.rs","count":9,"kinds":{"Clippy(Warn)":["warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:288:5\n    |\n288 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:327:5\n    |\n327 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/io.rs:365:5\n    |\n365 |     fd_table[new_fd] = fd_table[fd].clone();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"]}},{"file":"api/linux_syscall_api/src/syscall_fs/imp/ctl.rs","count":8,"kinds":{"Clippy(Warn)":["warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:377:13\n    |\n377 |             fd_table[new_fd] = fd_table[fd].clone();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n    = note: `#[warn(clippy::assigning_clones)]` on by default\n\n","warning: assigning the result of `Clone::clone()` may be inefficient\n   --> api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:413:17\n    |\n413 |                 fd_table[new_fd] = fd_table[fd].clone();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `clone_from()`: `fd_table[new_fd].clone_from(&fd_table[fd])`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assigning_clones\n\n"]}},{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:19:10.149915773 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling base64 v0.13.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:19:17|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=linux_syscall_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:19:17.876787809 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking const-default v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:19:25|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=linux_syscall_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:19:25.836336526 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling svgbobdoc v0.3.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:19:33|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=linux_syscall_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:19:33.778869284 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling indexmap v2.7.0\n   Compiling toml_datetime v0.6.8\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.18\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling base64 v0.13.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:19:41|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 6:03:48.904694582 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 6:03:33.050524347 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:03:40.944194927 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","// pkg_name=linux_syscall_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:03:25.220810456 +08:00:00\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:18Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:18Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:46Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:46Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:22Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:22Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:50Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:50Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:31Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:31Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:58Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:58Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:27Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:27Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:54Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:54Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\n","pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\n","pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\n","pkg=linux_syscall_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nnum_enum  0.5.11   ---     0.7.3   Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n","pkg=linux_syscall_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building linux_syscall_api v0.1.0 (current)\nerror: running cargo-doc on crate 'linux_syscall_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate linux_syscall_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/linux_syscall_api --features default,fs,ip,irq,monolithic,multitask,net,paging &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate linux_syscall_api v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axstarry","count":67,"raw_reports":[{"file":"api/linux_syscall_api/src/syscall_task/mod.rs","count":30,"kinds":{"Clippy(Warn)":["warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:74:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n74 |         GET_MEMPOLICY => Ok(0),\n   |         ^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:75:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n75 |         CLOCK_GETRES => syscall_clock_getres(args),\n   |         ^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:76:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n76 |         CLOCK_NANOSLEEP => syscall_clock_nanosleep(args),\n   |         ^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:77:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n77 |         PRCTL => syscall_prctl(args),\n   |         ^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:78:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n78 |         PIDFD_SEND_SIGNAL => syscall_pidfd_send_signal(args),\n   |         ^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SCHED_GET_PRORITY_MAX`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MAX`\n\n","warning: unused variable: `SCHED_GET_PRORITY_MIN`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MIN`\n\n","warning: variable `SCHED_GET_PRORITY_MAX` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_max`\n\n","warning: variable `SCHED_GET_PRORITY_MIN` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_min`\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:74:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n74 |         GET_MEMPOLICY => Ok(0),\n   |         ^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:75:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n75 |         CLOCK_GETRES => syscall_clock_getres(args),\n   |         ^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:76:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n76 |         CLOCK_NANOSLEEP => syscall_clock_nanosleep(args),\n   |         ^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:77:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n77 |         PRCTL => syscall_prctl(args),\n   |         ^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:78:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n78 |         PIDFD_SEND_SIGNAL => syscall_pidfd_send_signal(args),\n   |         ^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SCHED_GET_PRORITY_MAX`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MAX`\n\n","warning: unused variable: `SCHED_GET_PRORITY_MIN`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MIN`\n\n","warning: variable `SCHED_GET_PRORITY_MAX` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_max`\n\n","warning: variable `SCHED_GET_PRORITY_MIN` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_min`\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:74:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n74 |         GET_MEMPOLICY => Ok(0),\n   |         ^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:75:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n75 |         CLOCK_GETRES => syscall_clock_getres(args),\n   |         ^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:76:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n76 |         CLOCK_NANOSLEEP => syscall_clock_nanosleep(args),\n   |         ^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:77:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n77 |         PRCTL => syscall_prctl(args),\n   |         ^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:78:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n78 |         PIDFD_SEND_SIGNAL => syscall_pidfd_send_signal(args),\n   |         ^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SCHED_GET_PRORITY_MAX`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MAX`\n\n","warning: unused variable: `SCHED_GET_PRORITY_MIN`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MIN`\n\n","warning: variable `SCHED_GET_PRORITY_MAX` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_max`\n\n","warning: variable `SCHED_GET_PRORITY_MIN` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_min`\n\n"]}},{"file":"api/linux_syscall_api/src/syscall_net/mod.rs","count":21,"kinds":{"Clippy(Warn)":["warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:28:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n28 |         SETSOCKOPT => syscall_set_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:30:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n30 |         GETSOCKOPT => syscall_get_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:31:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n31 |         SOCKETPAIR => syscall_socketpair(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:32:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n32 |         ACCEPT4 => syscall_accept4(args),\n   |         ^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:33:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n33 |         SHUTDOWN => syscall_shutdown(args),\n   |         ^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SENDMMSG`\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SENDMMSG`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: variable `SENDMMSG` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: convert the identifier to snake case: `sendmmsg`\n   |\n   = note: `#[warn(non_snake_case)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:28:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n28 |         SETSOCKOPT => syscall_set_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:30:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n30 |         GETSOCKOPT => syscall_get_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:31:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n31 |         SOCKETPAIR => syscall_socketpair(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:32:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n32 |         ACCEPT4 => syscall_accept4(args),\n   |         ^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:33:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n33 |         SHUTDOWN => syscall_shutdown(args),\n   |         ^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SENDMMSG`\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SENDMMSG`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: variable `SENDMMSG` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: convert the identifier to snake case: `sendmmsg`\n   |\n   = note: `#[warn(non_snake_case)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:28:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n28 |         SETSOCKOPT => syscall_set_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:30:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n30 |         GETSOCKOPT => syscall_get_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:31:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n31 |         SOCKETPAIR => syscall_socketpair(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:32:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n32 |         ACCEPT4 => syscall_accept4(args),\n   |         ^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:33:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n33 |         SHUTDOWN => syscall_shutdown(args),\n   |         ^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SENDMMSG`\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SENDMMSG`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: variable `SENDMMSG` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: convert the identifier to snake case: `sendmmsg`\n   |\n   = note: `#[warn(non_snake_case)]` on by default\n\n"]}},{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axstarry, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:16:35.685827043 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking byteorder v1.5.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:16:43|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstarry, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:16:43.662496683 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n    Checking const-default v1.0.0\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:16:51|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstarry, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:16:51.630679037 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking byteorder v1.5.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:16:59|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstarry, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:16:59.632731987 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling base64 v0.13.1\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:17:07|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 6:01:27.122442609 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:01:09.814459143 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:01:18.376369617 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","// pkg_name=axstarry, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 6:01:00.984374239 +08:00:00\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:18Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:18Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:21Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:21Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:22Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:22Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:25Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:31Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:31Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:34Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:34Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:27Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:27Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:30Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:30Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n","pkg=axstarry, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axstarry v0.1.0 (current)\nerror: running cargo-doc on crate 'axstarry' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstarry v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstarry --features alloc,another_ext4,bus-pci,default,devfs,display,e1000_net,ext4_rs,fatfs,fp_simd,fs,img,irq,ixgbe_net,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstarry v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"monolithic_userboot","count":59,"raw_reports":[{"file":"api/linux_syscall_api/src/syscall_task/mod.rs","count":30,"kinds":{"Clippy(Warn)":["warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:74:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n74 |         GET_MEMPOLICY => Ok(0),\n   |         ^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:75:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n75 |         CLOCK_GETRES => syscall_clock_getres(args),\n   |         ^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:76:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n76 |         CLOCK_NANOSLEEP => syscall_clock_nanosleep(args),\n   |         ^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:77:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n77 |         PRCTL => syscall_prctl(args),\n   |         ^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:78:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n78 |         PIDFD_SEND_SIGNAL => syscall_pidfd_send_signal(args),\n   |         ^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SCHED_GET_PRORITY_MAX`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MAX`\n\n","warning: unused variable: `SCHED_GET_PRORITY_MIN`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MIN`\n\n","warning: variable `SCHED_GET_PRORITY_MAX` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_max`\n\n","warning: variable `SCHED_GET_PRORITY_MIN` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_min`\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:74:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n74 |         GET_MEMPOLICY => Ok(0),\n   |         ^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:75:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n75 |         CLOCK_GETRES => syscall_clock_getres(args),\n   |         ^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:76:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n76 |         CLOCK_NANOSLEEP => syscall_clock_nanosleep(args),\n   |         ^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:77:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n77 |         PRCTL => syscall_prctl(args),\n   |         ^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:78:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n78 |         PIDFD_SEND_SIGNAL => syscall_pidfd_send_signal(args),\n   |         ^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SCHED_GET_PRORITY_MAX`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MAX`\n\n","warning: unused variable: `SCHED_GET_PRORITY_MIN`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MIN`\n\n","warning: variable `SCHED_GET_PRORITY_MAX` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_max`\n\n","warning: variable `SCHED_GET_PRORITY_MIN` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_min`\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:74:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n74 |         GET_MEMPOLICY => Ok(0),\n   |         ^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:75:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n75 |         CLOCK_GETRES => syscall_clock_getres(args),\n   |         ^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:76:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n76 |         CLOCK_NANOSLEEP => syscall_clock_nanosleep(args),\n   |         ^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:77:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n77 |         PRCTL => syscall_prctl(args),\n   |         ^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:78:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         --------------------- matches any value\n...\n78 |         PIDFD_SEND_SIGNAL => syscall_pidfd_send_signal(args),\n   |         ^^^^^^^^^^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SCHED_GET_PRORITY_MAX`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MAX`\n\n","warning: unused variable: `SCHED_GET_PRORITY_MIN`\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SCHED_GET_PRORITY_MIN`\n\n","warning: variable `SCHED_GET_PRORITY_MAX` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:72:9\n   |\n72 |         SCHED_GET_PRORITY_MAX => syscall_sched_getscheduler_max(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_max`\n\n","warning: variable `SCHED_GET_PRORITY_MIN` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_task/mod.rs:73:9\n   |\n73 |         SCHED_GET_PRORITY_MIN => syscall_sched_getscheduler_min(args),\n   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `sched_get_prority_min`\n\n"]}},{"file":"api/linux_syscall_api/src/syscall_net/mod.rs","count":21,"kinds":{"Clippy(Warn)":["warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:28:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n28 |         SETSOCKOPT => syscall_set_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:30:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n30 |         GETSOCKOPT => syscall_get_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:31:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n31 |         SOCKETPAIR => syscall_socketpair(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:32:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n32 |         ACCEPT4 => syscall_accept4(args),\n   |         ^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:33:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n33 |         SHUTDOWN => syscall_shutdown(args),\n   |         ^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SENDMMSG`\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SENDMMSG`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: variable `SENDMMSG` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: convert the identifier to snake case: `sendmmsg`\n   |\n   = note: `#[warn(non_snake_case)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:28:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n28 |         SETSOCKOPT => syscall_set_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:30:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n30 |         GETSOCKOPT => syscall_get_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:31:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n31 |         SOCKETPAIR => syscall_socketpair(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:32:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n32 |         ACCEPT4 => syscall_accept4(args),\n   |         ^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:33:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n33 |         SHUTDOWN => syscall_shutdown(args),\n   |         ^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SENDMMSG`\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SENDMMSG`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: variable `SENDMMSG` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: convert the identifier to snake case: `sendmmsg`\n   |\n   = note: `#[warn(non_snake_case)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:28:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n28 |         SETSOCKOPT => syscall_set_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n   |\n   = note: `#[warn(unreachable_patterns)]` on by default\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:30:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n30 |         GETSOCKOPT => syscall_get_sock_opt(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:31:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n31 |         SOCKETPAIR => syscall_socketpair(args),\n   |         ^^^^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:32:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n32 |         ACCEPT4 => syscall_accept4(args),\n   |         ^^^^^^^ unreachable pattern\n\n","warning: unreachable pattern\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:33:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         -------- matches any value\n...\n33 |         SHUTDOWN => syscall_shutdown(args),\n   |         ^^^^^^^^ unreachable pattern\n\n","warning: unused variable: `SENDMMSG`\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_SENDMMSG`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: variable `SENDMMSG` should have a snake case name\n  --> api/linux_syscall_api/src/syscall_net/mod.rs:27:9\n   |\n27 |         SENDMMSG => Ok(0),\n   |         ^^^^^^^^ help: convert the identifier to snake case: `sendmmsg`\n   |\n   = note: `#[warn(non_snake_case)]` on by default\n\n"]}},{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=monolithic_userboot, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:19:43.421208352 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n    Checking byteorder v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:19:51|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=monolithic_userboot, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:20:07.37154253 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:20:15|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=monolithic_userboot, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:19:59.215026848 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling svgbobdoc v0.3.0\n    Checking byteorder v1.5.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n    Checking const-default v1.0.0\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:20:07|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=monolithic_userboot, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:19:51.392937153 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:19:59|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:18Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:18Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:21Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:21Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:22Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:22Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:25Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:27Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:27Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:30Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:30Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:31Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:31Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-12-28T22:06:34Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:211:18: 211:90 (#0) after dropped at api/linux_syscall_api/src/syscall_fs/imp/ctl.rs:214:5: 214:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:06:34Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"deptool","count":47,"raw_reports":[{"file":"src/cmd_parser.rs","count":17,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:22\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                      ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:50\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                                                  ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/lib.rs","count":17,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/lib.rs:37:39\n   |\n37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);\n   |                                       ^^^^ help: change this to: `cfg`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/lib.rs:55:21\n   |\n55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"]}},{"file":"src/d2_generator.rs","count":4,"kinds":{"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/d2_generator.rs:8:34\n  |\n8 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:18:29\n   |\n18 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:34:32\n   |\n34 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"],"Unformatted":["file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"]}},{"file":"src/mermaid_generator.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"],"Clippy(Warn)":["warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/mermaid_generator.rs:6:34\n  |\n6 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:16:29\n   |\n16 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n","warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:32:32\n   |\n32 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"]}},{"file":"src/cmd_builder.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=deptool, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2024-12-29 6:03:23.359353031 +08:00:00\n    Building deptool v0.1.0 (current)\n       Built [   1.453s] (current)\n     Parsing deptool v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: deptool not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=deptool, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building deptool v0.1.0 (current)\n       Built [   1.453s] (current)\n     Parsing deptool v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: deptool not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"src/main.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Starry-OS/Starry-New/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axnet","count":40,"raw_reports":[{"file":"modules/axnet/src/smoltcp_impl/addr.rs","count":8,"kinds":{"Clippy(Warn)":["warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:13:65\n   |\n13 |         IpAddress::Ipv4(ipv4) => IpAddr::V4(unsafe { core::mem::transmute(ipv4.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 4], core::net::Ipv4Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n   = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n","warning: transmute used without annotations\n  --> modules/axnet/src/smoltcp_impl/addr.rs:14:65\n   |\n14 |         IpAddress::Ipv6(ipv6) => IpAddr::V6(unsafe { core::mem::transmute(ipv6.0) }),\n   |                                                                 ^^^^^^^^^ help: consider adding missing annotations: `transmute::<[u8; 16], core::net::Ipv6Addr>`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"]}},{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axnet, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:14:34.879490226 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling lock_api v0.4.12\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling heapless v0.8.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking hash32 v0.3.1\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=8bf9a9a#8bf9a9a6)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:14:42|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axnet, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:14:42.438484067 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling lock_api v0.4.12\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling heapless v0.8.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking hash32 v0.3.1\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:14:50|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axnet, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:14:50.178957662 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking byteorder v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling heapless v0.8.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking hash32 v0.3.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:14:57|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axnet, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:14:57.744339117 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n    Checking bitflags v2.6.0\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.18\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:15:05|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:59:35.380795935 +08:00:00\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n","// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:59:19.628307748 +08:00:00\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n","// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:59:27.704340085 +08:00:00\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n","// pkg_name=axnet, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:59:11.866357264 +08:00:00\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:08Z WARN  lockbud::callbacks] [\n      {\n        \"ConflictLock\": {\n          \"bug_kind\": \"ConflictLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": [\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"modules/axnet/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            },\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"modules/axnet/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            }\n          ],\n          \"explanation\": \"Locks mutually wait for each other to form a cycle\"\n        }\n      }\n    ]\n[2024-12-28T22:06:08Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 1 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:06:10Z WARN  lockbud::callbacks] [\n      {\n        \"ConflictLock\": {\n          \"bug_kind\": \"ConflictLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": [\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"modules/axnet/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            },\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"modules/axnet/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            }\n          ],\n          \"explanation\": \"Locks mutually wait for each other to form a cycle\"\n        }\n      }\n    ]\n[2024-12-28T22:06:10Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 1 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axnet, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n","pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n","pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n","pkg=axnet, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axnet v0.1.0 (current)\nerror: running cargo-doc on crate 'axnet' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axnet v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet --features default,ip,monolithic,smoltcp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axnet v0.1.0\n"]}},{"file":"modules/axnet/src/smoltcp_impl/listen_table.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n","warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n","warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n","warning: unnecessary closure used with `bool::then`\n  --> modules/axnet/src/smoltcp_impl/listen_table.rs:95:44\n   |\n95 |                 .find_map(|(idx, &handle)| is_connected(handle).then(|| idx))\n   |                                            ^^^^^^^^^^^^^^^^^^^^^------------\n   |                                                                 |\n   |                                                                 help: use `then_some(..)` instead: `then_some(idx)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n   = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"]}},{"file":"modules/axnet/src/smoltcp_impl/tcp.rs","count":4,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:53:5\n   |\n53 | /     pub const fn new() -> Self {\n54 | |         Self {\n55 | |             state: AtomicU8::new(STATE_CLOSED),\n56 | |             handle: UnsafeCell::new(None),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n51 + impl Default for TcpSocket {\n52 +     fn default() -> Self {\n53 +         Self::new()\n54 +     }\n55 + }\n   |\n\n"]}},{"file":"src/smoltcp_impl/mod.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n","file: /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 228 to 229)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axfs","count":36,"raw_reports":[{"file":"modules/axfs/src/fs/fatfs.rs","count":8,"kinds":{"Clippy(Warn)":["warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n","warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n","warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n","warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n","warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n","warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n","warning: this block may be rewritten with the `?` operator\n  --> modules/axfs/src/fs/fatfs.rs:88:13\n   |\n88 | /             if ans.is_err() {\n89 | |                 return ans;\n90 | |             }\n   | |_____________^ help: replace it with: `ans?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n   = note: `#[warn(clippy::question_mark)]` on by default\n\n","warning: this block may be rewritten with the `?` operator\n   --> modules/axfs/src/fs/fatfs.rs:115:13\n    |\n115 | /             if ans.is_err() {\n116 | |                 return ans;\n117 | |             }\n    | |_____________^ help: replace it with: `ans?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n\n"]}},{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axfs, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:11:34.171860358 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n    Checking log v0.4.21\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bitflags v2.6.0\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:11:41|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfs, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:11:41.674884594 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n    Checking log v0.4.21\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling lock_api v0.4.12\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking scopeguard v1.2.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking byteorder v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:11:49|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfs, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:11:49.25560051 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n    Checking log v0.4.21\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking aarch64-cpu v9.4.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:11:56|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfs, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:11:56.851523384 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n    Checking log v0.4.21\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v2.6.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling syn v2.0.90\n   Compiling lock_api v0.4.12\n   Compiling x86 v0.52.0\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.2.0\n   Compiling rustversion v1.0.18\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking lazy_static v1.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:12:05|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:57:09.564161913 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:56:56.4357304 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:57:02.990750741 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","// pkg_name=axfs, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:56:49.953949088 +08:00:00\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axfs, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n","pkg=axfs, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfs --features another_ext4,default,devfs,ext4_rs,fatfs,lwext4_rust,monolithic,myfs,procfs,ramfs,sysfs,use-ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs v0.1.0\n"]}},{"file":"modules/axfs/src/api/file.rs","count":4,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         OpenOptions(fops::OpenOptions::new())\n31 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n27 + impl Default for OpenOptions {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"]}},{"file":"modules/axfs/src/fops.rs","count":4,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n","warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:55:5\n   |\n55 | /     pub const fn new() -> Self {\n56 | |         Self {\n57 | |             // generic\n58 | |             read: false,\n...  |\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n53 + impl Default for OpenOptions {\n54 +     fn default() -> Self {\n55 +         Self::new()\n56 +     }\n57 + }\n   |\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axprocess","count":36,"raw_reports":[{"file":"modules/axtask/src/task.rs","count":8,"kinds":{"Clippy(Warn)":["warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"]}},{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axprocess, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:15:05.76404687 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:15:13|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axprocess, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:15:13.694492239 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:15:21|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axprocess, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:15:21.686436687 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:15:29|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axprocess, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:15:29.446689597 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:15:37|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 6:00:05.504125996 +08:00:00\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n","// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:59:50.490828796 +08:00:00\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n","// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:59:57.975518097 +08:00:00\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n","// pkg_name=axprocess, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:59:43.074987194 +08:00:00\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:50Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:05:50Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:48Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:05:48Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:54Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:05:54Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:52Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:05:52Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nriscv  0.10.1   ---     0.12.1  Normal  ---\n","pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nriscv  0.10.1   ---     0.12.1  Normal  ---\n","pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nriscv  0.10.1   ---     0.12.1  Normal  ---\n","pkg=axprocess, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nriscv  0.10.1   ---     0.12.1  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n","pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n","pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n","pkg=axprocess, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axprocess v0.1.0 (current)\nerror: running cargo-doc on crate 'axprocess' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axprocess v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axprocess --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axprocess v0.1.0\n"]}},{"file":"modules/axprocess/src/process.rs","count":4,"kinds":{"Clippy(Warn)":["warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n","warning: this function has too many arguments (8/7)\n   --> modules/axprocess/src/process.rs:195:5\n    |\n195 | /     pub fn new(\n196 | |         pid: u64,\n197 | |         stack_size: u64,\n198 | |         parent: u64,\n...   |\n203 | |         fd_table: FdTable,\n204 | |     ) -> Self {\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"]}},{"file":"modules/axtask/src/processor.rs","count":4,"kinds":{"Clippy(Warn)":["warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axfutex","count":32,"raw_reports":[{"file":"modules/axtask/src/task.rs","count":8,"kinds":{"Clippy(Warn)":["warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n","warning: unused import: `Ordering`\n  --> modules/axtask/src/task.rs:18:38\n   |\n18 | use core::sync::atomic::{AtomicBool, Ordering};\n   |                                      ^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n","warning: field `irq_state` is never read\n  --> modules/axtask/src/task.rs:46:5\n   |\n43 | pub struct ScheduleTask {\n   |            ------------ field in this struct\n...\n46 |     irq_state: AtomicBool,\n   |     ^^^^^^^^^\n\n"]}},{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axfutex, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:12:05.041203196 +08:00:00\n   Compiling hashbrown v0.15.2\n    Checking log v0.4.21\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking bit_field v0.10.2\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:12:12|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfutex, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:12:12.891108168 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling syn v1.0.109\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n    Checking bit_field v0.10.2\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:12:20|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfutex, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:12:20.810065019 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n    Checking log v0.4.21\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking bitflags v2.6.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling svgbobdoc v0.3.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:12:28|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfutex, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:12:28.900113613 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n    Checking log v0.4.21\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n    Checking raw-cpuid v10.7.0\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.18\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling unicode-width v0.1.14\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:12:36|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:57:37.702716113 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:57:23.368617532 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:57:30.542595515 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","// pkg_name=axfutex, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:57:16.193371214 +08:00:00\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:48Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:05:48Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:50Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:05:50Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:54Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:05:54Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:52Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at modules/axtask/src/schedule.rs:211:64: 211:80 (#0) after dropped at modules/axtask/src/schedule.rs:139:17: 139:26 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T22:05:52Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nhashbrown  0.11.2   ---     0.15.2  Normal  ---\nlog        0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nhashbrown  0.11.2   ---     0.15.2  Normal  ---\nlog        0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nhashbrown  0.11.2   ---     0.15.2  Normal  ---\nlog        0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axfutex, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nhashbrown  0.11.2   ---     0.15.2  Normal  ---\nlog        0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n","pkg=axfutex, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axfutex v0.1.0 (current)\nerror: running cargo-doc on crate 'axfutex' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfutex v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axfutex --features axfs,default,fs,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfutex v0.1.0\n"]}},{"file":"modules/axtask/src/processor.rs","count":4,"kinds":{"Clippy(Warn)":["warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n","warning: method `task_tick` is never used\n   --> modules/axtask/src/processor.rs:126:19\n    |\n43  | impl Processor {\n    | -------------- method in this implementation\n...\n126 |     pub(crate) fn task_tick(&self, task: &AxTaskRef) -> bool {\n    |                   ^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arch_boot","count":21,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:08:53.97079793 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:09:01|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arch_boot, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:09:01.012937205 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:09:08|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arch_boot, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:09:08.314364415 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking tock-registers v0.8.1\n    Checking critical-section v1.2.0\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling riscv v0.10.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking bit_field v0.10.2\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking sbi-spec v0.0.4\n    Checking sbi-rt v0.0.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:09:15|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arch_boot, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:09:15.826395723 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling unicode-ident v1.0.14\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:09:23|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:55:11.880957215 +08:00:00\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n","// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:54:55.960897762 +08:00:00\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n","// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:55:04.125807586 +08:00:00\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n","// pkg_name=arch_boot, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:54:48.026372367 +08:00:00\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=arch_boot, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n","pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n","pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n","pkg=arch_boot, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building arch_boot v0.1.0 (current)\nerror: running cargo-doc on crate 'arch_boot' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arch_boot v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/arch_boot --features axalloc,default,fp_simd,irq,monolithic,preempt,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arch_boot v0.1.0\n"]}},{"file":"modules/axtrap/src/arch/riscv/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axlibc","count":21,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axlibc, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:13:06.074869441 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n   Compiling glob v0.3.1\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling clang-sys v1.8.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:13:13|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlibc, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:13:13.909966914 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n   Compiling glob v0.3.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n   Compiling clang-sys v1.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:13:21|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlibc, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:13:21.698461643 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking critical-section v1.2.0\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n   Compiling glob v0.3.1\n    Checking fdt v0.1.5\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling clang-sys v1.8.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling prettyplease v0.2.25\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:13:29|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlibc, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:13:29.679182445 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking log v0.4.21\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking aarch64-cpu v9.4.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:13:37|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:58:29.001427706 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:58:13.332819033 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:58:21.205011555 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","// pkg_name=axlibc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:58:05.464646519 +08:00:00\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=axlibc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n","pkg=axlibc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axlibc v0.1.0 (current)\nerror: running cargo-doc on crate 'axlibc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlibc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axlibc --features alloc,default,epoll,fd,fp_simd,fs,irq,multitask,net,pipe,sched_cfs,sched_rr,select,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlibc v0.1.0\n"]}},{"file":"modules/axtrap/src/arch/riscv/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axtrap","count":21,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axtrap, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:18:35.937786657 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:18:43|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtrap, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:18:43.070416412 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:18:50|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtrap, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:18:50.318878086 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking nb v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking critical-section v1.2.0\n    Checking tock-registers v0.8.1\n    Checking nb v0.1.3\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking bitflags v2.6.0\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking embedded-hal v0.2.7\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking bit_field v0.10.2\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:18:57|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtrap, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:18:57.584387729 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:19:05|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 6:03:15.613037531 +08:00:00\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n","// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:02:59.852552559 +08:00:00\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n","// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:03:07.633518145 +08:00:00\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n","// pkg_name=axtrap, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 6:02:51.94371132 +08:00:00\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axtrap, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n","pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n","pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n","pkg=axtrap, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axtrap v0.1.0 (current)\nerror: running cargo-doc on crate 'axtrap' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtrap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtrap --features axtask,default,irq,monolithic,preempt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtrap v0.1.0\n"]}},{"file":"modules/axtrap/src/arch/riscv/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arceos_posix_api","count":20,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:08:22.13973441 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling glob v0.3.1\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling clang-sys v1.8.1\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:08:29|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_posix_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:08:29.937789279 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n   Compiling glob v0.3.1\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n   Compiling clang-sys v1.8.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:08:37|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_posix_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:08:37.712534083 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n   Compiling syn v2.0.90\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking bitflags v2.6.0\n   Compiling glob v0.3.1\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n   Compiling clang-sys v1.8.1\n    Checking sbi-rt v0.0.3\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling libc v0.2.167\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:08:45|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_posix_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:08:45.627460398 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking log v0.4.21\n   Compiling x86 v0.52.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:08:53|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:54:40.062604279 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:54:24.533748484 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:54:32.323717288 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","// pkg_name=arceos_posix_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:54:16.605234398 +08:00:00\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:25Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n","pkg=arceos_posix_api, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.69.5   ---     0.71.1  Build  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n","pkg=arceos_posix_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building arceos_posix_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_posix_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_posix_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_posix_api --features alloc,axtask,default,epoll,fd,fs,irq,multitask,net,pipe,select,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_posix_api v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axalloc","count":20,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axalloc, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:09:23.996666998 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking aarch64-cpu v9.4.0\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:09:30|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axalloc, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:09:30.203770711 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling syn v1.0.109\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n   Compiling toml_edit v0.22.22\n    Checking aarch64-cpu v9.4.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bit_field v0.10.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n22:09:36|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axalloc, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:09:36.476059456 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n   Compiling syn v1.0.109\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bit_field v0.10.2\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking rlsf v0.2.1\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\n22:09:42|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axalloc, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:09:42.105813235 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n    Checking bit_field v0.10.2\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n    Checking raw-cpuid v10.7.0\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling base64 v0.13.1\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling unicode-width v0.1.14\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking const-default v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling svgbobdoc v0.3.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:09:48|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:55:27.061082468 +08:00:00\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n","// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:55:22.333076095 +08:00:00\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n","// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:55:24.655766959 +08:00:00\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n","// pkg_name=axalloc, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:55:19.803670269 +08:00:00\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axalloc, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n","pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n","pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n","pkg=axalloc, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axalloc v0.1.0 (current)\nerror: running cargo-doc on crate 'axalloc' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axalloc v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axalloc --features buddy,default,slab,tlsf &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axalloc v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axdisplay","count":20,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:10:04.705794196 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:10:11|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdisplay, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:10:11.919727966 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:10:19|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdisplay, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:10:19.296963763 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking byteorder v1.5.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking driver_display v0.1.0 (https://github.com/Starry-OS/driver_display.git#61125d7b)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:10:26|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdisplay, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:10:26.597283082 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking raw-cpuid v10.7.0\n    Checking bitflags v2.6.0\n   Compiling x86 v0.52.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:10:34|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:55:46.38516236 +08:00:00\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n","// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:55:36.497634111 +08:00:00\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n","// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:55:41.455209919 +08:00:00\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n","// pkg_name=axdisplay, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:55:31.320050513 +08:00:00\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axdisplay, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n","pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n","pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n","pkg=axdisplay, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axdisplay v0.1.0 (current)\nerror: running cargo-doc on crate 'axdisplay' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdisplay v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdisplay &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdisplay v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axdriver","count":20,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axdriver, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:10:34.43733327 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking byteorder v1.5.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:10:41|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdriver, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:10:41.552032687 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling zerocopy-derive v0.7.35\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:10:49|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdriver, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:10:49.083064467 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking cfg-if v1.0.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#6f1d6712)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling zerocopy-derive v0.7.35\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:10:56|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axdriver, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:10:56.684182095 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking bitflags v2.6.0\n    Checking log v0.4.21\n   Compiling rustversion v1.0.18\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking cfg-if v1.0.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n    Checking byteorder v1.5.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:11:04|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:56:08.683439598 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:55:57.314953178 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:56:03.065357939 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","// pkg_name=axdriver, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:55:51.272132612 +08:00:00\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axdriver, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n","pkg=axdriver, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axdriver v0.1.0 (current)\nerror: running cargo-doc on crate 'axdriver' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdriver v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axdriver --features bcm2835-sdhci,block,bus-mmio,bus-pci,default,display,driver_block,driver_display,driver_net,driver_virtio,dyn,e1000,img,ixgbe,net,ramdisk,virtio,virtio-blk,virtio-gpu,virtio-net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdriver v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axhal","count":20,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axhal, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:12:36.944104632 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:12:43|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axhal, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:12:43.901678026 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:12:50|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axhal, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:12:50.874398456 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n   Compiling riscv v0.11.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking critical-section v1.2.0\n    Checking embedded-hal v1.0.0\n    Checking bitflags v2.6.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:12:57|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axhal, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:12:58.003559358 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:13:06|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:58:00.324355924 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n","// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:57:50.045693717 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n","// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:57:55.168021051 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n","// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:57:45.123116123 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.11.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.11.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.11.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n","pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nlog             0.4.21   0.4.22  0.4.22  Normal  ---\nriscv           0.11.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx86_64          0.15.1   0.15.2  0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n","pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n","pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n","pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal --features alloc,axalloc,default,fp_simd,irq,monolithic,page_table,paging,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axlog","count":20,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axlog, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:13:37.966663549 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking tock-registers v0.8.1\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:13:44|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlog, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:13:44.302913435 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking tock-registers v0.8.1\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:13:50|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlog, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:13:50.699237989 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:13:56|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axlog, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:13:56.264386499 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bitflags v1.3.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling x86 v0.52.0\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:14:02|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:58:42.619583141 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:58:38.708514253 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:58:40.716382582 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","// pkg_name=axlog, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:58:36.72987737 +08:00:00\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nchrono  0.4.38   0.4.39  0.4.39  Normal  ---\nlog     0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nchrono  0.4.38   0.4.39  0.4.39  Normal  ---\nlog     0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nchrono  0.4.38   0.4.39  0.4.39  Normal  ---\nlog     0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axlog, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nchrono  0.4.38   0.4.39  0.4.39  Normal  ---\nlog     0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n","pkg=axlog, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axlog v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axlog v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axlog --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axmem","count":20,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axmem, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:14:02.769358746 +08:00:00\n    Checking log v0.4.21\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling autocfg v1.4.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking bit_field v0.10.2\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:14:10|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axmem, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:14:10.780329302 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking aarch64-cpu v9.4.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking bit_field v0.10.2\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:14:18|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axmem, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:14:18.789819753 +08:00:00\n    Checking log v0.4.21\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling syn v2.0.90\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n    Checking bit_field v0.10.2\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:14:26|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axmem, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:14:26.778000317 +08:00:00\n    Checking log v0.4.21\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling unicode-width v0.1.14\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:14:34|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:59:04.961055016 +08:00:00\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n","// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:58:51.328581341 +08:00:00\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n","// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:58:58.055778296 +08:00:00\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n","// pkg_name=axmem, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:58:44.579314601 +08:00:00\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nlog    0.4.21   0.4.22  0.4.22  Normal  ---\nriscv  0.10.1   ---     0.12.1  Normal  ---\n","pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nlog    0.4.21   0.4.22  0.4.22  Normal  ---\nriscv  0.10.1   ---     0.12.1  Normal  ---\n","pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nlog    0.4.21   0.4.22  0.4.22  Normal  ---\nriscv  0.10.1   ---     0.12.1  Normal  ---\n","pkg=axmem, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nlog    0.4.21   0.4.22  0.4.22  Normal  ---\nriscv  0.10.1   ---     0.12.1  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n","pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n","pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n","pkg=axmem, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axmem v0.1.0 (current)\nerror: running cargo-doc on crate 'axmem' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axmem v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axmem --features default,monolithic &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axmem v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axtask","count":20,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axtask, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:18:07.060904568 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:18:13|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtask, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:18:13.87019341 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:18:20|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtask, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:18:20.85118458 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking fdt v0.1.5\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:18:27|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axtask, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:18:27.818351376 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:18:35|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 6:02:46.051383855 +08:00:00\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n","// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:02:34.270650526 +08:00:00\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n","// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:02:40.081518977 +08:00:00\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n","// pkg_name=axtask, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 6:02:28.461125149 +08:00:00\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n","pkg=axtask, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nlog   0.4.21   0.4.22  0.4.22  Normal  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n","pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n","pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n","pkg=axtask, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axtask v0.1.0 (current)\nerror: running cargo-doc on crate 'axtask' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axtask v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axtask --features default,irq,kernel_guard,monolithic,multitask,preempt,sched_cfs,sched_fifo,sched_rr,test,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axtask v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axstd","count":17,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axstd, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:17:07.77822613 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:17:15|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstd, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:17:15.057891296 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:17:22|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstd, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:17:22.373067896 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking critical-section v1.2.0\n    Checking spin v0.9.8\n   Compiling riscv v0.11.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking sbi-spec v0.0.7\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking void v1.0.2\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking bit_field v0.10.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:17:29|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axstd, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:17:29.800691303 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.14.12\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:17:37|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 6:02:00.057327553 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:01:43.521832751 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:01:51.750733708 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","// pkg_name=axstd, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 6:01:35.473132723 +08:00:00\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n","pkg=axstd, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axstd v0.1.0 (current)\nerror: running cargo-doc on crate 'axstd' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axstd v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/ulib/axstd --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,bus-mmio,bus-pci,default,display,dns,driver-bcm2835-sdhci,driver-ixgbe,driver-ramdisk,fatfs,fp_simd,fs,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axstd v0.1.0\n"]}},{"file":"modules/axtrap/src/arch/riscv/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arceos_api","count":16,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:07:52.58793263 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking fdt v0.1.5\n    Checking lazy_static v1.5.0\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:07:59|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:07:59.700345936 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:08:06|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:08:06.818441996 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:08:13|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos_api, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:08:13.952231171 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking log v0.4.21\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:08:22|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:54:09.036790329 +08:00:00\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n","// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:53:53.676046325 +08:00:00\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n","// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:54:01.30860606 +08:00:00\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n","// pkg_name=arceos_api, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:53:45.605040887 +08:00:00\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n","pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n","pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n","pkg=arceos_api, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building arceos_api v0.1.0 (current)\nerror: running cargo-doc on crate 'arceos_api' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate arceos_api v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/arceos_api --features alloc,axtask,default,display,dummy-if-not-enabled,fs,irq,multitask,myfs,net &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arceos_api v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axfeat","count":16,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axfeat, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:11:04.460711252 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:11:11|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfeat, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:11:11.602813668 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:11:18|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfeat, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:11:18.683545446 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling riscv v0.11.1\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:11:25|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axfeat, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:11:25.860185761 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking log v0.4.21\n    Checking bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.14.12\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:11:34|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:56:41.088215439 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:56:23.659092331 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:56:32.46424852 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","// pkg_name=axfeat, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:56:14.333388242 +08:00:00\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n","pkg=axfeat, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axfeat v0.1.0 (current)\nerror: running cargo-doc on crate 'axfeat' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axfeat v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/api/axfeat --features alloc,alloc-buddy,alloc-slab,alloc-tlsf,another_ext4,axalloc,axdriver,axsync,axtask,bus-mmio,bus-pci,default,display,driver-bcm2835-sdhci,driver-e1000,driver-ixgbe,driver-ramdisk,ext4_rs,fatfs,fp_simd,fs,img,irq,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,lwext4_rust,monolithic,multitask,myfs,net,paging,sched_cfs,sched_fifo,sched_rr,smp,spinlock,taskctx,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfeat v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axruntime","count":16,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axruntime, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:15:37.578036664 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:15:44|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axruntime, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:15:44.599195007 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:15:51|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axruntime, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:15:51.664622556 +08:00:00\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.11.1\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking sbi-spec v0.0.7\n    Checking embedded-hal v1.0.0\n    Checking bitflags v2.6.0\n    Checking critical-section v1.2.0\n    Checking fdt v0.1.5\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking sbi-rt v0.0.3\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:15:58|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axruntime, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:15:58.689286974 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n    Checking x86_64 v0.14.12\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:16:06|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 6:00:36.827684184 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 6:00:20.751783618 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:00:28.980905316 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","// pkg_name=axruntime, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:00:12.927397374 +08:00:00\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n","pkg=axruntime, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axruntime v0.1.0 (current)\nerror: running cargo-doc on crate 'axruntime' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axruntime v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axruntime --features alloc,axalloc,axdisplay,axdriver,axfs,axmem,axnet,axprocess,default,display,fs,img,irq,kernel_guard,lazy_init,monolithic,multitask,net,paging,percpu,smp,tls &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axruntime v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axsignal","count":16,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axsignal, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:16:06.739022692 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:16:13|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsignal, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:16:13.764438803 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking bitflags v2.6.0\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:16:20|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsignal, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:16:20.724004547 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking log v0.4.21\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n   Compiling riscv v0.11.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking embedded-hal v1.0.0\n    Checking bitflags v2.6.0\n    Checking fdt v0.1.5\n    Checking critical-section v1.2.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:16:27|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsignal, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:16:27.874822992 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.7.0\n   Compiling proc-macro2 v1.0.92\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling toml_edit v0.22.22\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking log v0.4.21\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking spin v0.9.8\n    Checking tock-registers v0.8.1\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:16:35|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 6:00:57.142116429 +08:00:00\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n","// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:00:48.917316922 +08:00:00\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n","// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:00:52.853231929 +08:00:00\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n","// pkg_name=axsignal, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 6:00:44.969073182 +08:00:00\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n","pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n","pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n","pkg=axsignal, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axsignal v0.1.0 (current)\nerror: running cargo-doc on crate 'axsignal' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsignal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsignal --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsignal v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axsync","count":16,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=axsync, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:17:37.887949665 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking bitflags v2.6.0\n    Checking spin v0.9.8\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.13.0\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:17:44|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsync, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:17:44.949644253 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking tock-registers v0.8.1\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.14\n    Checking aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.22\n   Compiling quote v1.0.37\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n    Checking bitflags v2.6.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#b6dfcc32)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#15d6fb0f)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#cba8ce63)\n    Checking either v1.13.0\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:17:51|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsync, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:17:51.867267286 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking log v0.4.21\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking lazy_static v1.5.0\n    Checking aarch64-cpu v9.4.0\n    Checking critical-section v1.2.0\n    Checking bitflags v2.6.0\n    Checking embedded-hal v1.0.0\n    Checking fdt v0.1.5\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:17:59|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=axsync, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:17:59.055498773 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.7.0\n   Compiling proc-macro2 v1.0.92\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling unicode-ident v1.0.14\n   Compiling toml_edit v0.22.22\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling syn v2.0.90\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking tock-registers v0.8.1\n    Checking spin v0.9.8\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking x86_64 v0.15.1\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:18:07|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 6:02:23.622981766 +08:00:00\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n","// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:02:14.135640583 +08:00:00\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n","// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:02:18.749911753 +08:00:00\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n","// pkg_name=axsync, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 6:02:09.340047276 +08:00:00\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n","pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n","pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n","pkg=axsync, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axsync v0.1.0 (current)\nerror: running cargo-doc on crate 'axsync' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axsync v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axsync --features default,irq,multitask &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsync v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"axconfig","count":12,"raw_reports":[{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-29 5:55:29.37887095 +08:00:00\n    Building axconfig v0.1.0 (current)\nerror: running cargo-doc on crate 'axconfig' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axconfig v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axconfig v0.1.0\n","// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2024-12-29 5:55:30.837207914 +08:00:00\n    Building axconfig v0.1.0 (current)\nerror: running cargo-doc on crate 'axconfig' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axconfig v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axconfig v0.1.0\n","// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 5:55:30.351981885 +08:00:00\n    Building axconfig v0.1.0 (current)\nerror: running cargo-doc on crate 'axconfig' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axconfig v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axconfig v0.1.0\n","// pkg_name=axconfig, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 5:55:29.861208753 +08:00:00\n    Building axconfig v0.1.0 (current)\nerror: running cargo-doc on crate 'axconfig' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axconfig v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axconfig v0.1.0\n"]}},{"file":"[outdated direct dependencies]","count":4,"kinds":{"Outdated":["pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat   Latest   Kind   Platform\n----   -------  ------   ------   ----   --------\nserde  1.0.215  1.0.217  1.0.217  Build  ---\n","pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat   Latest   Kind   Platform\n----   -------  ------   ------   ----   --------\nserde  1.0.215  1.0.217  1.0.217  Build  ---\n","pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat   Latest   Kind   Platform\n----   -------  ------   ------   ----   --------\nserde  1.0.215  1.0.217  1.0.217  Build  ---\n","pkg=axconfig, checker=Outdated\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName   Project  Compat   Latest   Kind   Platform\n----   -------  ------   ------   ----   --------\nserde  1.0.215  1.0.217  1.0.217  Build  ---\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\nerror: running cargo-doc on crate 'axconfig' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axconfig v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axconfig v0.1.0\n","pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\nerror: running cargo-doc on crate 'axconfig' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axconfig v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axconfig v0.1.0\n","pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\nerror: running cargo-doc on crate 'axconfig' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axconfig v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axconfig v0.1.0\n","pkg=axconfig, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axconfig v0.1.0 (current)\nerror: running cargo-doc on crate 'axconfig' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axconfig v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axconfig v0.1.0\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arceos-bwbench","count":9,"raw_reports":[{"file":"(virtual) rap","count":4,"kinds":{"Cargo":["// pkg_name=arceos-bwbench, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-29 6:07:02.751832633 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n   Compiling toml_edit v0.22.22\n    Checking log v0.4.21\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking const-default v1.0.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:07:10|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos-bwbench, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-none\n// timestamp=2024-12-29 6:07:26.236068317 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling winnow v0.6.20\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n    Checking bitflags v2.6.0\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling lock_api v0.4.12\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:07:34|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos-bwbench, checker=Rap\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target riscv64gc-unknown-none-elf\n// timestamp=2024-12-29 6:07:18.233714741 +08:00:00\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n   Compiling syn v2.0.90\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking bitflags v2.6.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking bit_field v0.10.2\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking const-default v1.0.0\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n   Compiling svgbobdoc v0.3.0\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/riscv.rs:102:5\n    |\n102 | /     asm!(\n103 | |         \"\n104 | |         // save old context (callee-saved registers)\n105 | |         STR     ra, a0, 0\n...   |\n137 | |         options(noreturn),\n138 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:07:26|RAP|ERROR|: Finished with non-zero exit code.\n","// pkg_name=arceos-bwbench, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/net/bwbench\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:07:10.561076611 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.20\n   Compiling proc-macro2 v1.0.92\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.21\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.22.22\n    Checking tock-registers v0.8.1\n   Compiling syn v2.0.90\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking bitflags v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/aarch64.rs:86:5\n    |\n86  | /     asm!(\n87  | |         \"\n88  | |         // save old context (callee-saved registers)\n89  | |         stp     x29, x30, [x0, 12 * 8]\n...   |\n111 | |         options(noreturn),\n112 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:07:18|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:04:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:04:44Z WARN  lockbud::callbacks] [\n      {\n        \"ConflictLock\": {\n          \"bug_kind\": \"ConflictLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": [\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"modules/axnet/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            },\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"modules/axnet/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            }\n          ],\n          \"explanation\": \"Locks mutually wait for each other to form a cycle\"\n        }\n      }\n    ]\n[2024-12-28T22:04:44Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 1 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-12-28T22:04:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:04:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T22:04:58Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n            \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n            \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n            \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"modules/axnet/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2024-12-28T22:04:58Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"modules/axtrap/src/arch/riscv/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `stval`\n  --> modules/axtrap/src/arch/riscv/mod.rs:45:9\n   |\n45 |     let stval = riscv::register::stval::read();\n   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_stval`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"mingo","count":8,"raw_reports":[{"file":"src/main.rs","count":3,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n","error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n","error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n// timestamp=2024-12-29 5:53:42.949187067 +08:00:00\n Downloading crates ...\n  Downloaded aarch64-cpu v9.0.0\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:06:58.88209773 +08:00:00\n   Compiling tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader)\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n   --> src/main.rs:110:12\n    |\n110 | #![feature(asm_const)]\n    |            ^^^^^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n   --> src/main.rs:112:12\n    |\n112 | #![feature(panic_info_message)]\n    |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap_or` found for struct `core::panic::PanicMessage` in the current scope\n  --> src/panic_wait.rs:60:24\n   |\n60 |         info.message().unwrap_or(&format_args!(\"\")),\n   |                        ^^^^^^^^^ method not found in `PanicMessage<'_>`\n\nSome errors have detailed explanations: E0425, E0433, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 3 warnings\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 3 warnings emitted\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=mingo, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none-softfloat\n// timestamp=2024-12-29 6:19:41.830607143 +08:00:00\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: the feature `asm_const` has been stable since 1.82.0 and no longer requires an attribute to enable\n   --> src/main.rs:110:12\n    |\n110 | #![feature(asm_const)]\n    |            ^^^^^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n\nwarning: the feature `panic_info_message` has been stable since 1.81.0 and no longer requires an attribute to enable\n   --> src/main.rs:112:12\n    |\n112 | #![feature(panic_info_message)]\n    |            ^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no method named `unwrap_or` found for struct `core::panic::PanicMessage` in the current scope\n  --> src/panic_wait.rs:60:24\n   |\n60 |         info.message().unwrap_or(&format_args!(\"\")),\n   |                        ^^^^^^^^^ method not found in `PanicMessage<'_>`\n\nSome errors have detailed explanations: E0425, E0433, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 3 warnings\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 3 warnings emitted\n22:19:43|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=mingo, checker=Outdated\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/raspi4/chainloader\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.0.0    9.4.0   10.0.0  Normal  cfg(target_arch = \"aarch64\")\ntock-registers  0.8.1    ---     0.9.0   Normal  ---\n"]}},{"file":"src/cpu.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arceos-tls","count":5,"raw_reports":[{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.215/src/de/mod.rs","count":1,"kinds":{"Mirai":["error[E0658]: `#[diagnostic]` attribute name space is experimental\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.215/src/de/mod.rs:536:5\n    |\n536 |     diagnostic::on_unimplemented(\n    |     ^^^^^^^^^^\n    |\n    = note: see issue #111996 <https://github.com/rust-lang/rust/issues/111996> for more information\n    = help: add `#![feature(diagnostic_namespace)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-02-04; consider upgrading it if it is out of date\n\n"]}},{"file":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.215/src/ser/mod.rs","count":1,"kinds":{"Mirai":["error[E0658]: `#[diagnostic]` attribute name space is experimental\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/serde-1.0.215/src/ser/mod.rs:220:5\n    |\n220 |     diagnostic::on_unimplemented(\n    |     ^^^^^^^^^^\n    |\n    = note: see issue #111996 <https://github.com/rust-lang/rust/issues/111996> for more information\n    = help: add `#![feature(diagnostic_namespace)]` to the crate attributes to enable\n    = note: this compiler was built on 2024-02-04; consider upgrading it if it is out of date\n\n"]}},{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=arceos-tls, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/task/tls\n// cmd=cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json\n// timestamp=2024-12-29 6:04:20.508071668 +08:00:00\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling unicode-ident v1.0.14\n   Compiling x86 v0.52.0\n   Compiling toml_edit v0.22.22\nThe following warnings were emitted during compilation:\n\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\nwarning: serde@1.0.215: cargo:rustc-check-cfg requires -Zcheck-cfg flag\n\nerror: could not compile `serde` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=arceos-tls, checker=Rap\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/task/tls\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-linux-gnu\n// timestamp=2024-12-29 6:07:43.321246348 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling winnow v0.6.20\n   Compiling toml_datetime v0.6.8\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.7.0\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.22.22\n   Compiling unicode-ident v1.0.14\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.18\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling syn v2.0.90\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking log v0.4.21\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n    Checking aarch64-cpu v9.4.0\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.14.12\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axconfig)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/3c3ad2f/src/arch/x86_64.rs:162:5\n    |\n162 | /     asm!(\n163 | |         \"\n164 | |         push    rbp\n165 | |         push    rbx\n...   |\n180 | |         options(noreturn),\n181 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/modules/axhal)\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `taskctx` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n22:07:51|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-28T22:05:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T22:05:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"bwbench-client","count":2,"raw_reports":[{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=bwbench-client, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/tools/bwbench_client\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n// timestamp=2024-12-29 5:53:27.208230706 +08:00:00\n Downloading crates ...\n  Downloaded chrono v0.4.39\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.169\n    Checking iana-time-zone v0.1.61\n   Compiling num-traits v0.2.19\n    Checking chrono v0.4.39\n    Checking bwbench-client v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/tools/bwbench_client)\nerror: could not compile `bwbench-client` (bin \"bwbench-client\") due to 2 previous errors\n"]}},{"file":"src/device.rs","count":1,"kinds":{"Clippy(Error)":["error: the loop variable `i` is used to index `mac_addr`\n  --> src/device.rs:80:22\n   |\n80 |             for i in 0..6 {\n   |                      ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nnote: the lint level is defined here\n  --> src/main.rs:3:9\n   |\n3  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`\nhelp: consider using an iterator and enumerate()\n   |\n80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {\n   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arceos-display","count":1,"raw_reports":[{"file":"(virtual) mirai","count":1,"kinds":{"Cargo":["// pkg_name=arceos-display, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry-New/apps/display\n// cmd=cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json\n// timestamp=2024-12-29 6:03:58.120109361 +08:00:00\n   Compiling autocfg v1.4.0\n   Compiling az v1.2.1\n    Checking byteorder v1.5.0\n    Checking micromath v2.1.0\n   Compiling num-traits v0.2.19\n    Checking embedded-graphics-core v0.4.0\n    Checking float-cmp v0.9.0\n    Checking embedded-graphics v0.8.1\n    Checking arceos-display v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry-New/apps/display)\nerror: could not compile `arceos-display` (bin \"arceos-display\")\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arceos-exception","count":1,"raw_reports":[{"file":"apps/exception/src/main.rs","count":1,"kinds":{"Mirai":["warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> apps/exception/src/main.rs:13:9\n   |\n13 |         asm!(\"int3\");\n   |         ^^^^^^^^^^^^\n\n"]}}]},{"user":"Starry-OS","repo":"Starry-New","pkg":"arceos-memtest","count":1,"raw_reports":[{"file":"apps/memtest/src/main.rs","count":1,"kinds":{"Mirai":["warning: assertion failed\n  --> apps/memtest/src/main.rs:35:13\n   |\n35 |             assert_eq!(k.parse::<u32>().unwrap(), *v);\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}