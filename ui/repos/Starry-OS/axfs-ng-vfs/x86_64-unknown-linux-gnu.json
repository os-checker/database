{
  "repo": {
    "user": "Starry-OS",
    "repo": "axfs-ng-vfs"
  },
  "data": [
    {
      "user": "Starry-OS",
      "repo": "axfs-ng-vfs",
      "pkg": "axfs-ng-vfs",
      "count": 17,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/e11ca75/src/buf.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "error[E0599]: no method named `assume_init_mut` found for slice `[MaybeUninit<_>]` in the current scope\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/e11ca75/src/buf.rs:19:43\n   |\n19 |             self.read(unsafe { buf[..len].assume_init_mut() })?;\n   |                                           ^^^^^^^^^^^^^^^\n   |\nhelp: there is a method `split_mut` with a similar name, but with different arguments\n  --> /rustc/824759493246ee383beb9cd5ceffa0e15deb9fa4/library/core/src/slice/mod.rs:2225:5\n\n",
              "error[E0599]: no method named `assume_init_ref` found for slice `[MaybeUninit<_>]` in the current scope\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/e11ca75/src/buf.rs:20:46\n   |\n20 |             let read = f(unsafe { buf[..len].assume_init_ref() })?;\n   |                                              ^^^^^^^^^^^^^^^ method not found in `[MaybeUninit<_>]`\n\n",
              "error[E0599]: no method named `assume_init_mut` found for slice `[MaybeUninit<_>]` in the current scope\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/e11ca75/src/buf.rs:42:49\n   |\n42 |             let written = f(unsafe { buf[..len].assume_init_mut() })?;\n   |                                                 ^^^^^^^^^^^^^^^\n   |\nhelp: there is a method `split_mut` with a similar name, but with different arguments\n  --> /rustc/824759493246ee383beb9cd5ceffa0e15deb9fa4/library/core/src/slice/mod.rs:2225:5\n\n",
              "error[E0599]: no method named `assume_init_ref` found for slice `[MaybeUninit<_>]` in the current scope\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/e11ca75/src/buf.rs:44:48\n   |\n44 |             self.write(unsafe { buf[..written].assume_init_ref() })?;\n   |                                                ^^^^^^^^^^^^^^^ method not found in `[MaybeUninit<_>]`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/e11ca75/src/buffered/reader.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "error[E0599]: no method named `assume_init_ref` found for slice `[MaybeUninit<u8>]` in the current scope\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/e11ca75/src/buffered/reader.rs:47:50\n   |\n47 |         unsafe { self.buf[self.pos..self.filled].assume_init_ref() }\n   |                                                  ^^^^^^^^^^^^^^^ method not found in `[MaybeUninit<u8>]`\n\n",
              "error[E0599]: no method named `assume_init_mut` found for array `[MaybeUninit<u8>; 1024]` in the current scope\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/e11ca75/src/buffered/reader.rs:151:62\n    |\n151 |             let read_len = self.inner.read(unsafe { self.buf.assume_init_mut() })?;\n    |                                                              ^^^^^^^^^^^^^^^\n    |\nhelp: there is a method `split_mut` with a similar name, but with different arguments\n   --> /rustc/824759493246ee383beb9cd5ceffa0e15deb9fa4/library/core/src/slice/mod.rs:2225:5\n\n"
            ]
          }
        },
        {
          "file": "src/types.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/types.rs (original lines from 7 to 8)\n-    Unknown         = 0,\n-    Fifo            = 0o1,\n+    Unknown = 0,\n+    Fifo = 0o1,\n",
              "file: /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/types.rs (original lines from 10 to 14)\n-    Directory       = 0o4,\n-    BlockDevice     = 0o6,\n-    RegularFile     = 0o10,\n-    Symlink         = 0o12,\n-    Socket          = 0o14,\n+    Directory = 0o4,\n+    BlockDevice = 0o6,\n+    RegularFile = 0o10,\n+    Symlink = 0o12,\n+    Socket = 0o14,\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs-ng-vfs, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-09-25 4:30:16.278377557 +08:00:00\n     Removed 0 files\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling strsim v0.10.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/syn-49839b08cea53f70/build_script_build-49839b08cea53f70.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/proc-macro2-4b131a9cc84a5cde/build_script_build-4b131a9cc84a5cde.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/unicode_ident-1d1395cd7a8bd8da.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/strsim-b8f7b81156e42694.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libunicode_ident-1d1395cd7a8bd8da.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libunicode_ident-1d1395cd7a8bd8da.rlib\",\"emit\":\"link\"}\n   Compiling ident_case v1.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/ident_case-a52beed4582375b5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libident_case-a52beed4582375b5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libident_case-a52beed4582375b5.rlib\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libstrsim-b8f7b81156e42694.rmeta\",\"emit\":\"metadata\"}\n   Compiling fnv v1.0.7\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/fnv-1dce063efb2ea7a2.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libfnv-1dce063efb2ea7a2.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libfnv-1dce063efb2ea7a2.rlib\",\"emit\":\"link\"}\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git?rev=3713143#37131431)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/syn-49839b08cea53f70/build_script_build-49839b08cea53f70\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/axerrno-3b0059274c32644d/build_script_build-3b0059274c32644d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/proc-macro2-4b131a9cc84a5cde/build_script_build-4b131a9cc84a5cde\",\"emit\":\"link\"}\n    Checking log v0.4.21\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libstrsim-b8f7b81156e42694.rlib\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/log-3e4ab308c424f8a7.d\",\"emit\":\"dep-info\"}\n    Checking cfg-if v1.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/cfg_if-375191e112da1984.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libcfg_if-375191e112da1984.rmeta\",\"emit\":\"metadata\"}\n    Checking allocator-api2 v0.2.21\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/liblog-3e4ab308c424f8a7.rmeta\",\"emit\":\"metadata\"}\n    Checking equivalent v1.0.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/proc_macro2-d52e1b0fd08ab4a5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/allocator_api2-c74e46d1a09fbb5b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/equivalent-dbd0be9061b7acbc.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libequivalent-dbd0be9061b7acbc.rmeta\",\"emit\":\"metadata\"}\n    Checking bitflags v2.9.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/axerrno-3b0059274c32644d/build_script_build-3b0059274c32644d\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/bitflags-7c3693fde2daac8d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/axerrno-ed820ca73c25c46b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libaxerrno-ed820ca73c25c46b.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libbitflags-7c3693fde2daac8d.rmeta\",\"emit\":\"metadata\"}\n    Checking foldhash v0.1.5\n    Checking axio v0.1.1 (https://github.com/Starry-OS/axio.git?rev=e11ca75#e11ca75f)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/foldhash-950ed68680bcf804.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/axio-741fa0593c2f5684.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libfoldhash-950ed68680bcf804.rmeta\",\"emit\":\"metadata\"}\n    Checking smallvec v1.15.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/liballocator_api2-c74e46d1a09fbb5b.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/smallvec-c326a5f51f7d7304.d\",\"emit\":\"dep-info\"}\n    Checking hashbrown v0.15.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libaxio-741fa0593c2f5684.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/hashbrown-a53891e09cc23ad6.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libsmallvec-c326a5f51f7d7304.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libproc_macro2-d52e1b0fd08ab4a5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libproc_macro2-d52e1b0fd08ab4a5.rlib\",\"emit\":\"link\"}\n   Compiling quote v1.0.40\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/quote-c8eb33032447793c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libquote-c8eb33032447793c.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libquote-c8eb33032447793c.rlib\",\"emit\":\"link\"}\n   Compiling syn v2.0.104\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libhashbrown-a53891e09cc23ad6.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/syn-fff2c145fa39ae1a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/syn-87d69f0c08a914bc.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libsyn-fff2c145fa39ae1a.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libsyn-87d69f0c08a914bc.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libsyn-fff2c145fa39ae1a.rlib\",\"emit\":\"link\"}\n   Compiling crate_interface v0.1.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/crate_interface-db32ec26ae001113.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libcrate_interface-db32ec26ae001113.so\",\"emit\":\"link\"}\n    Checking kernel_guard v0.1.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/kernel_guard-e636ef0f8c1d9f10.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libkernel_guard-e636ef0f8c1d9f10.rmeta\",\"emit\":\"metadata\"}\n    Checking kspin v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/kspin-18dab0246b5aed84.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libkspin-18dab0246b5aed84.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libsyn-87d69f0c08a914bc.rlib\",\"emit\":\"link\"}\n   Compiling darling_core v0.13.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/darling_core-a2ad92fa46b0f48c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libdarling_core-a2ad92fa46b0f48c.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libdarling_core-a2ad92fa46b0f48c.rlib\",\"emit\":\"link\"}\n   Compiling darling_macro v0.13.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/darling_macro-c3e5e749debd3b22.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libdarling_macro-c3e5e749debd3b22.so\",\"emit\":\"link\"}\n   Compiling darling v0.13.4\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/darling-e2524d064705df6b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libdarling-e2524d064705df6b.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libdarling-e2524d064705df6b.rlib\",\"emit\":\"link\"}\n   Compiling inherit-methods-macro v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/inherit_methods_macro-d2fd22c644f1de69.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libinherit_methods_macro-d2fd22c644f1de69.so\",\"emit\":\"link\"}\n    Checking axfs-ng-vfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/axfs_ng_vfs-47da9c2feeeada04.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libaxfs_ng_vfs-47da9c2feeeada04.rmeta\",\"emit\":\"metadata\"}\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 4.93s\n    Scanning done\nWARNING: Dependency file was never scanned: /home/runner/.cargo/git/checkouts/axerrno-5ea606781111d899/3713143/README.md\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/kspin-0.1.0/README.md\nWARNING: Dependency file was never scanned: /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crate_interface-0.1.4/README.md\nerror: Found 3 warnings\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs-ng-vfs, checker=Lockbud\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-09-25 4:30:08.098190763 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling strsim v0.10.0\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git?rev=3713143#37131431)\n   Compiling log v0.4.21\n   Compiling cfg-if v1.0.1\n[2025-09-24T20:30:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-24T20:30:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling foldhash v0.1.5\n   Compiling equivalent v1.0.2\n   Compiling allocator-api2 v0.2.21\n   Compiling bitflags v2.9.1\n   Compiling smallvec v1.15.1\n   Compiling axio v0.1.1 (https://github.com/Starry-OS/axio.git?rev=e11ca75#e11ca75f)\n   Compiling quote v1.0.40\n   Compiling hashbrown v0.15.4\n   Compiling syn v2.0.104\n   Compiling darling_core v0.13.4\n   Compiling crate_interface v0.1.4\n   Compiling kernel_guard v0.1.2\n   Compiling kspin v0.1.0\n   Compiling darling_macro v0.13.4\n   Compiling darling v0.13.4\n   Compiling inherit-methods-macro v0.1.0\n   Compiling axfs-ng-vfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs)\nerror[E0658]: `let` expressions in this position are unstable\n   --> src/node/dir.rs:159:12\n    |\n159 |         if let Some(entry) = children.remove(name)\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n   --> src/node/dir.rs:160:16\n    |\n160 |             && let Ok(dir) = entry.as_dir()\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n   --> src/node/dir.rs:309:20\n    |\n309 |                 if let Ok(dir) = dst.as_dir()\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: cannot cast `dyn node::dir::DirNodeOps` to `dyn node::NodeOps`, trait upcasting coercion is experimental\n   --> src/node/dir.rs:127:9\n    |\n127 |         &*self.ops\n    |         ^^^^^^^^^^\n    |\n    = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n    = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n    = note: required when coercing `&(dyn node::dir::DirNodeOps + 'static)` into `&(dyn node::NodeOps + 'static)`\n\nerror[E0658]: cannot cast `dyn node::dir::DirNodeOps` to `dyn node::NodeOps`, trait upcasting coercion is experimental\n   --> src/node/dir.rs:133:9\n    |\n133 |         node.ops.clone()\n    |         ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n    = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n    = note: required when coercing `alloc::sync::Arc<dyn node::dir::DirNodeOps>` into `alloc::sync::Arc<(dyn node::NodeOps + 'static)>`\n\nerror[E0658]: cannot cast `dyn node::file::FileNodeOps` to `dyn node::NodeOps`, trait upcasting coercion is experimental\n  --> src/node/file.rs:47:9\n   |\n47 |         node.0.clone()\n   |         ^^^^^^^^^^^^^^\n   |\n   = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n   = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n   = note: required when coercing `alloc::sync::Arc<dyn node::file::FileNodeOps>` into `alloc::sync::Arc<(dyn node::NodeOps + 'static)>`\n\nerror[E0658]: cannot cast `dyn node::file::FileNodeOps` to `dyn node::NodeOps`, trait upcasting coercion is experimental\n   --> src/node/mod.rs:100:33\n    |\n100 |             Node::File(file) => file.inner().clone(),\n    |                                 ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n    = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n    = note: required when coercing `alloc::sync::Arc<dyn node::file::FileNodeOps>` into `alloc::sync::Arc<(dyn node::NodeOps + 'static)>`\n\nerror[E0658]: cannot cast `dyn node::dir::DirNodeOps` to `dyn node::NodeOps`, trait upcasting coercion is experimental\n   --> src/node/mod.rs:101:31\n    |\n101 |             Node::Dir(dir) => dir.inner().clone(),\n    |                               ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n    = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n    = note: required when coercing `alloc::sync::Arc<dyn node::dir::DirNodeOps>` into `alloc::sync::Arc<(dyn node::NodeOps + 'static)>`\n\nerror[E0658]: cannot cast `dyn node::file::FileNodeOps` to `dyn node::NodeOps`, trait upcasting coercion is experimental\n   --> src/node/mod.rs:111:33\n    |\n111 |             Node::File(file) => file.deref(),\n    |                                 ^^^^^^^^^^^^\n    |\n    = note: see issue #65991 <https://github.com/rust-lang/rust/issues/65991> for more information\n    = help: add `#![feature(trait_upcasting)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n    = note: required when coercing `&(dyn node::file::FileNodeOps + 'static)` into `&(dyn node::NodeOps + 'static)`\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `axfs-ng-vfs` (lib) due to 9 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs-ng-vfs, checker=Mirai\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-09-25 4:30:07.134466484 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling fnv v1.0.7\n   Compiling strsim v0.10.0\n   Compiling ident_case v1.0.1\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git?rev=3713143#37131431)\n    Checking log v0.4.21\n    Checking cfg-if v1.0.1\n    Checking bitflags v2.9.1\n    Checking equivalent v1.0.2\n    Checking allocator-api2 v0.2.21\n    Checking foldhash v0.1.5\n    Checking axio v0.1.1 (https://github.com/Starry-OS/axio.git?rev=e11ca75#e11ca75f)\n    Checking smallvec v1.15.1\nerror: could not compile `axio` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs-ng-vfs, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-09-25 4:30:00.765225653 +08:00:00\n    Building axfs-ng-vfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs-ng-vfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling syn v1.0.109\n   Compiling fnv v1.0.7\n   Compiling strsim v0.10.0\n   Compiling ident_case v1.0.1\n   Compiling axerrno v0.1.0\n    Checking cfg-if v1.0.3\n    Checking log v0.4.21\n    Checking allocator-api2 v0.2.21\n    Checking foldhash v0.1.5\n    Checking equivalent v1.0.2\n    Checking axio v0.1.1\n    Checking smallvec v1.15.1\n    Checking bitflags v2.9.4\n    Checking hashbrown v0.15.5\n   Compiling quote v1.0.40\n   Compiling syn v2.0.106\n   Compiling darling_core v0.13.4\n   Compiling crate_interface v0.1.4\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.1\n   Compiling darling_macro v0.13.4\n   Compiling darling v0.13.4\n   Compiling inherit-methods-macro v0.1.0\n Documenting axfs-ng-vfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs)\nerror[E0432]: unresolved imports `axio::IoEvents`, `axio::Pollable`\n  --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/mount.rs:12:12\n   |\n12 | use axio::{IoEvents, Pollable};\n   |            ^^^^^^^^  ^^^^^^^^ no `Pollable` in the root\n   |            |\n   |            no `IoEvents` in the root\n\nerror[E0432]: unresolved import `axio::Pollable`\n --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/node/file.rs:4:5\n  |\n4 | use axio::Pollable;\n  |     ^^^^^^^^^^^^^^ no `Pollable` in the root\n\nerror[E0432]: unresolved imports `axio::IoEvents`, `axio::Pollable`\n  --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/node/mod.rs:20:12\n   |\n20 | use axio::{IoEvents, Pollable};\n   |            ^^^^^^^^  ^^^^^^^^ no `Pollable` in the root\n   |            |\n   |            no `IoEvents` in the root\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not document `axfs-ng-vfs`\n\n-----\n\nerror: failed to build rustdoc for crate axfs-ng-vfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs-ng-vfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "[Geiger] Unsafe code statistics",
          "features": "",
          "count": 1,
          "kinds": {
            "Geiger": [
              "pkg=axfs-ng-vfs, checker=Geiger\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\ntimestamp=2025-09-25 4:30:23.668652504 +08:00:00\n\n\nMetric output format: x/y\n    x = unsafe code used by the build\n    y = total unsafe code found in the crate\n\nSymbols:\n    :) = No `unsafe` usage found, declares #![forbid(unsafe_code)]\n    ?  = No `unsafe` usage found, missing #![forbid(unsafe_code)]\n    !  = `unsafe` usage found\n\nFunctions  Expressions  Impls  Traits  Methods  Dependency\n\n0/0        9/9          0/0    0/0     0/0      !  axfs-ng-vfs 0.1.0\n0/0        0/0          0/0    0/0     0/0      ?  |-- axerrno 0.1.0\n2/2        18/18        1/1    0/0     0/0      !  |   `-- log 0.4.21\n1/1        47/47        0/0    0/0     0/0      !  |-- axio 0.1.1\n0/0        0/0          0/0    0/0     0/0      ?  |   |-- axerrno 0.1.0\n0/0        0/0          0/0    0/0     0/0      ?  |   `-- bitflags 2.9.1\n0/0        0/0          0/0    0/0     0/0      ?  |-- bitflags 2.9.1\n0/0        0/0          0/0    0/0     0/0      ?  |-- cfg-if 1.0.1\n1/1        1299/1520    19/22  1/1     72/85    !  |-- hashbrown 0.15.4\n2/3        819/903      12/13  1/1     28/32    !  |   |-- allocator-api2 0.2.21\n0/0        0/0          0/0    0/0     0/0      ?  |   |-- equivalent 1.0.2\n0/0        11/11        1/1    0/0     0/0      !  |   `-- foldhash 0.1.5\n0/0        0/0          0/0    0/0     0/0      ?  |-- inherit-methods-macro 0.1.0\n0/0        0/0          0/0    0/0     0/0      ?  |   |-- darling 0.13.4\n0/0        0/0          0/0    0/0     0/0      ?  |   |   |-- darling_core 0.13.4\n0/0        0/0          0/0    0/0     0/0      ?  |   |   |   |-- fnv 1.0.7\n0/0        0/0          0/0    0/0     0/0      ?  |   |   |   |-- ident_case 1.0.1\n0/0        14/14        0/0    0/0     3/3      !  |   |   |   |-- proc-macro2 1.0.95\n0/0        4/4          0/0    0/0     0/0      !  |   |   |   |   `-- unicode-ident 1.0.18\n0/0        0/0          0/0    0/0     0/0      ?  |   |   |   |-- quote 1.0.40\n0/0        14/14        0/0    0/0     3/3      !  |   |   |   |   `-- proc-macro2 1.0.95\n0/0        0/0          0/0    0/0     0/0      :) |   |   |   |-- strsim 0.10.0\n0/0        69/69        3/3    0/0     2/2      !  |   |   |   `-- syn 1.0.109\n0/0        14/14        0/0    0/0     3/3      !  |   |   |       |-- proc-macro2 1.0.95\n0/0        0/0          0/0    0/0     0/0      ?  |   |   |       |-- quote 1.0.40\n0/0        4/4          0/0    0/0     0/0      !  |   |   |       `-- unicode-ident 1.0.18\n0/0        0/0          0/0    0/0     0/0      ?  |   |   `-- darling_macro 0.13.4\n0/0        0/0          0/0    0/0     0/0      ?  |   |       |-- darling_core 0.13.4\n0/0        0/0          0/0    0/0     0/0      ?  |   |       |-- quote 1.0.40\n0/0        69/69        3/3    0/0     2/2      !  |   |       `-- syn 1.0.109\n0/0        14/14        0/0    0/0     3/3      !  |   |-- proc-macro2 1.0.95\n0/0        0/0          0/0    0/0     0/0      ?  |   |-- quote 1.0.40\n0/0        69/69        3/3    0/0     2/2      !  |   `-- syn 1.0.109\n0/0        20/20        2/2    0/0     1/1      !  |-- kspin 0.1.0\n0/0        0/0          0/0    0/0     0/0      ?  |   |-- cfg-if 1.0.1\n0/0        3/9          0/0    0/0     0/0      !  |   `-- kernel_guard 0.1.2\n0/0        0/0          0/0    0/0     0/0      ?  |       |-- cfg-if 1.0.1\n0/0        0/0          0/0    0/0     0/0      ?  |       `-- crate_interface 0.1.4\n0/0        14/14        0/0    0/0     3/3      !  |           |-- proc-macro2 1.0.95\n0/0        0/0          0/0    0/0     0/0      ?  |           |-- quote 1.0.40\n0/0        88/88        3/3    0/0     2/2      !  |           `-- syn 2.0.104\n0/0        14/14        0/0    0/0     3/3      !  |               |-- proc-macro2 1.0.95\n0/0        0/0          0/0    0/0     0/0      ?  |               |-- quote 1.0.40\n0/0        4/4          0/0    0/0     0/0      !  |               `-- unicode-ident 1.0.18\n2/2        18/18        1/1    0/0     0/0      !  |-- log 0.4.21\n1/1        554/556      7/7    1/1     14/14    !  `-- smallvec 1.15.1\n\n7/8        2955/3268    48/52  3/3     122/139\n\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-09-24T20:30:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-24T20:30:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axfs-ng-vfs, checker=Outdated\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-09-25 4:30:16.215105222 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nbitflags   2.9.1    2.9.4   2.9.4   Normal  ---\ncfg-if     1.0.1    1.0.3   1.0.3   Normal  ---\nhashbrown  0.15.4   0.15.5  0.16.0  Normal  ---\nkspin      0.1.0    0.1.1   0.1.1   Normal  ---\nlog        0.4.21   ---     0.4.28  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfs-ng-vfs, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-09-25 4:30:07.011395399 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs-ng-vfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs-ng-vfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.19\n   Compiling syn v1.0.109\n   Compiling fnv v1.0.7\n   Compiling strsim v0.10.0\n   Compiling ident_case v1.0.1\n   Compiling axerrno v0.1.0\n    Checking cfg-if v1.0.3\n    Checking log v0.4.21\n    Checking allocator-api2 v0.2.21\n    Checking foldhash v0.1.5\n    Checking equivalent v1.0.2\n    Checking axio v0.1.1\n    Checking smallvec v1.15.1\n    Checking bitflags v2.9.4\n    Checking hashbrown v0.15.5\n   Compiling quote v1.0.40\n   Compiling syn v2.0.106\n   Compiling darling_core v0.13.4\n   Compiling crate_interface v0.1.4\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.1\n   Compiling darling_macro v0.13.4\n   Compiling darling v0.13.4\n   Compiling inherit-methods-macro v0.1.0\n Documenting axfs-ng-vfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs)\nerror[E0432]: unresolved imports `axio::IoEvents`, `axio::Pollable`\n  --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/mount.rs:12:12\n   |\n12 | use axio::{IoEvents, Pollable};\n   |            ^^^^^^^^  ^^^^^^^^ no `Pollable` in the root\n   |            |\n   |            no `IoEvents` in the root\n\nerror[E0432]: unresolved import `axio::Pollable`\n --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/node/file.rs:4:5\n  |\n4 | use axio::Pollable;\n  |     ^^^^^^^^^^^^^^ no `Pollable` in the root\n\nerror[E0432]: unresolved imports `axio::IoEvents`, `axio::Pollable`\n  --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/node/mod.rs:20:12\n   |\n20 | use axio::{IoEvents, Pollable};\n   |            ^^^^^^^^  ^^^^^^^^ no `Pollable` in the root\n   |            |\n   |            no `IoEvents` in the root\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not document `axfs-ng-vfs`\n\n-----\n\nerror: failed to build rustdoc for crate axfs-ng-vfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs-ng-vfs v0.1.0\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}