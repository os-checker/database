{
  "repo": {
    "user": "Starry-OS",
    "repo": "axfs-ng-vfs"
  },
  "data": [
    {
      "user": "Starry-OS",
      "repo": "axfs-ng-vfs",
      "pkg": "axfs-ng-vfs",
      "count": 23,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axerrno::bail`\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:28:5\n   |\n28 | use axerrno::bail;\n   |     ^^^^^^^^^^^^^ no `bail` in the root\n\n",
              "error[E0433]: failed to resolve: could not find `bail` in `axerrno`\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:93:26\n   |\n93 |                 axerrno::bail!(ENOMEM, e);\n   |                          ^^^^ could not find `bail` in `axerrno`\n\n",
              "error[E0308]: mismatched types\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:186:28\n    |\n186 |           if !buf.is_empty() {\n    |  ____________________________^\n187 | |             bail!(EIO, \"failed to read whole buffer\");\n188 | |         } else {\n    | |_________^ expected `Result<(), LinuxError>`, found `()`\n    |\n    = note:   expected enum `Result<(), LinuxError>`\n            found unit type `()`\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `axerrno::bail`\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:28:5\n   |\n28 | use axerrno::bail;\n   |     ^^^^^^^^^^^^^ no `bail` in the root\n\n",
              "error[E0433]: failed to resolve: could not find `bail` in `axerrno`\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:93:26\n   |\n93 |                 axerrno::bail!(ENOMEM, e);\n   |                          ^^^^ could not find `bail` in `axerrno`\n\n",
              "error[E0308]: mismatched types\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:186:28\n    |\n186 |           if !buf.is_empty() {\n    |  ____________________________^\n187 | |             bail!(EIO, \"failed to read whole buffer\");\n188 | |         } else {\n    | |_________^ expected `Result<(), LinuxError>`, found `()`\n    |\n    = note:   expected enum `Result<(), LinuxError>`\n            found unit type `()`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/buffered/reader.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find value `EINVAL` in this scope\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/buffered/reader.rs:139:38\n    |\n139 |                 .map_err(|_| ax_err!(EINVAL, \"invalid UTF-8 sequence in stream\"))?;\n    |                                      ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these unit variants\n    |\n1   + use crate::Error::EINVAL;\n    |\n1   + use axerrno::LinuxError::EINVAL;\n    |\n\n"
            ],
            "Mirai": [
              "error[E0425]: cannot find value `EINVAL` in this scope\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/buffered/reader.rs:139:38\n    |\n139 |                 .map_err(|_| ax_err!(EINVAL, \"invalid UTF-8 sequence in stream\"))?;\n    |                                      ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these unit variants\n    |\n1   + use crate::Error::EINVAL;\n    |\n1   + use axerrno::LinuxError::EINVAL;\n    |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/impls.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved import `axerrno::bail`\n --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/impls.rs:3:5\n  |\n3 | use axerrno::bail;\n  |     ^^^^^^^^^^^^^ no `bail` in the root\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved import `axerrno::bail`\n --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/impls.rs:3:5\n  |\n3 | use axerrno::bail;\n  |     ^^^^^^^^^^^^^ no `bail` in the root\n\n"
            ]
          }
        },
        {
          "file": "src/types.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/types.rs (original lines from 7 to 8)\n-    Unknown         = 0,\n-    Fifo            = 0o1,\n+    Unknown = 0,\n+    Fifo = 0o1,\n",
              "file: /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/types.rs (original lines from 10 to 14)\n-    Directory       = 0o4,\n-    BlockDevice     = 0o6,\n-    RegularFile     = 0o10,\n-    Symlink         = 0o12,\n-    Socket          = 0o14,\n+    Directory = 0o4,\n+    BlockDevice = 0o6,\n+    RegularFile = 0o10,\n+    Symlink = 0o12,\n+    Socket = 0o14,\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs-ng-vfs, checker=Clippy\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-09-09 4:28:42.960876663 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling fnv v1.0.7\n   Compiling strsim v0.10.0\n   Compiling ident_case v1.0.1\n   Compiling axerrno v0.1.0\n    Checking cfg-if v1.0.1\n    Checking log v0.4.21\n    Checking equivalent v1.0.2\n    Checking bitflags v2.9.1\n    Checking allocator-api2 v0.2.21\n    Checking foldhash v0.1.5\n    Checking axio v0.1.1 (https://github.com/Starry-OS/axio.git#2aa061b7)\n    Checking smallvec v1.15.1\nerror: could not compile `axio` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs-ng-vfs, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-09-09 4:28:52.884329734 +08:00:00\n     Removed 0 files\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling fnv v1.0.7\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/syn-49839b08cea53f70/build_script_build-49839b08cea53f70.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/fnv-1dce063efb2ea7a2.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/proc-macro2-4b131a9cc84a5cde/build_script_build-4b131a9cc84a5cde.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/unicode_ident-1d1395cd7a8bd8da.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libfnv-1dce063efb2ea7a2.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libfnv-1dce063efb2ea7a2.rlib\",\"emit\":\"link\"}\n   Compiling ident_case v1.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libunicode_ident-1d1395cd7a8bd8da.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libunicode_ident-1d1395cd7a8bd8da.rlib\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/ident_case-a52beed4582375b5.d\",\"emit\":\"dep-info\"}\n   Compiling strsim v0.10.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libident_case-a52beed4582375b5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/strsim-b8f7b81156e42694.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libident_case-a52beed4582375b5.rlib\",\"emit\":\"link\"}\n   Compiling axerrno v0.1.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/axerrno-09d22c82c598154d/build_script_build-09d22c82c598154d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libstrsim-b8f7b81156e42694.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/syn-49839b08cea53f70/build_script_build-49839b08cea53f70\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/proc-macro2-4b131a9cc84a5cde/build_script_build-4b131a9cc84a5cde\",\"emit\":\"link\"}\n    Checking log v0.4.21\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/log-3e4ab308c424f8a7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/proc_macro2-d52e1b0fd08ab4a5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/build/axerrno-09d22c82c598154d/build_script_build-09d22c82c598154d\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libstrsim-b8f7b81156e42694.rlib\",\"emit\":\"link\"}\n    Checking cfg-if v1.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/liblog-3e4ab308c424f8a7.rmeta\",\"emit\":\"metadata\"}\n    Checking foldhash v0.1.5\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/cfg_if-375191e112da1984.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libcfg_if-375191e112da1984.rmeta\",\"emit\":\"metadata\"}\n    Checking bitflags v2.9.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/foldhash-950ed68680bcf804.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/axerrno-1e6240827ea7c1f7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/bitflags-7c3693fde2daac8d.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libaxerrno-1e6240827ea7c1f7.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libfoldhash-950ed68680bcf804.rmeta\",\"emit\":\"metadata\"}\n    Checking allocator-api2 v0.2.21\n    Checking equivalent v1.0.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/equivalent-dbd0be9061b7acbc.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libequivalent-dbd0be9061b7acbc.rmeta\",\"emit\":\"metadata\"}\n    Checking smallvec v1.15.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libbitflags-7c3693fde2daac8d.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/allocator_api2-c74e46d1a09fbb5b.d\",\"emit\":\"dep-info\"}\n    Checking axio v0.1.1 (https://github.com/Starry-OS/axio.git#2aa061b7)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/smallvec-c326a5f51f7d7304.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"unresolved import `axerrno::bail`\",\"code\":{\"code\":\"E0432\",\"explanation\":\"An import was unresolved.\\n\\nErroneous code example:\\n\\n```compile_fail,E0432\\nuse something::Foo; // error: unresolved import `something::Foo`.\\n```\\n\\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\\nimport items relative to the current and parent modules, use the `self::` and\\n`super::` prefixes, respectively.\\n\\nIn Rust 2018 or later, paths in `use` statements are relative to the current\\nmodule unless they begin with the name of a crate or a literal `crate::`, in\\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\\nand `super::` prefixes refer to the current and parent modules respectively.\\n\\nAlso verify that you didn't misspell the import name and that the import exists\\nin the module from where you tried to import it. Example:\\n\\n```\\nuse self::something::Foo; // Ok.\\n\\nmod something {\\n    pub struct Foo;\\n}\\n# fn main() {}\\n```\\n\\nIf you tried to use a module from an external crate and are using Rust 2015,\\nyou may have missed the `extern crate` declaration (which is usually placed in\\nthe crate root):\\n\\n```edition2015\\nextern crate core; // Required to use the `core` crate in Rust 2015.\\n\\nuse core::any;\\n# fn main() {}\\n```\\n\\nSince Rust 2018 the `extern crate` declaration is not required and\\nyou can instead just `use` it:\\n\\n```edition2018\\nuse core::any; // No extern crate required in Rust 2018.\\n# fn main() {}\\n```\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/impls.rs\",\"byte_start\":27,\"byte_end\":40,\"line_start\":3,\"line_end\":3,\"column_start\":5,\"column_end\":18,\"is_primary\":true,\"text\":[{\"text\":\"use axerrno::bail;\",\"highlight_start\":5,\"highlight_end\":18}],\"label\":\"no `bail` in the root\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0432]\\u001b[0m\\u001b[0m\\u001b[1m: unresolved import `axerrno::bail`\\u001b[0m\\n\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/impls.rs:3:5\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m3\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0muse axerrno::bail;\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mno `bail` in the root\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"unresolved import `axerrno::bail`\",\"code\":{\"code\":\"E0432\",\"explanation\":\"An import was unresolved.\\n\\nErroneous code example:\\n\\n```compile_fail,E0432\\nuse something::Foo; // error: unresolved import `something::Foo`.\\n```\\n\\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\\nimport items relative to the current and parent modules, use the `self::` and\\n`super::` prefixes, respectively.\\n\\nIn Rust 2018 or later, paths in `use` statements are relative to the current\\nmodule unless they begin with the name of a crate or a literal `crate::`, in\\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\\nand `super::` prefixes refer to the current and parent modules respectively.\\n\\nAlso verify that you didn't misspell the import name and that the import exists\\nin the module from where you tried to import it. Example:\\n\\n```\\nuse self::something::Foo; // Ok.\\n\\nmod something {\\n    pub struct Foo;\\n}\\n# fn main() {}\\n```\\n\\nIf you tried to use a module from an external crate and are using Rust 2015,\\nyou may have missed the `extern crate` declaration (which is usually placed in\\nthe crate root):\\n\\n```edition2015\\nextern crate core; // Required to use the `core` crate in Rust 2015.\\n\\nuse core::any;\\n# fn main() {}\\n```\\n\\nSince Rust 2018 the `extern crate` declaration is not required and\\nyou can instead just `use` it:\\n\\n```edition2018\\nuse core::any; // No extern crate required in Rust 2018.\\n# fn main() {}\\n```\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs\",\"byte_start\":461,\"byte_end\":474,\"line_start\":28,\"line_end\":28,\"column_start\":5,\"column_end\":18,\"is_primary\":true,\"text\":[{\"text\":\"use axerrno::bail;\",\"highlight_start\":5,\"highlight_end\":18}],\"label\":\"no `bail` in the root\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0432]\\u001b[0m\\u001b[0m\\u001b[1m: unresolved import `axerrno::bail`\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:28:5\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m28\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0muse axerrno::bail;\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mno `bail` in the root\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"failed to resolve: could not find `bail` in `axerrno`\",\"code\":{\"code\":\"E0433\",\"explanation\":\"An undeclared crate, module, or type was used.\\n\\nErroneous code example:\\n\\n```compile_fail,E0433\\nlet map = HashMap::new();\\n// error: failed to resolve: use of undeclared type `HashMap`\\n```\\n\\nPlease verify you didn't misspell the type/module's name or that you didn't\\nforget to import it:\\n\\n```\\nuse std::collections::HashMap; // HashMap has been imported.\\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\\n```\\n\\nIf you've expected to use a crate name:\\n\\n```compile_fail\\nuse ferris_wheel::BigO;\\n// error: failed to resolve: use of undeclared module or unlinked crate\\n```\\n\\nMake sure the crate has been added as a dependency in `Cargo.toml`.\\n\\nTo use a module from your current crate, add the `crate::` prefix to the path.\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs\",\"byte_start\":2733,\"byte_end\":2737,\"line_start\":93,\"line_end\":93,\"column_start\":26,\"column_end\":30,\"is_primary\":true,\"text\":[{\"text\":\"                axerrno::bail!(ENOMEM, e);\",\"highlight_start\":26,\"highlight_end\":30}],\"label\":\"could not find `bail` in `axerrno`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0433]\\u001b[0m\\u001b[0m\\u001b[1m: failed to resolve: could not find `bail` in `axerrno`\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:93:26\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m93\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m                axerrno::bail!(ENOMEM, e);\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                          \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mcould not find `bail` in `axerrno`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"cannot find value `EINVAL` in this scope\",\"code\":{\"code\":\"E0425\",\"explanation\":\"An unresolved name was used.\\n\\nErroneous code examples:\\n\\n```compile_fail,E0425\\nsomething_that_doesnt_exist::foo;\\n// error: unresolved name `something_that_doesnt_exist::foo`\\n\\n// or:\\n\\ntrait Foo {\\n    fn bar() {\\n        Self; // error: unresolved name `Self`\\n    }\\n}\\n\\n// or:\\n\\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\\n```\\n\\nPlease verify that the name wasn't misspelled and ensure that the\\nidentifier being referred to is valid for the given situation. Example:\\n\\n```\\nenum something_that_does_exist {\\n    Foo,\\n}\\n```\\n\\nOr:\\n\\n```\\nmod something_that_does_exist {\\n    pub static foo : i32 = 0i32;\\n}\\n\\nsomething_that_does_exist::foo; // ok!\\n```\\n\\nOr:\\n\\n```\\nlet unknown_variable = 12u32;\\nlet x = unknown_variable; // ok!\\n```\\n\\nIf the item is not defined in the current module, it must be imported using a\\n`use` statement, like so:\\n\\n```\\n# mod foo { pub fn bar() {} }\\n# fn main() {\\nuse foo::bar;\\nbar();\\n# }\\n```\\n\\nIf the item you are importing is not defined in some super-module of the\\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/buffered/reader.rs\",\"byte_start\":5036,\"byte_end\":5042,\"line_start\":139,\"line_end\":139,\"column_start\":38,\"column_end\":44,\"is_primary\":true,\"text\":[{\"text\":\"                .map_err(|_| ax_err!(EINVAL, \\\"invalid UTF-8 sequence in stream\\\"))?;\",\"highlight_start\":38,\"highlight_end\":44}],\"label\":\"not found in this scope\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"consider importing one of these unit variants\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/buffered/reader.rs\",\"byte_start\":0,\"byte_end\":0,\"line_start\":1,\"line_end\":1,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"use crate::{BufRead, Read, Result};\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":\"use crate::Error::EINVAL;\\n\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null},{\"file_name\":\"/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/buffered/reader.rs\",\"byte_start\":0,\"byte_end\":0,\"line_start\":1,\"line_end\":1,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"use crate::{BufRead, Read, Result};\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":\"use axerrno::LinuxError::EINVAL;\\n\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0425]\\u001b[0m\\u001b[0m\\u001b[1m: cannot find value `EINVAL` in this scope\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/buffered/reader.rs:139:38\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m139\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m                .map_err(|_| ax_err!(EINVAL, \\\"invalid UTF-8 sequence in stream\\\"))?;\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                      \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mnot found in this scope\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: consider importing one of these unit variants\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m1\\u001b[0m\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[38;5;10m+ use crate::Error::EINVAL;\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m1\\u001b[0m\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[38;5;10m+ use axerrno::LinuxError::EINVAL;\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/axio-a0eac856f2b0de87.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"Expected type did not match the received type.\\n\\nErroneous code examples:\\n\\n```compile_fail,E0308\\nfn plus_one(x: i32) -> i32 {\\n    x + 1\\n}\\n\\nplus_one(\\\"Not a number\\\");\\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\\n\\nif \\\"Not a bool\\\" {\\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\\n}\\n\\nlet x: f32 = \\\"Not a float\\\";\\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\\n//     |\\n//     expected due to this\\n```\\n\\nThis error occurs when an expression was used in a place where the compiler\\nexpected an expression of a different type. It can occur in several cases, the\\nmost common being when calling a function and passing an argument which has a\\ndifferent type than the matching type in the function declaration.\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs\",\"byte_start\":6239,\"byte_end\":6305,\"line_start\":186,\"line_end\":188,\"column_start\":28,\"column_end\":10,\"is_primary\":true,\"text\":[{\"text\":\"        if !buf.is_empty() {\",\"highlight_start\":28,\"highlight_end\":29},{\"text\":\"            bail!(EIO, \\\"failed to read whole buffer\\\");\",\"highlight_start\":1,\"highlight_end\":55},{\"text\":\"        } else {\",\"highlight_start\":1,\"highlight_end\":10}],\"label\":\"expected `Result<(), LinuxError>`, found `()`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"  expected enum `Result<(), LinuxError>`\\nfound unit type `()`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0308]\\u001b[0m\\u001b[0m\\u001b[1m: mismatched types\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:186:28\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m186\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m   \\u001b[0m\\u001b[0m        if !buf.is_empty() {\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m ____________________________^\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m187\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m            bail!(EIO, \\\"failed to read whole buffer\\\");\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m188\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        } else {\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m|_________^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mexpected `Result<(), LinuxError>`, found `()`\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m= \\u001b[0m\\u001b[0m\\u001b[1mnote\\u001b[0m\\u001b[0m:   expected enum `\\u001b[0m\\u001b[0m\\u001b[1m\\u001b[35mResult<(), LinuxError>\\u001b[0m\\u001b[0m`\\u001b[0m\\n\\u001b[0m            found unit type `\\u001b[0m\\u001b[0m\\u001b[1m\\u001b[35m()\\u001b[0m\\u001b[0m`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libsmallvec-c326a5f51f7d7304.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"aborting due to 5 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to 5 previous errors\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"Some errors have detailed explanations: E0308, E0425, E0432, E0433.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1mSome errors have detailed explanations: E0308, E0425, E0432, E0433.\\u001b[0m\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"For more information about an error, try `rustc --explain E0308`.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1mFor more information about an error, try `rustc --explain E0308`.\\u001b[0m\\n\"}\nerror: could not compile `axio` (lib)\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2025-06-26-x86_64-unknown-linux-gnu/bin/rustc --crate-name axio --edition=2021 /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --cfg 'feature=\"alloc\"' --cfg 'feature=\"default\"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values(\"alloc\", \"default\"))' -C metadata=78287c3cc7ba027e -C extra-filename=-a0eac856f2b0de87 --out-dir /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps -L dependency=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps --extern axerrno=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libaxerrno-1e6240827ea7c1f7.rmeta --extern bitflags=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libbitflags-7c3693fde2daac8d.rmeta --cap-lints allow` (exit status: 1)\nwarning: build failed, waiting for other jobs to finish...\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libproc_macro2-d52e1b0fd08ab4a5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/liballocator_api2-c74e46d1a09fbb5b.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/target/debug/deps/libproc_macro2-d52e1b0fd08ab4a5.rlib\",\"emit\":\"link\"}\nerror: Cargo(\"1 job failed\")\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs-ng-vfs, checker=Lockbud\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-09-09 4:28:50.620605916 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.10.0\n   Compiling axerrno v0.1.0\n   Compiling cfg-if v1.0.1\n   Compiling log v0.4.21\n   Compiling allocator-api2 v0.2.21\n[2025-09-08T20:28:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-08T20:28:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling equivalent v1.0.2\n   Compiling foldhash v0.1.5\n   Compiling bitflags v2.9.1\n   Compiling smallvec v1.15.1\n   Compiling hashbrown v0.15.4\n   Compiling axio v0.1.1 (https://github.com/Starry-OS/axio.git#2aa061b7)\nerror[E0432]: unresolved import `axerrno::bail`\n --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/impls.rs:3:5\n  |\n3 | use axerrno::bail;\n  |     ^^^^^^^^^^^^^ no `bail` in the root\n\nerror[E0432]: unresolved import `axerrno::bail`\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:28:5\n   |\n28 | use axerrno::bail;\n   |     ^^^^^^^^^^^^^ no `bail` in the root\n\nerror[E0433]: failed to resolve: could not find `bail` in `axerrno`\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:93:26\n   |\n93 |                 axerrno::bail!(ENOMEM, e);\n   |                          ^^^^ could not find `bail` in `axerrno`\n\nerror[E0425]: cannot find value `EINVAL` in this scope\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/buffered/reader.rs:139:38\n    |\n139 |                 .map_err(|_| ax_err!(EINVAL, \"invalid UTF-8 sequence in stream\"))?;\n    |                                      ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these unit variants\n    |\n1   + use crate::Error::EINVAL;\n    |\n1   + use axerrno::LinuxError::EINVAL;\n    |\n\n   Compiling quote v1.0.40\nerror[E0308]: mismatched types\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:186:28\n    |\n186 |           if !buf.is_empty() {\n    |  ____________________________^\n187 | |             bail!(EIO, \"failed to read whole buffer\");\n188 | |         } else {\n    | |_________^ expected `Result<(), LinuxError>`, found `()`\n    |\n    = note:   expected enum `core::result::Result<(), axerrno::LinuxError>`\n            found unit type `()`\n\nSome errors have detailed explanations: E0308, E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0308`.\nerror: could not compile `axio` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs-ng-vfs, checker=Mirai\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-09-09 4:28:49.686277083 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling ident_case v1.0.1\n   Compiling fnv v1.0.7\n   Compiling strsim v0.10.0\n   Compiling axerrno v0.1.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.1\n    Checking bitflags v2.9.1\n    Checking allocator-api2 v0.2.21\n    Checking equivalent v1.0.2\n    Checking foldhash v0.1.5\n    Checking axio v0.1.1 (https://github.com/Starry-OS/axio.git#2aa061b7)\n    Checking smallvec v1.15.1\nerror: could not compile `axio` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs-ng-vfs, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-09-09 4:28:43.885228055 +08:00:00\n    Building axfs-ng-vfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs-ng-vfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.10.0\n   Compiling fnv v1.0.7\n   Compiling axerrno v0.1.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.3\n    Checking allocator-api2 v0.2.21\n    Checking foldhash v0.1.5\n    Checking equivalent v1.0.2\n    Checking axio v0.1.1\n    Checking bitflags v2.9.4\n    Checking smallvec v1.15.1\n   Compiling quote v1.0.40\n    Checking hashbrown v0.15.5\n   Compiling syn v2.0.106\n   Compiling darling_core v0.13.4\n   Compiling crate_interface v0.1.4\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.1\n   Compiling darling_macro v0.13.4\n   Compiling darling v0.13.4\n   Compiling inherit-methods-macro v0.1.0\n Documenting axfs-ng-vfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs)\nerror[E0432]: unresolved imports `axio::IoEvents`, `axio::Pollable`\n  --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/mount.rs:12:12\n   |\n12 | use axio::{IoEvents, Pollable};\n   |            ^^^^^^^^  ^^^^^^^^ no `Pollable` in the root\n   |            |\n   |            no `IoEvents` in the root\n\nerror[E0432]: unresolved import `axio::Pollable`\n --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/node/file.rs:4:5\n  |\n4 | use axio::Pollable;\n  |     ^^^^^^^^^^^^^^ no `Pollable` in the root\n\nerror[E0432]: unresolved imports `axio::IoEvents`, `axio::Pollable`\n  --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/node/mod.rs:20:12\n   |\n20 | use axio::{IoEvents, Pollable};\n   |            ^^^^^^^^  ^^^^^^^^ no `Pollable` in the root\n   |            |\n   |            no `IoEvents` in the root\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not document `axfs-ng-vfs`\n\n-----\n\nerror: failed to build rustdoc for crate axfs-ng-vfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs-ng-vfs v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axfs-ng-vfs, checker=Udeps\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \n// timestamp=2025-09-09 4:28:53.776778143 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling fnv v1.0.7\n   Compiling strsim v0.10.0\n   Compiling ident_case v1.0.1\n   Compiling axerrno v0.1.0\n    Checking cfg-if v1.0.1\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking allocator-api2 v0.2.21\n    Checking equivalent v1.0.2\n    Checking foldhash v0.1.5\n    Checking axio v0.1.1 (https://github.com/Starry-OS/axio.git#2aa061b7)\nerror[E0432]: unresolved import `axerrno::bail`\n --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/impls.rs:3:5\n  |\n3 | use axerrno::bail;\n  |     ^^^^^^^^^^^^^ no `bail` in the root\n\nerror[E0432]: unresolved import `axerrno::bail`\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:28:5\n   |\n28 | use axerrno::bail;\n   |     ^^^^^^^^^^^^^ no `bail` in the root\n\nerror[E0433]: failed to resolve: could not find `bail` in `axerrno`\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:93:26\n   |\n93 |                 axerrno::bail!(ENOMEM, e);\n   |                          ^^^^ could not find `bail` in `axerrno`\n\nerror[E0425]: cannot find value `EINVAL` in this scope\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/buffered/reader.rs:139:38\n    |\n139 |                 .map_err(|_| ax_err!(EINVAL, \"invalid UTF-8 sequence in stream\"))?;\n    |                                      ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these unit variants\n    |\n1   + use crate::Error::EINVAL;\n    |\n1   + use axerrno::LinuxError::EINVAL;\n    |\n\n    Checking smallvec v1.15.1\nerror[E0308]: mismatched types\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:186:28\n    |\n186 |           if !buf.is_empty() {\n    |  ____________________________^\n187 | |             bail!(EIO, \"failed to read whole buffer\");\n188 | |         } else {\n    | |_________^ expected `Result<(), LinuxError>`, found `()`\n    |\n    = note:   expected enum `Result<(), LinuxError>`\n            found unit type `()`\n\nSome errors have detailed explanations: E0308, E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0308`.\nerror: could not compile `axio` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-09-08T20:28:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-08T20:28:51Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=axfs-ng-vfs, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-09-09 4:28:54.657400913 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling fnv v1.0.7\n   Compiling strsim v0.10.0\n   Compiling ident_case v1.0.1\n   Compiling axerrno v0.1.0\n    Checking cfg-if v1.0.1\n    Checking log v0.4.21\n    Checking bitflags v2.9.1\n    Checking allocator-api2 v0.2.21\n    Checking equivalent v1.0.2\n    Checking foldhash v0.1.5\n    Checking axio v0.1.1 (https://github.com/Starry-OS/axio.git#2aa061b7)\nerror[E0432]: unresolved import `axerrno::bail`\n --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/impls.rs:3:5\n  |\n3 | use axerrno::bail;\n  |     ^^^^^^^^^^^^^ no `bail` in the root\n\nerror[E0432]: unresolved import `axerrno::bail`\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:28:5\n   |\n28 | use axerrno::bail;\n   |     ^^^^^^^^^^^^^ no `bail` in the root\n\nerror[E0433]: failed to resolve: could not find `bail` in `axerrno`\n  --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:93:26\n   |\n93 |                 axerrno::bail!(ENOMEM, e);\n   |                          ^^^^ could not find `bail` in `axerrno`\n\nerror[E0425]: cannot find value `EINVAL` in this scope\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/buffered/reader.rs:139:38\n    |\n139 |                 .map_err(|_| ax_err!(EINVAL, \"invalid UTF-8 sequence in stream\"))?;\n    |                                      ^^^^^^ not found in this scope\n    |\nhelp: consider importing one of these unit variants\n    |\n1   + use crate::Error::EINVAL;\n    |\n1   + use axerrno::LinuxError::EINVAL;\n    |\n\n    Checking smallvec v1.15.1\nerror[E0308]: mismatched types\n   --> /home/runner/.cargo/git/checkouts/axio-00998c4fb7c77d99/2aa061b/src/lib.rs:186:28\n    |\n186 |           if !buf.is_empty() {\n    |  ____________________________^\n187 | |             bail!(EIO, \"failed to read whole buffer\");\n188 | |         } else {\n    | |_________^ expected `Result<(), LinuxError>`, found `()`\n    |\n    = note:   expected enum `Result<(), LinuxError>`\n            found unit type `()`\n\nSome errors have detailed explanations: E0308, E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0308`.\nerror: could not compile `axio` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axfs-ng-vfs, checker=Outdated\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-09-09 4:28:52.822176433 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\nbitflags   2.9.1    2.9.4   2.9.4   Normal  ---\ncfg-if     1.0.1    1.0.3   1.0.3   Normal  ---\nhashbrown  0.15.4   0.15.5  0.16.0  Normal  ---\nkspin      0.1.0    0.1.1   0.1.1   Normal  ---\nlog        0.4.21   ---     0.4.28  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axfs-ng-vfs, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-09-09 4:28:49.589111366 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs-ng-vfs v0.1.0 (current)\nerror: running cargo-doc on crate 'axfs-ng-vfs' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.18\n   Compiling syn v1.0.109\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.10.0\n   Compiling fnv v1.0.7\n   Compiling axerrno v0.1.0\n    Checking log v0.4.21\n    Checking cfg-if v1.0.3\n    Checking allocator-api2 v0.2.21\n    Checking foldhash v0.1.5\n    Checking equivalent v1.0.2\n    Checking axio v0.1.1\n    Checking bitflags v2.9.4\n    Checking smallvec v1.15.1\n   Compiling quote v1.0.40\n    Checking hashbrown v0.15.5\n   Compiling syn v2.0.106\n   Compiling darling_core v0.13.4\n   Compiling crate_interface v0.1.4\n    Checking kernel_guard v0.1.2\n    Checking kspin v0.1.1\n   Compiling darling_macro v0.13.4\n   Compiling darling v0.13.4\n   Compiling inherit-methods-macro v0.1.0\n Documenting axfs-ng-vfs v0.1.0 (/home/runner/check/batch_1/Starry-OS/axfs-ng-vfs)\nerror[E0432]: unresolved imports `axio::IoEvents`, `axio::Pollable`\n  --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/mount.rs:12:12\n   |\n12 | use axio::{IoEvents, Pollable};\n   |            ^^^^^^^^  ^^^^^^^^ no `Pollable` in the root\n   |            |\n   |            no `IoEvents` in the root\n\nerror[E0432]: unresolved import `axio::Pollable`\n --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/node/file.rs:4:5\n  |\n4 | use axio::Pollable;\n  |     ^^^^^^^^^^^^^^ no `Pollable` in the root\n\nerror[E0432]: unresolved imports `axio::IoEvents`, `axio::Pollable`\n  --> /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs/src/node/mod.rs:20:12\n   |\n20 | use axio::{IoEvents, Pollable};\n   |            ^^^^^^^^  ^^^^^^^^ no `Pollable` in the root\n   |            |\n   |            no `IoEvents` in the root\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not document `axfs-ng-vfs`\n\n-----\n\nerror: failed to build rustdoc for crate axfs-ng-vfs v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/Starry-OS/axfs-ng-vfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axfs-ng-vfs v0.1.0\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}