{
  "repo": {
    "user": "os-checker",
    "repo": "os-checker-test-suite"
  },
  "data": [
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "buildrs-failure",
      "count": 2,
      "raw_reports": [
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=buildrs-failure, checker=Udeps\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-27 23:16:52.81889718 +08:00:00\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-bbf1f06fa40384c7/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
            ]
          }
        },
        {
          "file": "[udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=buildrs-failure, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-27 23:16:52.993909907 +08:00:00\n\n\nstdout:\n\nstderr:\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n   Compiling buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)\nerror: failed to run custom build command for `buildrs-failure v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/buildrs-failure)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/debug/build/buildrs-failure-bbf1f06fa40384c7/build-script-build` (exit status: 101)\n  --- stderr\n\n  thread 'main' panicked at buildrs-failure/build.rs:2:5:\n  Test as a failure in build script.\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "updes-checks-this",
      "count": 1,
      "raw_reports": [
        {
          "file": "[udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=updes-checks-this, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/updes-checks-this\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-27 23:16:53.578731421 +08:00:00\n\n\nstdout:\nunused dependencies:\n`updes-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/updes-checks-this)`\n└─── dependencies\n     └─── \"log\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\nwarning: /home/runner/check/batch_1/os-checker/os-checker-test-suite/miri-checks-this/Cargo.toml: no edition set: defaulting to the 2015 edition while the latest is 2024\n    Checking log v0.4.27\n    Checking updes-checks-this v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/updes-checks-this)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.10s\ninfo: Loading depinfo from \"/home/runner/check/batch_1/os-checker/os-checker-test-suite/target/x86_64-unknown-linux-gnu/debug/deps/updes_checks_this-6cf9c466c8ecec71.d\"\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-checker",
      "repo": "os-checker-test-suite",
      "pkg": "ws-lockbud-checks-this1",
      "count": 1,
      "raw_reports": [
        {
          "file": "[udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=ws-lockbud-checks-this1, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-lockbud-checks-this1\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-27 23:16:56.972878856 +08:00:00\n\n\nstdout:\nunused dependencies:\n`ws-lockbud-checks-this1 v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-lockbud-checks-this1)`\n└─── dependencies\n     └─── \"rand\"\nNote: These dependencies might be used by other targets.\n      To find dependencies that are not used by any target, enable `--all-targets`.\nNote: They might be false-positive.\n      For example, `cargo-udeps` cannot detect usage of crates that are only used in doc-tests.\n      To ignore some dependencies, write `package.metadata.cargo-udeps.ignore` in Cargo.toml.\n\nstderr:\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling libc v0.2.161\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.85\n    Checking getrandom v0.2.15\n    Checking rand_core v0.6.4\n   Compiling zerocopy-derive v0.7.35\n    Checking zerocopy v0.7.35\n    Checking ppv-lite86 v0.2.20\n    Checking rand_chacha v0.3.1\n    Checking rand v0.8.5\n    Checking ws-lockbud-checks-this1 v0.1.0 (/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/crates/ws-lockbud-checks-this1)\nwarning: creating a mutable reference to mutable static\n  --> crates/ws-lockbud-checks-this1/src/main.rs:83:46\n   |\n83 |           let mut host_aliases: Vec<*mut i8> = HOST_ALIASES\n   |  ______________________________________________^\n84 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[warn(static_mut_refs)]` on by default\n\nwarning: creating a mutable reference to mutable static\n  --> crates/ws-lockbud-checks-this1/src/main.rs:95:21\n   |\n95 |             h_name: HOST_NAME.as_mut().unwrap().as_mut_ptr() as *mut c_char,\n   |                     ^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\nwarning: creating a shared reference to mutable static\n   --> crates/ws-lockbud-checks-this1/src/main.rs:101:9\n    |\n101 |         &HOST_ENTRY as *const hostent\n    |         ^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\nhelp: use `&raw const` instead to create a raw pointer\n    |\n101 |         &raw const HOST_ENTRY as *const hostent\n    |          +++++++++\n\nwarning: `ws-lockbud-checks-this1` (bin \"ws-lockbud-checks-this1\") generated 3 warnings\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 3.36s\ninfo: Loading depinfo from \"/home/runner/check/batch_1/os-checker/os-checker-test-suite/workspace2/target/x86_64-unknown-linux-gnu/debug/deps/ws_lockbud_checks_this1-c6e303c4fc6836b5.d\"\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}