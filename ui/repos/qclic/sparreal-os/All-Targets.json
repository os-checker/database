{"repo":{"user":"qclic","repo":"sparreal-os"},"data":[{"user":"qclic","repo":"sparreal-os","pkg":"sparreal-kernel","count":37,"raw_reports":[{"file":"crates/sparreal-kernel/src/platform/mod.rs","count":6,"kinds":{"Clippy(Warn)":["warning: unused import: `page_table_generic::PTEGeneric`\n --> crates/sparreal-kernel/src/platform/mod.rs:2:5\n  |\n2 | use page_table_generic::PTEGeneric;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","warning: unsafe function's docs are missing a `# Safety` section\n  --> crates/sparreal-kernel/src/platform/mod.rs:28:5\n   |\n28 |     unsafe fn shutdown();\n   |     ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs are missing a `# Safety` section\n  --> crates/sparreal-kernel/src/platform/mod.rs:29:5\n   |\n29 |     unsafe fn wait_for_interrupt();\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs are missing a `# Safety` section\n  --> crates/sparreal-kernel/src/platform/mod.rs:30:5\n   |\n30 |     unsafe fn current_ticks() -> u64;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs are missing a `# Safety` section\n  --> crates/sparreal-kernel/src/platform/mod.rs:31:5\n   |\n31 |     unsafe fn tick_hz() -> u64;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: unsafe function's docs are missing a `# Safety` section\n  --> crates/sparreal-kernel/src/platform/mod.rs:32:5\n   |\n32 |     unsafe fn debug_write_char(ch: u8);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"]}},{"file":"crates/sparreal-kernel/src/mem/addr.rs","count":5,"kinds":{"Clippy(Warn)":["warning: casting raw pointers to the same type and constness is unnecessary (`*const T` -> `*const T`)\n  --> crates/sparreal-kernel/src/mem/addr.rs:14:14\n   |\n14 |         Self(value as *const T)\n   |              ^^^^^^^^^^^^^^^^^ help: try: `value`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n","warning: casting raw pointers to the same type and constness is unnecessary (`*const T` -> `*const T`)\n  --> crates/sparreal-kernel/src/mem/addr.rs:24:9\n   |\n24 |         value.0 as *const T\n   |         ^^^^^^^^^^^^^^^^^^^ help: try: `value.0`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n","warning: you should consider adding a `Default` implementation for `Virt<T>`\n  --> crates/sparreal-kernel/src/mem/addr.rs:31:5\n   |\n31 | /     pub const fn new() -> Self {\n32 | |         Self(0 as *const T)\n33 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n30 + impl<T> Default for Virt<T> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n","warning: use `core::ptr::eq` when comparing raw pointers\n  --> crates/sparreal-kernel/src/mem/addr.rs:69:9\n   |\n69 |         (self.0 as *const u8 as usize) == (other.0 as *const u8 as usize)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `core::ptr::eq(self.0, other.0)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_eq\n   = note: `#[warn(clippy::ptr_eq)]` on by default\n\n","warning: you should consider adding a `Default` implementation for `Phys<T>`\n  --> crates/sparreal-kernel/src/mem/addr.rs:89:5\n   |\n89 | /     pub const fn new() -> Self {\n90 | |         Self(0 as *const T)\n91 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n88 + impl<T> Default for Phys<T> {\n89 +     fn default() -> Self {\n90 +         Self::new()\n91 +     }\n92 + }\n   |\n\n"]}},{"file":"crates/sparreal-kernel/src/mem/mod.rs","count":4,"kinds":{"Clippy(Warn)":["warning: unused import: `Layout`\n --> crates/sparreal-kernel/src/mem/mod.rs:8:26\n  |\n8 |     alloc::{GlobalAlloc, Layout},\n  |                          ^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","warning: unsafe function's docs are missing a `# Safety` section\n  --> crates/sparreal-kernel/src/mem/mod.rs:28:1\n   |\n28 | pub unsafe fn init(kconfig: &KernelConfig) {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n","warning: this operation has no effect\n  --> crates/sparreal-kernel/src/mem/mod.rs:32:22\n   |\n32 |     let stack_size = kconfig.boot_info.hart_stack_size * 1;\n   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `kconfig.boot_info.hart_stack_size`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n","warning: unsafe function's docs are missing a `# Safety` section\n   --> crates/sparreal-kernel/src/mem/mod.rs:154:5\n    |\n154 |     pub unsafe fn new(start: NonNull<u8>, size: usize) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"]}},{"file":"crates/sparreal-kernel/src/sync/rwlock.rs","count":3,"kinds":{"Clippy(Warn)":["warning: a `const` item should not be interior mutable\n  --> crates/sparreal-kernel/src/sync/rwlock.rs:31:5\n   |\n31 | /     const INIT: RawRwLock = RawRwLock {\n32 | |         lock: AtomicUsize::new(0),\n33 | |     };\n   | |______^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n   = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n","warning: this if-then-else expression returns a bool literal\n  --> crates/sparreal-kernel/src/sync/rwlock.rs:48:9\n   |\n48 | /         if self\n49 | |             .lock\n50 | |             .compare_exchange(0, WRITER, Ordering::Acquire, Ordering::Relaxed)\n51 | |             .is_ok()\n...  |\n55 | |             false\n56 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_bool\n   = note: `#[warn(clippy::needless_bool)]` on by default\nhelp: you can reduce it to\n   |\n48 ~         self\n49 +             .lock\n50 +             .compare_exchange(0, WRITER, Ordering::Acquire, Ordering::Relaxed)\n51 +             .is_ok()\n   |\n\n","warning: usage of a legacy numeric constant\n   --> crates/sparreal-kernel/src/sync/rwlock.rs:113:36\n    |\n113 |         const MAX_READERS: usize = core::usize::MAX / READER / 2;\n    |                                    ^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n    = note: `#[warn(clippy::legacy_numeric_constants)]` on by default\nhelp: use the associated constant instead\n    |\n113 |         const MAX_READERS: usize = usize::MAX / READER / 2;\n    |                                    ~~~~~~~~~~\n\n"]}},{"file":"src/executor/mod.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel/src/executor/mod.rs (original lines from 7 to 7)\n-\n","file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel/src/executor/mod.rs (original lines from 25 to 25)\n-\n"]}},{"file":"src/lib.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel/src/lib.rs (original lines from 9 to 9)\n+pub mod fdt;\n","file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel/src/lib.rs (original lines from 21 to 21)\n-pub mod fdt;\n"]}},{"file":"/home/runner/check/batch_12/qclic/sparreal-os/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (150 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── syn_derive 0.1.8\n    └── borsh-derive 1.5.1\n        └── borsh 1.5.1\n            └── rust_decimal 1.36.0\n                └── byte-unit 5.1.4\n                    └── xtask 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── sparreal-rt 0.1.4\n    │   ├── helloworld 0.1.0\n    │   └── bare-test 0.1.3\n    │       └── simple_test 0.1.0\n    └── driver-interface 0.0.1\n        ├── sparreal-rt 0.1.4\n        └── sparreal-kernel 0.1.6\n            └── sparreal-rt 0.1.4\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 150\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=sparreal-kernel, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n     Parsing sparreal-kernel v0.1.6 (current)\nerror: running cargo-doc on crate sparreal-kernel failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-kernel v0.1.6\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel --no-default-features --features mmu &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-kernel v0.1.6\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:31:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:31:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=sparreal-kernel, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n     Parsing sparreal-kernel v0.1.6 (current)\nerror: running cargo-doc on crate sparreal-kernel failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-kernel v0.1.6\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel --no-default-features --features mmu &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-kernel v0.1.6\n"]}},{"file":"crates/sparreal-kernel/src/driver/container.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unneeded `return` statement\n  --> crates/sparreal-kernel/src/driver/container.rs:20:5\n   |\n20 |     return RwLock::new(BTreeMap::new());\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n20 -     return RwLock::new(BTreeMap::new());\n20 +     RwLock::new(BTreeMap::new())\n   |\n\n"]}},{"file":"crates/sparreal-kernel/src/driver/device_tree/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: field assignment outside of initializer for an instance created with Default::default()\n  --> crates/sparreal-kernel/src/driver/device_tree/mod.rs:43:9\n   |\n43 |         config.id = device_id_by_node_name(self.name);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: consider initializing the variable with `driver_interface::ProbeConfig { id: device_id_by_node_name(self.name), ..Default::default() }` and removing relevant reassignments\n  --> crates/sparreal-kernel/src/driver/device_tree/mod.rs:42:9\n   |\n42 |         let mut config = ProbeConfig::default();\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#field_reassign_with_default\n   = note: `#[warn(clippy::field_reassign_with_default)]` on by default\n\n"]}},{"file":"crates/sparreal-kernel/src/driver/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unsafe function's docs are missing a `# Safety` section\n  --> crates/sparreal-kernel/src/driver/mod.rs:92:1\n   |\n92 | pub unsafe fn move_dtb(src: *const u8, mut dst: NonNull<u8>) -> Option<&'static [u8]> {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"]}},{"file":"crates/sparreal-kernel/src/driver/timer.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you are using an explicit closure for cloning elements\n  --> crates/sparreal-kernel/src/driver/timer.rs:18:5\n   |\n18 |     g.values().map(|one| one.clone()).collect()\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling the dedicated `cloned` method: `g.values().cloned()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n   = note: `#[warn(clippy::map_clone)]` on by default\n\n"]}},{"file":"crates/sparreal-kernel/src/irq/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: iterating on a map's values\n  --> crates/sparreal-kernel/src/irq/mod.rs:51:24\n   |\n51 |             .map(|map| map.0.iter().map(|(_, h)| h.clone()).collect::<Vec<_>>())\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.0.values().map(|h| h.clone())`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_kv_map\n   = note: `#[warn(clippy::iter_kv_map)]` on by default\n\n"]}},{"file":"crates/sparreal-kernel/src/kernel.rs","count":1,"kinds":{"Clippy(Warn)":["warning: you should consider adding a `Default` implementation for `MemoryRange`\n  --> crates/sparreal-kernel/src/kernel.rs:68:5\n   |\n68 | /     pub const fn new() -> Self {\n69 | |         Self {\n70 | |             start: Phys::new(),\n71 | |             size: 0,\n72 | |         }\n73 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n67 + impl Default for MemoryRange {\n68 +     fn default() -> Self {\n69 +         Self::new()\n70 +     }\n71 + }\n   |\n\n"]}},{"file":"crates/sparreal-kernel/src/sync/spin.rs","count":1,"kinds":{"Clippy(Warn)":["warning: a `const` item should not be interior mutable\n  --> crates/sparreal-kernel/src/sync/spin.rs:14:5\n   |\n14 |     const INIT: RawSpinlock = RawSpinlock(AtomicBool::new(false));\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"]}},{"file":"crates/sparreal-kernel/src/util/boot.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unsafe function's docs are missing a `# Safety` section\n  --> crates/sparreal-kernel/src/util/boot.rs:38:1\n   |\n38 | pub unsafe fn stdout_reg(dtb: NonNull<u8>) -> Option<StdoutReg> {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"]}},{"file":"src/mem/mmu/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel/src/mem/mmu/mod.rs (original lines from 14 to 15)\n-\n-\n"]}},{"file":"src/trap.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel/src/trap.rs (original lines from 1 to 1)\n+\n+\n"]}},{"file":"src/util/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-kernel/src/util/mod.rs (original lines from 2 to 2)\n+\n"]}}]},{"user":"qclic","repo":"sparreal-os","pkg":"sparreal-rt","count":12,"raw_reports":[{"file":"build.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt/build.rs (original lines from 46 to 46)\n-\n","file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt/build.rs (original lines from 69 to 72)\n-        let ld_content = ld_content.replace(\n-            \"%KERNEL_VADDR%\",\n-            &format!(\"{:#x}\", KERNEL_VADDR),\n-        );\n+        let ld_content = ld_content.replace(\"%KERNEL_VADDR%\", &format!(\"{:#x}\", KERNEL_VADDR));\n"]}},{"file":"src/arch/aarch64/mod.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt/src/arch/aarch64/mod.rs (original lines from 3 to 3)\n+mod dma;\n","file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt/src/arch/aarch64/mod.rs (original lines from 6 to 6)\n-mod dma;\n"]}},{"file":"/home/runner/check/batch_12/qclic/sparreal-os/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (150 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── syn_derive 0.1.8\n    └── borsh-derive 1.5.1\n        └── borsh 1.5.1\n            └── rust_decimal 1.36.0\n                └── byte-unit 5.1.4\n                    └── xtask 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── sparreal-rt 0.1.4\n    │   ├── helloworld 0.1.0\n    │   └── bare-test 0.1.3\n    │       └── simple_test 0.1.0\n    └── driver-interface 0.0.1\n        ├── sparreal-rt 0.1.4\n        └── sparreal-kernel 0.1.6\n            └── sparreal-rt 0.1.4\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 150\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=sparreal-rt, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n     Parsing sparreal-rt v0.1.4 (current)\nerror: running cargo-doc on crate sparreal-rt failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.1.4\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt --no-default-features --features default,early-print &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.1.4\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:31:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:31:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-26T09:31:17Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-26T09:31:17Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=sparreal-rt, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n     Parsing sparreal-rt v0.1.4 (current)\nerror: running cargo-doc on crate sparreal-rt failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.1.4\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt --no-default-features --features default,early-print &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.1.4\n"]}},{"file":"crates/sparreal-rt/src/arch/aarch64/debug.rs","count":1,"kinds":{"Clippy(Warn)":["warning: function `put_debug` is never used\n --> crates/sparreal-rt/src/arch/aarch64/debug.rs:9:15\n  |\n9 | pub unsafe fn put_debug(char: u8) {\n  |               ^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n"]}},{"file":"crates/sparreal-rt/src/arch/aarch64/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `ch`\n  --> crates/sparreal-rt/src/arch/aarch64/mod.rs:35:32\n   |\n35 |     unsafe fn debug_write_char(ch: u8) {\n   |                                ^^ help: if this is intentional, prefix it with an underscore: `_ch`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}},{"file":"src/drivers/timer/armv8.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt/src/drivers/timer/armv8.rs (original lines from 1 to 1)\n-\n"]}},{"file":"src/drivers/uart/mod.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt/src/drivers/uart/mod.rs (original lines from 2 to 2)\n+\n"]}}]},{"user":"qclic","repo":"sparreal-os","pkg":"xtask","count":10,"raw_reports":[{"file":"src/main.rs","count":2,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/xtask/src/main.rs (original lines from 4 to 4)\n-\n","file: /home/runner/check/batch_12/qclic/sparreal-os/xtask/src/main.rs (original lines from 9 to 9)\n-\n"]}},{"file":"xtask/src/main.rs","count":2,"kinds":{"Clippy(Warn)":["warning: unused import: `clap::*`\n --> xtask/src/main.rs:8:5\n  |\n8 | use clap::*;\n  |     ^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","warning: the feature `option_get_or_insert_default` has been stable since 1.83.0 and no longer requires an attribute to enable\n --> xtask/src/main.rs:2:12\n  |\n2 | #![feature(option_get_or_insert_default)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"]}},{"file":"xtask/src/shell.rs","count":2,"kinds":{"Clippy(Warn)":["warning: method `exec` is never used\n  --> xtask/src/shell.rs:10:8\n   |\n9  | pub trait Shell {\n   |           ----- method in this trait\n10 |     fn exec(&mut self) -> Result<()>;\n   |        ^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n","warning: unnecessary use of `to_string`\n  --> xtask/src/shell.rs:19:24\n   |\n19 |             cmd_str += &arg.to_string_lossy().to_string();\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `arg.to_string_lossy().as_ref()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n   = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n"]}},{"file":"/home/runner/check/batch_12/qclic/sparreal-os/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (150 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── syn_derive 0.1.8\n    └── borsh-derive 1.5.1\n        └── borsh 1.5.1\n            └── rust_decimal 1.36.0\n                └── byte-unit 5.1.4\n                    └── xtask 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── sparreal-rt 0.1.4\n    │   ├── helloworld 0.1.0\n    │   └── bare-test 0.1.3\n    │       └── simple_test 0.1.0\n    └── driver-interface 0.0.1\n        ├── sparreal-rt 0.1.4\n        └── sparreal-kernel 0.1.6\n            └── sparreal-rt 0.1.4\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 150\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=xtask, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/xtask\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii\nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#log@0.4.22 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_12/qclic/sparreal-os/Cargo.lock\")\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=xtask, checker=Rap\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/xtask\n// cmd=cargo +nightly-2024-10-12 rap -F -M\nwarning: /home/runner/check/batch_12/qclic/sparreal-os/crates/bare-test/Cargo.toml: unused manifest key: dependencies.sparreal-rt.no-default-features\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n   Compiling serde v1.0.209\n   Compiling shlex v1.3.0\n   Compiling autocfg v1.3.0\n   Compiling cc v1.1.18\n    Checking utf8parse v0.2.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `utf8parse` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n02:54:02|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-27T02:53:44Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cc-1.1.18/src/command_helpers.rs:65:30: 65:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/cc-1.1.18/src/command_helpers.rs:66:13: 66:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-27T02:53:44Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-27T02:53:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"symbolize::gimli::elf::debug_path_exists\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/backtrace-0.3.71/src/symbolize/gimli/elf.rs:315:30: 315:71 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/backtrace-0.3.71/src/symbolize/gimli/elf.rs:322:17: 322:67 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-27T02:53:52Z WARN  lockbud::callbacks] crate backtrace contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"qclic","repo":"sparreal-os","pkg":"bare-test","count":7,"raw_reports":[{"file":"/home/runner/check/batch_12/qclic/sparreal-os/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (150 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── syn_derive 0.1.8\n    └── borsh-derive 1.5.1\n        └── borsh 1.5.1\n            └── rust_decimal 1.36.0\n                └── byte-unit 5.1.4\n                    └── xtask 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── sparreal-rt 0.1.4\n    │   ├── helloworld 0.1.0\n    │   └── bare-test 0.1.3\n    │       └── simple_test 0.1.0\n    └── driver-interface 0.0.1\n        ├── sparreal-rt 0.1.4\n        └── sparreal-kernel 0.1.6\n            └── sparreal-rt 0.1.4\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 150\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=bare-test, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n     Parsing bare-test v0.1.3 (current)\nerror: running cargo-doc on crate bare-test failed with output:\n-----\nwarning: /home/runner/check/batch_12/qclic/sparreal-os/crates/bare-test/Cargo.toml: unused manifest key: dependencies.sparreal-rt.no-default-features\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.1.3\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/crates/bare-test --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.1.3\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:31:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:31:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-26T09:31:17Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-26T09:31:17Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=bare-test, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/crates/bare-test\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n     Parsing bare-test v0.1.3 (current)\nerror: running cargo-doc on crate bare-test failed with output:\n-----\nwarning: /home/runner/check/batch_12/qclic/sparreal-os/crates/bare-test/Cargo.toml: unused manifest key: dependencies.sparreal-rt.no-default-features\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.1.3\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/crates/bare-test --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.1.3\n"]}},{"file":"crates/bare-test/src/lib.rs","count":1,"kinds":{"Clippy(Warn)":["warning: this `.into_iter()` call is equivalent to `.iter()` and will not consume the `slice`\n  --> crates/bare-test/src/lib.rs:11:28\n   |\n11 |     for (i, test) in tests.into_iter().enumerate() {\n   |                            ^^^^^^^^^ help: call directly: `iter`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n   = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"]}},{"file":"crates/sparreal-rt/src/arch/aarch64/debug.rs","count":1,"kinds":{"Clippy(Warn)":["warning: function `put_debug` is never used\n --> crates/sparreal-rt/src/arch/aarch64/debug.rs:9:15\n  |\n9 | pub unsafe fn put_debug(char: u8) {\n  |               ^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n"]}},{"file":"crates/sparreal-rt/src/arch/aarch64/mod.rs","count":1,"kinds":{"Clippy(Warn)":["warning: unused variable: `ch`\n  --> crates/sparreal-rt/src/arch/aarch64/mod.rs:35:32\n   |\n35 |     unsafe fn debug_write_char(ch: u8) {\n   |                                ^^ help: if this is intentional, prefix it with an underscore: `_ch`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n"]}}]},{"user":"qclic","repo":"sparreal-os","pkg":"driver-interface","count":3,"raw_reports":[{"file":"/home/runner/check/batch_12/qclic/sparreal-os/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (150 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── syn_derive 0.1.8\n    └── borsh-derive 1.5.1\n        └── borsh 1.5.1\n            └── rust_decimal 1.36.0\n                └── byte-unit 5.1.4\n                    └── xtask 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── sparreal-rt 0.1.4\n    │   ├── helloworld 0.1.0\n    │   └── bare-test 0.1.3\n    │       └── simple_test 0.1.0\n    └── driver-interface 0.0.1\n        ├── sparreal-rt 0.1.4\n        └── sparreal-kernel 0.1.6\n            └── sparreal-rt 0.1.4\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 150\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=driver-interface, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/crates/driver-interface\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n     Parsing driver-interface v0.0.1 (current)\nerror: running cargo-doc on crate driver-interface failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate driver-interface v0.0.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/crates/driver-interface --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate driver-interface v0.0.1\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=driver-interface, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/crates/driver-interface\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n     Parsing driver-interface v0.0.1 (current)\nerror: running cargo-doc on crate driver-interface failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate driver-interface v0.0.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/crates/driver-interface --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate driver-interface v0.0.1\n"]}}]},{"user":"qclic","repo":"sparreal-os","pkg":"helloworld","count":3,"raw_reports":[{"file":"/home/runner/check/batch_12/qclic/sparreal-os/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (150 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── syn_derive 0.1.8\n    └── borsh-derive 1.5.1\n        └── borsh 1.5.1\n            └── rust_decimal 1.36.0\n                └── byte-unit 5.1.4\n                    └── xtask 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── sparreal-rt 0.1.4\n    │   ├── helloworld 0.1.0\n    │   └── bare-test 0.1.3\n    │       └── simple_test 0.1.0\n    └── driver-interface 0.0.1\n        ├── sparreal-rt 0.1.4\n        └── sparreal-kernel 0.1.6\n            └── sparreal-rt 0.1.4\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 150\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=helloworld, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/app/helloworld\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none\nwarning: /home/runner/check/batch_12/qclic/sparreal-os/crates/bare-test/Cargo.toml: unused manifest key: dependencies.sparreal-rt.no-default-features\n[2024-11-26T09:31:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:31:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-26T09:31:17Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-26T09:31:17Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling sparreal-rt v0.1.4 (/home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling helloworld v0.1.0 (/home/runner/check/batch_12/qclic/sparreal-os/app/helloworld)\nerror: linking with `rust-lld` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-10-05-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/home/runner/.rustup/toolchains/nightly-2024-10-05-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/home/runner/.rustup/toolchains/nightly-2024-10-05-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"rust-lld\" \"-flavor\" \"gnu\" \"--fix-cortex-a53-843419\" \"/tmp/rustcf9W1fm/symbols.o\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/helloworld-7288f570e314b3ba.helloworld.8c2766f60b329580-cgu.0.rcgu.o\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/helloworld-7288f570e314b3ba.8ti023b518dwhh2rf9d3o1l5r.rcgu.o\" \"--as-needed\" \"-Bstatic\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libarm_pl011_rs-44cf4a692e65cd22.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libembedded_io_async-cc96872dc2371d8a.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libarm_gic_driver-d7bcb3bec61e75db.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libdma_api-5e819fcfa191ee0b.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libmemory_addr-261a3707e297e272.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libpage_table_arm-3afc806db4608b1f.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_kernel-a9bd951e0542a14d.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libbuddy_system_allocator-2e5c3efc75c33f05.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libspin-405c0e40708f6ad2.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/liblock_api-9561c8b01b5350c9.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libscopeguard-3f386e3fe2881fd1.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libansi_rgb-ff4f247cfaa0ed52.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/librgb-d271a8d45167025f.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libbytemuck-35dd405f3aa4a17b.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libspin_on-36d6c049f19c2eca.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libdriver_interface-213aea63e3b23fed.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libembedded_io-1a6d474dcb71603f.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libfutures-b59e5ddba9f3f775.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libfutures_channel-12b8651d3848b7f3.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libfutures_util-dfa190893439ddc7.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libpin_project_lite-56fa212d52374049.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libfutures_sink-8327d090aaf3a353.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libfutures_task-c35ad6d591edcbd7.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libpin_utils-fcbd2d184fbe3fcf.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libfutures_core-f9ccf7a64c9660dd.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libpage_table_generic-9c6e3fdf8b6e9161.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libbitflags-b7e4e81b15779f85.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/liblog-20a498abd1696b87.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libfdt_parser-79c934b44e9dbfa6.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libaarch64_cpu-a45cc68f09b43f66.rlib\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libtock_registers-556adaad34ab1202.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-10-05-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/liballoc-2536edba73b3f37b.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-10-05-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/librustc_std_workspace_core-84c97a6fc6b01f0c.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-10-05-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/libcore-1c34871c0ac06d09.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-10-05-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/libcompiler_builtins-f63c7c590acefaa9.rlib\" \"-Bdynamic\" \"--eh-frame-hdr\" \"-z\" \"noexecstack\" \"-L\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/build/sparreal-rt-8b8eb0724036d40b/out\" \"-o\" \"/home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/helloworld-7288f570e314b3ba\" \"--gc-sections\"\n  = note: rust-lld: error: undefined symbol: _kernel_size\n          >>> referenced by sparreal_rt.6d2508caac2e033f-cgu.0\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(.head.text+0x10) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          \n          rust-lld: error: undefined symbol: _stack_top\n          >>> referenced by sparreal_rt.6d2508caac2e033f-cgu.0\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(.text.boot.start+0x1008) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          \n          rust-lld: error: undefined symbol: _ekernel\n          >>> referenced by boot.rs:44 (crates/sparreal-rt/src/arch/aarch64/boot.rs:44)\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(__rust_main) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          >>> referenced by boot.rs:44 (crates/sparreal-rt/src/arch/aarch64/boot.rs:44)\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(__rust_main) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          \n          rust-lld: error: undefined symbol: _skernel\n          >>> referenced by boot.rs:65 (crates/sparreal-rt/src/arch/aarch64/boot.rs:65)\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(__rust_main) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          >>> referenced by boot.rs:65 (crates/sparreal-rt/src/arch/aarch64/boot.rs:65)\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(__rust_main) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          \n          rust-lld: error: undefined symbol: _sbss\n          >>> referenced by boot.rs:156 (crates/sparreal-rt/src/arch/aarch64/boot.rs:156)\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(sparreal_rt::arch::boot::clear_bss::h526678637821b76a) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          >>> referenced by boot.rs:156 (crates/sparreal-rt/src/arch/aarch64/boot.rs:156)\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(sparreal_rt::arch::boot::clear_bss::h526678637821b76a) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          >>> referenced by boot.rs:156 (crates/sparreal-rt/src/arch/aarch64/boot.rs:156)\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(sparreal_rt::arch::boot::clear_bss::h526678637821b76a) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          >>> referenced 1 more times\n          \n          rust-lld: error: undefined symbol: _ebss\n          >>> referenced by boot.rs:156 (crates/sparreal-rt/src/arch/aarch64/boot.rs:156)\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(sparreal_rt::arch::boot::clear_bss::h526678637821b76a) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          >>> referenced by boot.rs:156 (crates/sparreal-rt/src/arch/aarch64/boot.rs:156)\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(sparreal_rt::arch::boot::clear_bss::h526678637821b76a) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          >>> referenced by boot.rs:156 (crates/sparreal-rt/src/arch/aarch64/boot.rs:156)\n          >>>               sparreal_rt-ce4a77dfad2a3a1d.sparreal_rt.6d2508caac2e033f-cgu.0.rcgu.o:(sparreal_rt::arch::boot::clear_bss::h526678637821b76a) in archive /home/runner/check/batch_12/qclic/sparreal-os/target/aarch64-unknown-none/debug/deps/libsparreal_rt-ce4a77dfad2a3a1d.rlib\n          >>> referenced 1 more times\n          \n\nerror: could not compile `helloworld` (bin \"helloworld\") due to 1 previous error\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:31:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:31:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-26T09:31:17Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-26T09:31:17Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }"]}}]},{"user":"qclic","repo":"sparreal-os","pkg":"page-table-arm","count":3,"raw_reports":[{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=page-table-arm, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/crates/page-table-arm\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n     Parsing page-table-arm v0.1.0 (current)\nerror: running cargo-doc on crate page-table-arm failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate page-table-arm v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/crates/page-table-arm --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate page-table-arm v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:31:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:31:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=page-table-arm, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n     Parsing page-table-arm v0.1.0 (current)\nerror: running cargo-doc on crate page-table-arm failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate page-table-arm v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/crates/page-table-arm --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate page-table-arm v0.1.0\n"]}}]},{"user":"qclic","repo":"sparreal-os","pkg":"simple_test","count":3,"raw_reports":[{"file":"/home/runner/check/batch_12/qclic/sparreal-os/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (150 crate dependencies)\nCrate:     proc-macro-error\nVersion:   1.0.4\nWarning:   unmaintained\nTitle:     proc-macro-error is unmaintained\nDate:      2024-09-01\nID:        RUSTSEC-2024-0370\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0370\nDependency tree:\nproc-macro-error 1.0.4\n└── syn_derive 0.1.8\n    └── borsh-derive 1.5.1\n        └── borsh 1.5.1\n            └── rust_decimal 1.36.0\n                └── byte-unit 5.1.4\n                    └── xtask 0.1.0\n\nCrate:     futures-util\nVersion:   0.3.30\nWarning:   yanked\nDependency tree:\nfutures-util 0.3.30\n└── futures 0.3.30\n    ├── sparreal-rt 0.1.4\n    │   ├── helloworld 0.1.0\n    │   └── bare-test 0.1.3\n    │       └── simple_test 0.1.0\n    └── driver-interface 0.0.1\n        ├── sparreal-rt 0.1.4\n        └── sparreal-kernel 0.1.6\n            └── sparreal-rt 0.1.4\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 150\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"proc-macro-error\",\n          \"version\": \"1.0.4\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c\",\n          \"dependencies\": [\n            {\n              \"name\": \"proc-macro-error-attr\",\n              \"version\": \"1.0.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"proc-macro2\",\n              \"version\": \"1.0.86\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"quote\",\n              \"version\": \"1.0.37\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.5\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0370\",\n          \"package\": \"proc-macro-error\",\n          \"title\": \"proc-macro-error is unmaintained\",\n          \"description\": \"proc-macro-error's maintainer seems to be unreachable, with no commits for 2 years, no releases pushed for 4 years, and no activity on the GitLab repo or response to email.\\n\\nproc-macro-error also depends on `syn 1.x`, which may be bringing duplicate dependencies into dependant build trees.\\n\\n## Possible Alternative(s)\\n\\n- [manyhow](https://crates.io/crates/manyhow)\\n- [proc-macro-error2](https://crates.io/crates/proc-macro-error2)\\n- [proc-macro2-diagnostics](https://github.com/SergioBenitez/proc-macro2-diagnostics)\",\n          \"date\": \"2024-09-01\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://gitlab.com/CreepySkeleton/proc-macro-error/-/issues/20\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"futures-util\",\n          \"version\": \"0.3.30\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48\",\n          \"dependencies\": [\n            {\n              \"name\": \"futures-core\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-sink\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"futures-task\",\n              \"version\": \"0.3.30\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-project-lite\",\n              \"version\": \"0.2.14\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"pin-utils\",\n              \"version\": \"0.1.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=simple_test, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/app/simple_test\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n     Parsing simple_test v0.1.0 (current)\nerror: running cargo-doc on crate simple_test failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate simple_test v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/app/simple_test --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate simple_test v0.1.0\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=simple_test, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_12/qclic/sparreal-os/app/simple_test\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n     Parsing simple_test v0.1.0 (current)\nerror: running cargo-doc on crate simple_test failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate simple_test v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_12/qclic/sparreal-os/app/simple_test --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate simple_test v0.1.0\n"]}}]},{"user":"qclic","repo":"sparreal-os","pkg":"sparreal-macros","count":2,"raw_reports":[{"file":"src/api_trait.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-macros/src/api_trait.rs (original lines from 40 to 41)\n-\n-       \n"]}},{"file":"src/lib.rs","count":1,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/qclic/sparreal-os/crates/sparreal-macros/src/lib.rs (original lines from 14 to 14)\n-    parse, spanned::Spanned, FnArg, ImplItem, ItemFn, ItemImpl, ItemTrait, Pat, PathArguments, TraitItem, Type, Visibility\n+    parse, spanned::Spanned, FnArg, ImplItem, ItemFn, ItemImpl, ItemTrait, Pat, PathArguments,\n+    TraitItem, Type, Visibility,\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}