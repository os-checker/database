{
  "repo": {
    "user": "qclic",
    "repo": "sparreal-os"
  },
  "data": [
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-kernel",
      "count": 61,
      "raw_reports": [
        {
          "file": "crates/sparreal-kernel/src/platform/mod.rs",
          "features": "",
          "count": 18,
          "kinds": {
            "Mirai": [
              "error[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\n",
              "error[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n"
            ],
            "Clippy(Error)": [
              "error[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\n",
              "error[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n",
              "error[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\n",
              "error[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/globals/percpu.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/mod.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\n",
              "error[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\n",
              "error[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\n",
              "error[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of undeclared crate or module `mmu`\n\n",
              "error[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/region.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n",
              "error[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/platform/fdt.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/boot/mod.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Mirai": [
              "error[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\n"
            ],
            "Clippy(Error)": [
              "error[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\n",
              "error[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/cache.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n",
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Clippy\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-04-02 4:28:25.753500643 +08:00:00\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n",
              "// pkg_name=sparreal-kernel, checker=Clippy\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-04-02 4:28:26.129375364 +08:00:00\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Lockbud\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:30:03.715526628 +08:00:00\n[2025-04-01T20:29:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-01T20:29:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\nerror[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\nerror[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\nerror[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nSome errors have detailed explanations: E0412, E0425, E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n",
              "// pkg_name=sparreal-kernel, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-04-02 4:30:03.999501175 +08:00:00\n[2025-04-01T20:29:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-01T20:29:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\nerror[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\nerror[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\nerror[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nSome errors have detailed explanations: E0412, E0425, E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 2,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-kernel, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:24.83753894 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nrdrive  0.3.3    ---     0.4.0   Normal  ---\nspin    0.9.8    ---     0.10.0  Normal  ---\n",
              "pkg=sparreal-kernel, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:25.645233606 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\nrdrive  0.3.3    ---     0.4.0   Normal  ---\nspin    0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "src/globals/percpu.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel/src/globals/percpu.rs (original lines from 82 to 89)\n-        (*PER_CPU.get()).insert(\n-            cpu,\n-            PerCPU {\n-                irq_chips: Default::default(),\n-                timer: Default::default(),\n-                stack: stack_bottom..stack_bottom + kstack_size(),\n-            },\n-        );\n+        (*PER_CPU.get()).insert(cpu, PerCPU {\n+            irq_chips: Default::default(),\n+            timer: Default::default(),\n+            stack: stack_bottom..stack_bottom + kstack_size(),\n+        });\n",
              "file: /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel/src/globals/percpu.rs (original lines from 82 to 89)\n-        (*PER_CPU.get()).insert(\n-            cpu,\n-            PerCPU {\n-                irq_chips: Default::default(),\n-                timer: Default::default(),\n-                stack: stack_bottom..stack_bottom + kstack_size(),\n-            },\n-        );\n+        (*PER_CPU.get()).insert(cpu, PerCPU {\n+            irq_chips: Default::default(),\n+            timer: Default::default(),\n+            stack: stack_bottom..stack_bottom + kstack_size(),\n+        });\n"
            ]
          }
        },
        {
          "file": "src/irq/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel/src/irq/mod.rs (original lines from 63 to 70)\n-        globals.irq_chips.0.insert(\n-            id,\n-            Chip {\n-                device,\n-                mutex: Mutex::new(()),\n-                handlers: UnsafeCell::new(Default::default()),\n-            },\n-        );\n+        globals.irq_chips.0.insert(id, Chip {\n+            device,\n+            mutex: Mutex::new(()),\n+            handlers: UnsafeCell::new(Default::default()),\n+        });\n",
              "file: /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel/src/irq/mod.rs (original lines from 63 to 70)\n-        globals.irq_chips.0.insert(\n-            id,\n-            Chip {\n-                device,\n-                mutex: Mutex::new(()),\n-                handlers: UnsafeCell::new(Default::default()),\n-            },\n-        );\n+        globals.irq_chips.0.insert(id, Chip {\n+            device,\n+            mutex: Mutex::new(()),\n+            handlers: UnsafeCell::new(Default::default()),\n+        });\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:29:27.967252861 +08:00:00\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-02 4:28:49.086087139 +08:00:00\n    Building sparreal-kernel v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-kernel' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-kernel v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel --features mmu &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-kernel v0.9.1\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sparreal-kernel, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-02 4:28:49.836738767 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sparreal-kernel v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-kernel' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-kernel v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel --features mmu &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-kernel v0.9.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-rt",
      "count": 11,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-02 4:29:02.834051138 +08:00:00\n    Building sparreal-rt v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking rdif-base v0.1.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rdif-base` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.1\n",
              "// pkg_name=sparreal-rt, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:29:03.688796496 +08:00:00\n    Building sparreal-rt v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling ident_case v1.0.1\n   Compiling thiserror v2.0.12\n   Compiling fnv v1.0.7\n    Checking rdif-base v0.1.4\n   Compiling strsim v0.11.1\n    Checking spin v0.9.8\n   Compiling rust_decimal v1.37.1\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n    Checking arrayvec v0.7.6\n    Checking bytemuck v1.22.0\n   Compiling anyhow v1.0.97\n    Checking log v0.4.27\n    Checking rgb v0.8.50\n    Checking rdif-power v0.1.0\n    Checking rdif-timer v0.1.3\n    Checking rdif-intc v0.2.0\n    Checking bitflags v2.9.0\n    Checking utf8-width v0.1.7\n    Checking fdt-parser v0.4.10\n    Checking ansi_rgb v0.2.0\n    Checking byte-unit v5.1.6\n    Checking lazy_static v1.5.0\n    Checking buddy_system_allocator v0.11.0\n    Checking memory_addr v0.3.2\n    Checking dma-api v0.3.0\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking pasts v0.14.3\n    Checking numeric-enum-macro v0.2.0\n   Compiling darling_core v0.20.11\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling abi-singleton v0.3.0\n   Compiling thiserror-impl v2.0.12\n   Compiling darling_macro v0.20.11\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n   Compiling darling v0.20.11\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\n Documenting sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror[E0583]: file not found for module `arch`\n  --> /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch.rs\" or \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not document `sparreal-rt`\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.1\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 2,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-rt, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:27.985652162 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\npage-table-arm  0.1.0    0.1.1   0.1.1   Normal  cfg(target_arch = \"aarch64\")\nsmccc           0.1.1    ---     0.2.0   Normal  cfg(target_arch = \"aarch64\")\nspin            0.9.8    ---     0.10.0  Normal  ---\n",
              "pkg=sparreal-rt, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:28.765552771 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\npage-table-arm  0.1.0    0.1.1   0.1.1   Normal  cfg(target_arch = \"aarch64\")\nsmccc           0.1.1    ---     0.2.0   Normal  cfg(target_arch = \"aarch64\")\nspin            0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 2,
          "kinds": {
            "Semver Violation": [
              "pkg=sparreal-rt, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-02 4:29:03.686682326 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sparreal-rt v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking rdif-base v0.1.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rdif-base` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.1\n",
              "pkg=sparreal-rt, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-04-02 4:29:09.914182504 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sparreal-rt v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling ident_case v1.0.1\n   Compiling thiserror v2.0.12\n   Compiling fnv v1.0.7\n    Checking rdif-base v0.1.4\n   Compiling strsim v0.11.1\n    Checking spin v0.9.8\n   Compiling rust_decimal v1.37.1\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n    Checking arrayvec v0.7.6\n    Checking bytemuck v1.22.0\n   Compiling anyhow v1.0.97\n    Checking log v0.4.27\n    Checking rgb v0.8.50\n    Checking rdif-power v0.1.0\n    Checking rdif-timer v0.1.3\n    Checking rdif-intc v0.2.0\n    Checking bitflags v2.9.0\n    Checking utf8-width v0.1.7\n    Checking fdt-parser v0.4.10\n    Checking ansi_rgb v0.2.0\n    Checking byte-unit v5.1.6\n    Checking lazy_static v1.5.0\n    Checking buddy_system_allocator v0.11.0\n    Checking memory_addr v0.3.2\n    Checking dma-api v0.3.0\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking pasts v0.14.3\n    Checking numeric-enum-macro v0.2.0\n   Compiling darling_core v0.20.11\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling abi-singleton v0.3.0\n   Compiling thiserror-impl v2.0.12\n   Compiling darling_macro v0.20.11\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n   Compiling darling v0.20.11\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\n Documenting sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror[E0583]: file not found for module `arch`\n  --> /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch.rs\" or \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not document `sparreal-rt`\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.1\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-rt/src/lib.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ],
            "Mirai": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=Clippy\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-04-02 4:28:27.732853651 +08:00:00\n    Checking sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=Lockbud\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:30:04.431793505 +08:00:00\n[2025-04-01T20:29:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-01T20:29:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:29:32.824947787 +08:00:00\n    Checking sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "bare-test",
      "count": 9,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-02 4:28:32.700852794 +08:00:00\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking rdif-base v0.1.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rdif-base` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n",
              "// pkg_name=bare-test, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:28:33.800508376 +08:00:00\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling ident_case v1.0.1\n    Checking rdif-base v0.1.4\n   Compiling fnv v1.0.7\n   Compiling strsim v0.11.1\n   Compiling thiserror v2.0.12\n    Checking spin v0.9.8\n   Compiling quote v1.0.40\n   Compiling rust_decimal v1.37.1\n   Compiling syn v2.0.100\n   Compiling anyhow v1.0.97\n    Checking arrayvec v0.7.6\n    Checking bytemuck v1.22.0\n    Checking log v0.4.27\n    Checking rgb v0.8.50\n    Checking rdif-timer v0.1.3\n    Checking rdif-intc v0.2.0\n    Checking rdif-power v0.1.0\n    Checking fdt-parser v0.4.10\n    Checking bitflags v2.9.0\n    Checking utf8-width v0.1.7\n    Checking ansi_rgb v0.2.0\n    Checking byte-unit v5.1.6\n    Checking lazy_static v1.5.0\n    Checking buddy_system_allocator v0.11.0\n    Checking dma-api v0.3.0\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking memory_addr v0.3.2\n    Checking pasts v0.14.3\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n    Checking numeric-enum-macro v0.2.0\n   Compiling darling_core v0.20.11\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling abi-singleton v0.3.0\n   Compiling thiserror-impl v2.0.12\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n   Compiling darling_macro v0.20.11\n   Compiling darling v0.20.11\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0583]: file not found for module `arch`\n  --> /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch.rs\" or \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 2,
          "kinds": {
            "Semver Violation": [
              "pkg=bare-test, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-02 4:28:33.798486256 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking rdif-base v0.1.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rdif-base` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n",
              "pkg=bare-test, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-04-02 4:28:40.147344916 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling ident_case v1.0.1\n    Checking rdif-base v0.1.4\n   Compiling fnv v1.0.7\n   Compiling strsim v0.11.1\n   Compiling thiserror v2.0.12\n    Checking spin v0.9.8\n   Compiling quote v1.0.40\n   Compiling rust_decimal v1.37.1\n   Compiling syn v2.0.100\n   Compiling anyhow v1.0.97\n    Checking arrayvec v0.7.6\n    Checking bytemuck v1.22.0\n    Checking log v0.4.27\n    Checking rgb v0.8.50\n    Checking rdif-timer v0.1.3\n    Checking rdif-intc v0.2.0\n    Checking rdif-power v0.1.0\n    Checking fdt-parser v0.4.10\n    Checking bitflags v2.9.0\n    Checking utf8-width v0.1.7\n    Checking ansi_rgb v0.2.0\n    Checking byte-unit v5.1.6\n    Checking lazy_static v1.5.0\n    Checking buddy_system_allocator v0.11.0\n    Checking dma-api v0.3.0\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking memory_addr v0.3.2\n    Checking pasts v0.14.3\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n    Checking numeric-enum-macro v0.2.0\n   Compiling darling_core v0.20.11\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling abi-singleton v0.3.0\n   Compiling thiserror-impl v2.0.12\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n   Compiling darling_macro v0.20.11\n   Compiling darling v0.20.11\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0583]: file not found for module `arch`\n  --> /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch.rs\" or \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-rt/src/lib.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Mirai": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ],
            "Clippy(Error)": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=Clippy\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-04-02 4:28:17.948868632 +08:00:00\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking rdif-base v0.1.4\n   Compiling thiserror v2.0.12\n   Compiling num-traits v0.2.19\n   Compiling rust_decimal v1.37.1\n    Checking log v0.4.27\n    Checking bytemuck v1.22.0\n    Checking arrayvec v0.7.6\n    Checking spin v0.9.8\n   Compiling anyhow v1.0.97\n    Checking rgb v0.8.50\n    Checking rdif-intc v0.2.0\n    Checking rdif-power v0.1.0\n    Checking rdif-timer v0.1.3\n    Checking bitflags v2.9.0\n    Checking utf8-width v0.1.7\n    Checking fdt-parser v0.4.10\n    Checking page-table-generic v0.5.3\n    Checking ansi_rgb v0.2.0\n    Checking lazy_static v1.5.0\n    Checking buddy_system_allocator v0.11.0\n    Checking rdrive v0.3.3\n    Checking pasts v0.14.3\n    Checking dma-api v0.3.0\n    Checking memory_addr v0.3.2\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking numeric-enum-macro v0.2.0\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n    Checking byte-unit v5.1.6\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=Lockbud\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:29:56.498605421 +08:00:00\n   Compiling scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n   Compiling rdif-base v0.1.4\n   Compiling thiserror v2.0.12\n   Compiling num-traits v0.2.19\n   Compiling rust_decimal v1.37.1\n   Compiling arrayvec v0.7.6\n   Compiling log v0.4.27\n[2025-04-01T20:29:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-01T20:29:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling spin v0.9.8\n   Compiling bytemuck v1.22.0\n   Compiling anyhow v1.0.97\n   Compiling rdif-timer v0.1.3\n   Compiling rdif-power v0.1.0\n   Compiling rdif-intc v0.2.0\n   Compiling utf8-width v0.1.7\n   Compiling fdt-parser v0.4.10\n   Compiling rgb v0.8.50\n   Compiling bitflags v2.9.0\n   Compiling page-table-generic v0.5.3\n   Compiling ansi_rgb v0.2.0\n   Compiling rdrive v0.3.3\n   Compiling lazy_static v1.5.0\n   Compiling buddy_system_allocator v0.11.0\n   Compiling dma-api v0.3.0\n   Compiling memory_addr v0.3.2\n   Compiling pasts v0.14.3\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n   Compiling byte-unit v5.1.6\n   Compiling sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:29:10.246686772 +08:00:00\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\n   Compiling strsim v0.11.1\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n    Checking rdif-base v0.1.4\n   Compiling thiserror v2.0.12\n   Compiling rust_decimal v1.37.1\n    Checking log v0.4.27\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n    Checking spin v0.9.8\n    Checking bytemuck v1.22.0\n    Checking arrayvec v0.7.6\n   Compiling anyhow v1.0.97\n    Checking rgb v0.8.50\n    Checking rdif-timer v0.1.3\n    Checking rdif-power v0.1.0\n    Checking rdif-intc v0.2.0\n    Checking utf8-width v0.1.7\n    Checking bitflags v2.9.0\n    Checking fdt-parser v0.4.10\n    Checking ansi_rgb v0.2.0\n    Checking buddy_system_allocator v0.11.0\n    Checking byte-unit v5.1.6\n    Checking lazy_static v1.5.0\n    Checking memory_addr v0.3.2\n    Checking dma-api v0.3.0\n    Checking pasts v0.14.3\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n    Checking numeric-enum-macro v0.2.0\n   Compiling darling_core v0.20.10\n   Compiling abi-singleton v0.3.0\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling thiserror-impl v2.0.12\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros)\n    Checking rdrive v0.3.3\n    Checking page-table-generic v0.5.3\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "simple_test",
      "count": 6,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 2,
          "kinds": {
            "Cargo": [
              "// pkg_name=simple_test, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-02 4:28:44.422139806 +08:00:00\n    Building simple_test v0.9.1 (current)\nerror: running cargo-doc on crate 'simple_test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n   Compiling simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\n Documenting simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `simple_test`\n\n-----\n\nerror: failed to build rustdoc for crate simple_test v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate simple_test v0.9.1\n",
              "// pkg_name=simple_test, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:28:48.316100912 +08:00:00\n    Building simple_test v0.9.1 (current)\n       Built [   0.201s] (current)\n     Parsing simple_test v0.9.1 (current)\n      Parsed [   0.001s] (current)\nerror: simple_test not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 2,
          "kinds": {
            "Semver Violation": [
              "pkg=simple_test, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-02 4:28:48.31404203 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building simple_test v0.9.1 (current)\nerror: running cargo-doc on crate 'simple_test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n   Compiling simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\n Documenting simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `simple_test`\n\n-----\n\nerror: failed to build rustdoc for crate simple_test v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate simple_test v0.9.1\n",
              "pkg=simple_test, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-04-02 4:28:48.989294635 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building simple_test v0.9.1 (current)\n       Built [   0.201s] (current)\n     Parsing simple_test v0.9.1 (current)\n      Parsed [   0.001s] (current)\nerror: simple_test not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=simple_test, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:29:25.778369943 +08:00:00\n   Compiling simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.18s\n   Compiling scopeguard v1.2.0\n   Compiling rdif-base v0.1.4\n   Compiling num-traits v0.2.19\n   Compiling thiserror v2.0.12\n   Compiling lock_api v0.4.12\n   Compiling bytemuck v1.22.0\n   Compiling arrayvec v0.7.6\n   Compiling log v0.4.27\n   Compiling spin v0.9.8\n   Compiling rgb v0.8.50\n   Compiling rdif-intc v0.2.0\n   Compiling rdif-power v0.1.0\n   Compiling rdif-timer v0.1.3\n   Compiling utf8-width v0.1.7\n   Compiling fdt-parser v0.4.10\n   Compiling page-table-generic v0.5.3\n   Compiling ansi_rgb v0.2.0\n   Compiling buddy_system_allocator v0.11.0\n   Compiling rust_decimal v1.37.1\n   Compiling rdrive v0.3.3\n   Compiling lazy_static v1.5.0\n   Compiling anyhow v1.0.97\n   Compiling dma-api v0.3.0\n   Compiling pasts v0.14.3\n   Compiling memory_addr v0.3.2\n   Compiling numeric-enum-macro v0.2.0\n   Compiling byte-unit v5.1.6\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n   Compiling simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\n   Compiling sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-rt/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Mirai": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "helloworld",
      "count": 5,
      "raw_reports": [
        {
          "file": "crates/sparreal-rt/src/lib.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ],
            "Mirai": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=helloworld, checker=Clippy\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-04-02 4:28:21.647282726 +08:00:00\n    Checking sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling helloworld v0.1.0 (/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=helloworld, checker=Lockbud\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:29:59.206009784 +08:00:00\n[2025-04-01T20:29:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-04-01T20:29:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling helloworld v0.1.0 (/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld)\nerror[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=helloworld, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-04-02 4:29:16.714670387 +08:00:00\n   Compiling helloworld v0.1.0 (/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld)\n    Checking sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "page-table-arm",
      "count": 4,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 2,
          "kinds": {
            "Outdated": [
              "pkg=page-table-arm, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:21.643420862 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.11.7   0.11.8  0.11.8  Development  ---\n",
              "pkg=page-table-arm, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:22.422295746 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.11.7   0.11.8  0.11.8  Development  ---\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=page-table-arm, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-04-02 4:28:40.14991485 +08:00:00\n    Building page-table-arm v0.1.1 (current)\nerror: running cargo-doc on crate 'page-table-arm' failed with output:\n-----\n    Checking tock-registers v0.9.0\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate page-table-arm v0.1.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate page-table-arm v0.1.1\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=page-table-arm, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-04-02 4:28:40.583400266 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building page-table-arm v0.1.1 (current)\nerror: running cargo-doc on crate 'page-table-arm' failed with output:\n-----\n    Checking tock-registers v0.9.0\n    Checking bitflags v2.9.0\n    Checking log v0.4.27\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate page-table-arm v0.1.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate page-table-arm v0.1.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-macros",
      "count": 2,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 2,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-macros, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:26.435753519 +08:00:00\n\nName     Project  Compat   Latest   Kind    Platform\n----     -------  ------   ------   ----    --------\ndarling  0.20.10  0.20.11  0.20.11  Normal  ---\n",
              "pkg=sparreal-macros, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:27.210405173 +08:00:00\n\nName     Project  Compat   Latest   Kind    Platform\n----     -------  ------   ------   ----    --------\ndarling  0.20.10  0.20.11  0.20.11  Normal  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "xtask",
      "count": 2,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 2,
          "kinds": {
            "Outdated": [
              "pkg=xtask, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/xtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:29.548083363 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nclap  4.5.32   4.5.35  4.5.35  Normal  cfg(not(target_os = \"none\"))\n",
              "pkg=xtask, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/xtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-04-02 4:30:30.303227706 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nclap  4.5.32   4.5.35  4.5.35  Normal  cfg(not(target_os = \"none\"))\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}