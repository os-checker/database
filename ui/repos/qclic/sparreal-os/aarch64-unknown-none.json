{
  "repo": {
    "user": "qclic",
    "repo": "sparreal-os"
  },
  "data": [
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-kernel",
      "count": 22,
      "raw_reports": [
        {
          "file": "crates/sparreal-kernel/src/platform/mod.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Error)": [
              "error[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\n",
              "error[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/globals/percpu.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\n",
              "error[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/region.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/platform/fdt.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Clippy\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo clippy --target aarch64-unknown-none  --no-deps\n// timestamp=2025-03-24 4:25:32.572491726 +08:00:00\n    Checking sparreal-kernel v0.9.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-03-24 4:27:10.124717695 +08:00:00\n[2025-03-23T20:26:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-03-23T20:26:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sparreal-kernel v0.9.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\nerror[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\nerror[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\nerror[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nSome errors have detailed explanations: E0412, E0425, E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-03-24 4:25:55.939488746 +08:00:00\n    Building sparreal-kernel v0.9.0 (current)\nerror: running cargo-doc on crate 'sparreal-kernel' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-kernel v0.9.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel --features mmu &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-kernel v0.9.0\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sparreal-kernel, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-03-24 4:25:56.672621177 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sparreal-kernel v0.9.0 (current)\nerror: running cargo-doc on crate 'sparreal-kernel' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-kernel v0.9.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel --features mmu &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-kernel v0.9.0\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/boot/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/cache.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "src/globals/percpu.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel/src/globals/percpu.rs (original lines from 82 to 89)\n-        (*PER_CPU.get()).insert(\n-            cpu,\n-            PerCPU {\n-                irq_chips: Default::default(),\n-                timer: Default::default(),\n-                stack: stack_bottom..stack_bottom + kstack_size(),\n-            },\n-        );\n+        (*PER_CPU.get()).insert(cpu, PerCPU {\n+            irq_chips: Default::default(),\n+            timer: Default::default(),\n+            stack: stack_bottom..stack_bottom + kstack_size(),\n+        });\n"
            ]
          }
        },
        {
          "file": "src/irq/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel/src/irq/mod.rs (original lines from 63 to 70)\n-        globals.irq_chips.0.insert(\n-            id,\n-            Chip {\n-                device,\n-                mutex: Mutex::new(()),\n-                handlers: UnsafeCell::new(Default::default()),\n-            },\n-        );\n+        globals.irq_chips.0.insert(id, Chip {\n+            device,\n+            mutex: Mutex::new(()),\n+            handlers: UnsafeCell::new(Default::default()),\n+        });\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "page-table-arm",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=page-table-arm, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-03-24 4:25:46.76602588 +08:00:00\n    Building page-table-arm v0.1.0 (current)\nerror: running cargo-doc on crate 'page-table-arm' failed with output:\n-----\n    Checking tock-registers v0.9.0\n    Checking bitflags v2.9.0\n    Checking log v0.4.26\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate page-table-arm v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate page-table-arm v0.1.0\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=page-table-arm, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-03-24 4:27:27.864606423 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.11.6   0.11.7  0.11.7  Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=page-table-arm, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-03-24 4:25:47.183668536 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building page-table-arm v0.1.0 (current)\nerror: running cargo-doc on crate 'page-table-arm' failed with output:\n-----\n    Checking tock-registers v0.9.0\n    Checking bitflags v2.9.0\n    Checking log v0.4.26\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nerror: could not compile `bitflags` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate page-table-arm v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate page-table-arm v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-rt",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-03-24 4:26:09.717290505 +08:00:00\n    Building sparreal-rt v0.9.0 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.0\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-rt, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-03-24 4:27:34.871482762 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\nsmccc  0.1.1    ---     0.2.0   Normal  cfg(target_arch = \"aarch64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sparreal-rt, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-03-24 4:26:10.469549405 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sparreal-rt v0.9.0 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "bare-test",
      "count": 2,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-03-24 4:25:39.433438925 +08:00:00\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking rdif-base v0.1.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rdif-base` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=bare-test, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-03-24 4:25:40.436578046 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking rdif-base v0.1.4\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `rdif-base` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "simple_test",
      "count": 2,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=simple_test, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-03-24 4:25:51.216848244 +08:00:00\n    Building simple_test v0.9.0 (current)\nerror: running cargo-doc on crate 'simple_test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n   Compiling simple_test v0.9.0 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\n Documenting simple_test v0.9.0 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `simple_test`\n\n-----\n\nerror: failed to build rustdoc for crate simple_test v0.9.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate simple_test v0.9.0\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=simple_test, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-03-24 4:25:55.221809682 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building simple_test v0.9.0 (current)\nerror: running cargo-doc on crate 'simple_test' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n   Compiling simple_test v0.9.0 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\n Documenting simple_test v0.9.0 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not document `simple_test`\n\n-----\n\nerror: failed to build rustdoc for crate simple_test v0.9.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate simple_test v0.9.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "bare-test-macros",
      "count": 1,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=bare-test-macros, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-03-24 4:27:24.875433 +08:00:00\n\nName   Project  Compat   Latest   Kind    Platform\n----   -------  ------   ------   ----    --------\nquote  1.0.39   1.0.40   1.0.40   Normal  ---\nsyn    2.0.99   2.0.100  2.0.100  Normal  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-macros",
      "count": 1,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-macros, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-03-24 4:27:32.724050269 +08:00:00\n\nName   Project  Compat   Latest   Kind    Platform\n----   -------  ------   ------   ----    --------\nquote  1.0.39   1.0.40   1.0.40   Normal  ---\nsyn    2.0.99   2.0.100  2.0.100  Normal  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "xtask",
      "count": 1,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=xtask, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/xtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-03-24 4:27:35.607088944 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nclap  4.5.31   4.5.32  4.5.32  Normal  cfg(not(target_os = \"none\"))\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}