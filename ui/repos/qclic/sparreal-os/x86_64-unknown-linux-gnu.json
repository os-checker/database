{
  "repo": {
    "user": "qclic",
    "repo": "sparreal-os"
  },
  "data": [
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-kernel",
      "count": 40,
      "raw_reports": [
        {
          "file": "crates/sparreal-kernel/src/platform/mod.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Mirai": [
              "error[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\n",
              "error[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n"
            ],
            "Clippy(Error)": [
              "error[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\n",
              "error[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\n",
              "error[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/globals/percpu.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/mod.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of undeclared crate or module `mmu`\n\n",
              "error[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\n",
              "error[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/region.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\n",
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/platform/fdt.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n"
            ],
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n",
              "error[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/boot/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\n"
            ],
            "Mirai": [
              "error[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-kernel/src/mem/cache.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Clippy\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-25 11:24:40.070586009 +08:00:00\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Lockbud\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:26:45.288488278 +08:00:00\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0432]: unresolved imports `crate::platform_if::MMUImpl`, `crate::platform_if::RegionKind`\n  --> crates/sparreal-kernel/src/globals/percpu.rs:15:19\n   |\n15 |     platform_if::{MMUImpl, RegionKind},\n   |                   ^^^^^^^  ^^^^^^^^^^ no `RegionKind` in `platform_if`\n   |                   |\n   |                   no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `mmu`\n  --> crates/sparreal-kernel/src/mem/mod.rs:11:5\n   |\n11 | use mmu::RegionKind;\n   |     ^^^ use of unresolved module or unlinked crate `mmu`\n   |\n   = help: if you wanted to use a crate named `mmu`, use `cargo add mmu` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/cache.rs:7:33\n   |\n7  | use super::{PhysAddr, VirtAddr, mmu::RegionKind};\n   |                                 ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::platform_if::MMUImpl`\n --> crates/sparreal-kernel/src/mem/region.rs:4:26\n  |\n4 | use crate::platform_if::{MMUImpl, PlatformImpl};\n  |                          ^^^^^^^ no `MMUImpl` in `platform_if`\n\nerror[E0432]: unresolved import `super::mmu`\n  --> crates/sparreal-kernel/src/mem/region.rs:6:13\n   |\n6  | use super::{mmu::BootRegion, once::OnceStatic};\n   |             ^^^ could not find `mmu` in `super`\n   |\nnote: found an item that was configured out\n  --> crates/sparreal-kernel/src/mem/mod.rs:20:9\n   |\n20 | pub mod mmu;\n   |         ^^^\nnote: the item is gated behind the `mmu` feature\n  --> crates/sparreal-kernel/src/mem/mod.rs:19:7\n   |\n19 | #[cfg(feature = \"mmu\")]\n   |       ^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::platform_if::RegionKind`, `crate::platform_if::is_mmu_enabled`\n  --> crates/sparreal-kernel/src/platform/fdt.rs:10:26\n   |\n10 | use crate::platform_if::{RegionKind, is_mmu_enabled};\n   |                          ^^^^^^^^^^  ^^^^^^^^^^^^^^ no `is_mmu_enabled` in `platform_if`\n   |                          |\n   |                          no `RegionKind` in `platform_if`\n\nerror[E0412]: cannot find type `BootRegion` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:113:26\n    |\n113 | pub fn regsions() -> Vec<BootRegion> {\n    |                          ^^^^^^^^^^ not found in this scope\n    |\nhelp: you might be missing a type parameter\n    |\n113 | pub fn regsions<BootRegion>() -> Vec<BootRegion> {\n    |                ++++++++++++\n\nerror[E0412]: cannot find type `ArrayVec` in this scope\n   --> crates/sparreal-kernel/src/platform/mod.rs:142:26\n    |\n142 | pub fn phys_memorys() -> ArrayVec<Range<PhysAddr>, 12> {\n    |                          ^^^^^^^^ not found in this scope\n    |\nhelp: consider importing this struct\n    |\n1   + use arrayvec::ArrayVec;\n    |\n\nerror[E0425]: cannot find function `set_mmu_enabled` in this scope\n  --> crates/sparreal-kernel/src/boot/mod.rs:29:5\n   |\n29 |     set_mmu_enabled();\n   |     ^^^^^^^^^^^^^^^ not found in this scope\n\nerror[E0599]: no method named `as_usize` found for struct `mem::addr::Phys` in the current scope\n   --> crates/sparreal-kernel/src/mem/mod.rs:137:38\n    |\n137 |         NonNull::new_unchecked(paddr.as_usize() as *mut u8)\n    |                                      ^^^^^^^^ method not found in `Phys<u8>`\n    |\n   ::: crates/sparreal-kernel/src/mem/addr.rs:69:9\n    |\n69  |         pub struct $name<T>($t, core::marker::PhantomData<T>);\n    |         ------------------------------------------------------ method `as_usize` not found for this struct\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:117:14\n    |\n117 |     ret.push(BootRegion::new(\n    |              ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:122:9\n    |\n122 |         RegionKind::Other,\n    |         ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nerror[E0433]: failed to resolve: use of undeclared type `BootRegion`\n   --> crates/sparreal-kernel/src/platform/mod.rs:130:18\n    |\n130 |         ret.push(BootRegion::new(\n    |                  ^^^^^^^^^^ use of undeclared type `BootRegion`\n\nerror[E0433]: failed to resolve: use of undeclared type `RegionKind`\n   --> crates/sparreal-kernel/src/platform/mod.rs:135:13\n    |\n135 |             RegionKind::Other,\n    |             ^^^^^^^^^^ use of undeclared type `RegionKind`\n\nSome errors have detailed explanations: E0412, E0425, E0432, E0433, E0599.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-kernel, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:26:10.831463368 +08:00:00\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-kernel` (lib) due to 14 previous errors\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T03:26:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-kernel, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 11:27:06.720406934 +08:00:00\n\nName        Project  Compat  Latest  Kind    Platform\n----        -------  ------  ------  ----    --------\nanyhow      1.0.97   1.0.98  1.0.98  Normal  ---\nfdt-parser  0.4.10   0.4.16  0.4.16  Normal  ---\nrdrive      0.3.3    ---     0.9.1   Normal  ---\nspin        0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "src/globals/percpu.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel/src/globals/percpu.rs (original lines from 82 to 89)\n-        (*PER_CPU.get()).insert(\n-            cpu,\n-            PerCPU {\n-                irq_chips: Default::default(),\n-                timer: Default::default(),\n-                stack: stack_bottom..stack_bottom + kstack_size(),\n-            },\n-        );\n+        (*PER_CPU.get()).insert(cpu, PerCPU {\n+            irq_chips: Default::default(),\n+            timer: Default::default(),\n+            stack: stack_bottom..stack_bottom + kstack_size(),\n+        });\n"
            ]
          }
        },
        {
          "file": "src/irq/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel/src/irq/mod.rs (original lines from 63 to 70)\n-        globals.irq_chips.0.insert(\n-            id,\n-            Chip {\n-                device,\n-                mutex: Mutex::new(()),\n-                handlers: UnsafeCell::new(Default::default()),\n-            },\n-        );\n+        globals.irq_chips.0.insert(id, Chip {\n+            device,\n+            mutex: Mutex::new(()),\n+            handlers: UnsafeCell::new(Default::default()),\n+        });\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-rt",
      "count": 21,
      "raw_reports": [
        {
          "file": "crates/sparreal-rt/src/mem/mod.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:61:25\n   |\n61 |             let start = concat_idents!(_s, $name) as *const u8 as usize;\n   |                         ^^^^^^^^^^^^^\n...\n68 | fn_ld_range!(rodata);\n   | -------------------- in this macro invocation\n   |\n   = note: `#[warn(deprecated)]` on by default\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:62:23\n   |\n62 |             let end = concat_idents!(_e, $name) as *const u8 as usize;\n   |                       ^^^^^^^^^^^^^\n...\n68 | fn_ld_range!(rodata);\n   | -------------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:61:25\n   |\n61 |             let start = concat_idents!(_s, $name) as *const u8 as usize;\n   |                         ^^^^^^^^^^^^^\n...\n69 | fn_ld_range!(data);\n   | ------------------ in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:62:23\n   |\n62 |             let end = concat_idents!(_e, $name) as *const u8 as usize;\n   |                       ^^^^^^^^^^^^^\n...\n69 | fn_ld_range!(data);\n   | ------------------ in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:61:25\n   |\n61 |             let start = concat_idents!(_s, $name) as *const u8 as usize;\n   |                         ^^^^^^^^^^^^^\n...\n70 | fn_ld_range!(bss);\n   | ----------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:62:23\n   |\n62 |             let end = concat_idents!(_e, $name) as *const u8 as usize;\n   |                       ^^^^^^^^^^^^^\n...\n70 | fn_ld_range!(bss);\n   | ----------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-rt/build.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: variables can be used directly in the `format!` string\n  --> crates/sparreal-rt/build.rs:64:13\n   |\n64 |             format!(\"{:?}\", self)\n   |             ^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n64 -             format!(\"{:?}\", self)\n64 +             format!(\"{self:?}\")\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> crates/sparreal-rt/build.rs:69:64\n   |\n69 |         let ld_content = ld_content.replace(\"%KERNEL_VADDR%\", &format!(\"{:#x}\", ENTRY_VADDR));\n   |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n69 -         let ld_content = ld_content.replace(\"%KERNEL_VADDR%\", &format!(\"{:#x}\", ENTRY_VADDR));\n69 +         let ld_content = ld_content.replace(\"%KERNEL_VADDR%\", &format!(\"{ENTRY_VADDR:#x}\"));\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> crates/sparreal-rt/build.rs:72:49\n   |\n72 |             ld_content.replace(\"%STACK_SIZE%\", &format!(\"{:#x}\", DEFAULT_KERNEL_STACK_SIZE));\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n72 -             ld_content.replace(\"%STACK_SIZE%\", &format!(\"{:#x}\", DEFAULT_KERNEL_STACK_SIZE));\n72 +             ld_content.replace(\"%STACK_SIZE%\", &format!(\"{DEFAULT_KERNEL_STACK_SIZE:#x}\"));\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> crates/sparreal-rt/build.rs:78:25\n   |\n78 |       let const_content = format!(\n   |  _________________________^\n79 | |         r#\"pub const KERNEL_STACK_SIZE: usize = {:#x};\n80 | |             \"#,\n81 | |         DEFAULT_KERNEL_STACK_SIZE\n82 | |     );\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-rt/src/lib.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Mirai": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ],
            "Clippy(Warn)": [
              "warning: the feature `naked_functions` has been stable since 1.88.0 and no longer requires an attribute to enable\n --> crates/sparreal-rt/src/lib.rs:3:12\n  |\n3 | #![feature(naked_functions)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ],
            "Clippy(Error)": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=Clippy\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-25 11:24:42.497768313 +08:00:00\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error; 7 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=Lockbud\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:26:45.986080013 +08:00:00\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:26:15.398878166 +08:00:00\n    Checking sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=sparreal-rt, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:25:52.412692686 +08:00:00\n    Building sparreal-rt v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking rdif-base v0.1.4\n   Compiling thiserror v2.0.12\n   Compiling num-traits v0.2.19\n   Compiling rust_decimal v1.37.1\n    Checking log v0.4.27\n    Checking arrayvec v0.7.6\n    Checking bytemuck v1.23.0\n    Checking spin v0.9.8\n   Compiling anyhow v1.0.98\n    Checking rdif-timer v0.1.3\n    Checking rdif-intc v0.2.0\n    Checking rgb v0.8.50\n    Checking rdif-power v0.1.0\n    Checking utf8-width v0.1.7\n    Checking fdt-parser v0.4.16\n    Checking bitflags v2.9.1\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n    Checking buddy_system_allocator v0.11.0\n    Checking ansi_rgb v0.2.0\n    Checking lazy_static v1.5.0\n    Checking dma-api v0.3.0\n    Checking memory_addr v0.3.2\n    Checking pasts v0.14.3\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking numeric-enum-macro v0.2.0\n    Checking byte-unit v5.1.6\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\n Documenting sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror[E0583]: file not found for module `arch`\n  --> /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch.rs\" or \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not document `sparreal-rt`\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.1\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T03:26:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-rt, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 11:27:08.84597251 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\nany-uart        0.2.1    0.2.11  0.2.11  Normal  cfg(target_arch = \"aarch64\")\narm-gic-driver  0.7.0    0.7.1   0.11.0  Normal  cfg(target_arch = \"aarch64\")\nfdt-parser      0.4.10   0.4.16  0.4.16  Normal  ---\npage-table-arm  0.1.0    0.1.1   0.1.1   Normal  cfg(target_arch = \"aarch64\")\nsmccc           0.1.1    ---     0.2.1   Normal  cfg(target_arch = \"aarch64\")\nspin            0.9.8    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=sparreal-rt, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-25 11:25:54.02473378 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building sparreal-rt v0.9.1 (current)\nerror: running cargo-doc on crate 'sparreal-rt' failed with output:\n-----\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking rdif-base v0.1.4\n   Compiling thiserror v2.0.12\n   Compiling num-traits v0.2.19\n   Compiling rust_decimal v1.37.1\n    Checking log v0.4.27\n    Checking arrayvec v0.7.6\n    Checking bytemuck v1.23.0\n    Checking spin v0.9.8\n   Compiling anyhow v1.0.98\n    Checking rdif-timer v0.1.3\n    Checking rdif-intc v0.2.0\n    Checking rgb v0.8.50\n    Checking rdif-power v0.1.0\n    Checking utf8-width v0.1.7\n    Checking fdt-parser v0.4.16\n    Checking bitflags v2.9.1\n    Checking page-table-generic v0.5.3\n    Checking rdrive v0.3.3\n    Checking buddy_system_allocator v0.11.0\n    Checking ansi_rgb v0.2.0\n    Checking lazy_static v1.5.0\n    Checking dma-api v0.3.0\n    Checking memory_addr v0.3.2\n    Checking pasts v0.14.3\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking numeric-enum-macro v0.2.0\n    Checking byte-unit v5.1.6\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\n Documenting sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror[E0583]: file not found for module `arch`\n  --> /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch.rs\" or \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not document `sparreal-rt`\n\n-----\n\nerror: failed to build rustdoc for crate sparreal-rt v0.9.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt --features default,early-print,vm &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sparreal-rt v0.9.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "bare-test",
      "count": 16,
      "raw_reports": [
        {
          "file": "crates/sparreal-rt/src/mem/mod.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:61:25\n   |\n61 |             let start = concat_idents!(_s, $name) as *const u8 as usize;\n   |                         ^^^^^^^^^^^^^\n...\n68 | fn_ld_range!(rodata);\n   | -------------------- in this macro invocation\n   |\n   = note: `#[warn(deprecated)]` on by default\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:62:23\n   |\n62 |             let end = concat_idents!(_e, $name) as *const u8 as usize;\n   |                       ^^^^^^^^^^^^^\n...\n68 | fn_ld_range!(rodata);\n   | -------------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:61:25\n   |\n61 |             let start = concat_idents!(_s, $name) as *const u8 as usize;\n   |                         ^^^^^^^^^^^^^\n...\n69 | fn_ld_range!(data);\n   | ------------------ in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:62:23\n   |\n62 |             let end = concat_idents!(_e, $name) as *const u8 as usize;\n   |                       ^^^^^^^^^^^^^\n...\n69 | fn_ld_range!(data);\n   | ------------------ in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:61:25\n   |\n61 |             let start = concat_idents!(_s, $name) as *const u8 as usize;\n   |                         ^^^^^^^^^^^^^\n...\n70 | fn_ld_range!(bss);\n   | ----------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:62:23\n   |\n62 |             let end = concat_idents!(_e, $name) as *const u8 as usize;\n   |                       ^^^^^^^^^^^^^\n...\n70 | fn_ld_range!(bss);\n   | ----------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-rt/src/lib.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Error)": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ],
            "Mirai": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ],
            "Clippy(Warn)": [
              "warning: the feature `naked_functions` has been stable since 1.88.0 and no longer requires an attribute to enable\n --> crates/sparreal-rt/src/lib.rs:3:12\n  |\n3 | #![feature(naked_functions)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=Clippy\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-25 11:24:30.353374669 +08:00:00\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking rdif-base v0.1.4\n   Compiling thiserror v2.0.12\n   Compiling num-traits v0.2.19\n   Compiling rust_decimal v1.37.1\n    Checking arrayvec v0.7.6\n    Checking bytemuck v1.22.0\n    Checking spin v0.9.8\n    Checking log v0.4.27\n   Compiling anyhow v1.0.97\n    Checking rgb v0.8.50\n    Checking rdif-power v0.1.0\n    Checking rdif-intc v0.2.0\n    Checking rdif-timer v0.1.3\n    Checking fdt-parser v0.4.10\n    Checking utf8-width v0.1.7\n    Checking bitflags v2.9.0\n    Checking page-table-generic v0.5.3\n    Checking ansi_rgb v0.2.0\n    Checking rdrive v0.3.3\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros)\n    Checking lazy_static v1.5.0\n    Checking buddy_system_allocator v0.11.0\n    Checking memory_addr v0.3.2\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking pasts v0.14.3\n    Checking dma-api v0.3.0\n    Checking numeric-enum-macro v0.2.0\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n    Checking byte-unit v5.1.6\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error; 7 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=Lockbud\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:26:38.295677119 +08:00:00\n   Compiling scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n   Compiling rdif-base v0.1.4\n   Compiling thiserror v2.0.12\n   Compiling num-traits v0.2.19\n   Compiling rust_decimal v1.37.1\n   Compiling bytemuck v1.22.0\n   Compiling arrayvec v0.7.6\n   Compiling spin v0.9.8\n   Compiling log v0.4.27\n   Compiling rgb v0.8.50\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling anyhow v1.0.97\n   Compiling rdif-power v0.1.0\n   Compiling rdif-intc v0.2.0\n   Compiling rdif-timer v0.1.3\n   Compiling fdt-parser v0.4.10\n   Compiling bitflags v2.9.0\n   Compiling utf8-width v0.1.7\n   Compiling ansi_rgb v0.2.0\n   Compiling page-table-generic v0.5.3\n   Compiling rdrive v0.3.3\n   Compiling lazy_static v1.5.0\n   Compiling buddy_system_allocator v0.11.0\n   Compiling pasts v0.14.3\n   Compiling dma-api v0.3.0\n   Compiling memory_addr v0.3.2\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n   Compiling byte-unit v5.1.6\n   Compiling sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:25:54.367448647 +08:00:00\n   Compiling proc-macro2 v1.0.94\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n    Checking scopeguard v1.2.0\n   Compiling ident_case v1.0.1\n   Compiling thiserror v2.0.12\n   Compiling fnv v1.0.7\n   Compiling strsim v0.11.1\n    Checking rdif-base v0.1.4\n   Compiling rust_decimal v1.37.1\n    Checking log v0.4.27\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.40\n   Compiling syn v2.0.100\n    Checking spin v0.9.8\n   Compiling anyhow v1.0.97\n    Checking arrayvec v0.7.6\n    Checking bytemuck v1.22.0\n    Checking rdif-power v0.1.0\n    Checking rdif-intc v0.2.0\n    Checking rdif-timer v0.1.3\n    Checking rgb v0.8.50\n    Checking fdt-parser v0.4.10\n    Checking utf8-width v0.1.7\n    Checking bitflags v2.9.0\n    Checking ansi_rgb v0.2.0\n    Checking buddy_system_allocator v0.11.0\n    Checking byte-unit v5.1.6\n    Checking lazy_static v1.5.0\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking dma-api v0.3.0\n    Checking pasts v0.14.3\n    Checking memory_addr v0.3.2\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n    Checking numeric-enum-macro v0.2.0\n   Compiling darling_core v0.20.10\n   Compiling rdrive-macro-utils v0.2.1\n   Compiling abi-singleton v0.3.0\n   Compiling thiserror-impl v2.0.12\n   Compiling bare-test-macros v0.2.0 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros)\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n    Checking rdrive v0.3.3\n    Checking page-table-generic v0.5.3\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=bare-test, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:25:03.560897873 +08:00:00\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking rdif-base v0.1.4\n   Compiling thiserror v2.0.12\n   Compiling num-traits v0.2.19\n   Compiling rust_decimal v1.37.1\n    Checking bytemuck v1.23.0\n    Checking log v0.4.27\n    Checking arrayvec v0.7.6\n    Checking spin v0.9.8\n    Checking rgb v0.8.50\n   Compiling anyhow v1.0.98\n    Checking rdif-timer v0.1.3\n    Checking rdif-power v0.1.0\n    Checking rdif-intc v0.2.0\n    Checking bitflags v2.9.1\n    Checking utf8-width v0.1.7\n    Checking fdt-parser v0.4.16\n    Checking page-table-generic v0.5.3\n    Checking ansi_rgb v0.2.0\n    Checking lazy_static v1.5.0\n    Checking buddy_system_allocator v0.11.0\n    Checking rdrive v0.3.3\n    Checking dma-api v0.3.0\n    Checking memory_addr v0.3.2\n    Checking pasts v0.14.3\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking numeric-enum-macro v0.2.0\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n    Checking byte-unit v5.1.6\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0583]: file not found for module `arch`\n  --> /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch.rs\" or \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T03:26:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=bare-test, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-25 11:25:05.3057746 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building bare-test v0.4.1 (current)\nerror: running cargo-doc on crate 'bare-test' failed with output:\n-----\n    Checking scopeguard v1.2.0\n   Compiling lock_api v0.4.12\n    Checking rdif-base v0.1.4\n   Compiling thiserror v2.0.12\n   Compiling num-traits v0.2.19\n   Compiling rust_decimal v1.37.1\n    Checking bytemuck v1.23.0\n    Checking log v0.4.27\n    Checking arrayvec v0.7.6\n    Checking spin v0.9.8\n    Checking rgb v0.8.50\n   Compiling anyhow v1.0.98\n    Checking rdif-timer v0.1.3\n    Checking rdif-power v0.1.0\n    Checking rdif-intc v0.2.0\n    Checking bitflags v2.9.1\n    Checking utf8-width v0.1.7\n    Checking fdt-parser v0.4.16\n    Checking page-table-generic v0.5.3\n    Checking ansi_rgb v0.2.0\n    Checking lazy_static v1.5.0\n    Checking buddy_system_allocator v0.11.0\n    Checking rdrive v0.3.3\n    Checking dma-api v0.3.0\n    Checking memory_addr v0.3.2\n    Checking pasts v0.14.3\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n    Checking numeric-enum-macro v0.2.0\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n    Checking byte-unit v5.1.6\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror[E0583]: file not found for module `arch`\n  --> /home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch.rs\" or \"/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate bare-test v0.4.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test --features default,rt,sparreal-rt &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate bare-test v0.4.1\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "helloworld",
      "count": 14,
      "raw_reports": [
        {
          "file": "crates/sparreal-rt/src/mem/mod.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:61:25\n   |\n61 |             let start = concat_idents!(_s, $name) as *const u8 as usize;\n   |                         ^^^^^^^^^^^^^\n...\n68 | fn_ld_range!(rodata);\n   | -------------------- in this macro invocation\n   |\n   = note: `#[warn(deprecated)]` on by default\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:62:23\n   |\n62 |             let end = concat_idents!(_e, $name) as *const u8 as usize;\n   |                       ^^^^^^^^^^^^^\n...\n68 | fn_ld_range!(rodata);\n   | -------------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:61:25\n   |\n61 |             let start = concat_idents!(_s, $name) as *const u8 as usize;\n   |                         ^^^^^^^^^^^^^\n...\n69 | fn_ld_range!(data);\n   | ------------------ in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:62:23\n   |\n62 |             let end = concat_idents!(_e, $name) as *const u8 as usize;\n   |                       ^^^^^^^^^^^^^\n...\n69 | fn_ld_range!(data);\n   | ------------------ in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:61:25\n   |\n61 |             let start = concat_idents!(_s, $name) as *const u8 as usize;\n   |                         ^^^^^^^^^^^^^\n...\n70 | fn_ld_range!(bss);\n   | ----------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n",
              "warning: use of deprecated macro `concat_idents`: use `${concat(...)}` with the `macro_metavar_expr_concat` feature instead\n  --> crates/sparreal-rt/src/mem/mod.rs:62:23\n   |\n62 |             let end = concat_idents!(_e, $name) as *const u8 as usize;\n   |                       ^^^^^^^^^^^^^\n...\n70 | fn_ld_range!(bss);\n   | ----------------- in this macro invocation\n   |\n   = note: this warning originates in the macro `fn_ld_range` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-rt/src/lib.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Mirai": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ],
            "Clippy(Warn)": [
              "warning: the feature `naked_functions` has been stable since 1.88.0 and no longer requires an attribute to enable\n --> crates/sparreal-rt/src/lib.rs:3:12\n  |\n3 | #![feature(naked_functions)]\n  |            ^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ],
            "Clippy(Error)": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=helloworld, checker=Clippy\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-25 11:24:34.556418357 +08:00:00\n   Compiling sparreal-macros v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\n   Compiling helloworld v0.1.0 (/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld)\n    Checking sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error; 7 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=helloworld, checker=Lockbud\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:26:40.884174882 +08:00:00\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling helloworld v0.1.0 (/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\nFor more information about this error, try `rustc --explain E0583`.\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=helloworld, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:26:00.605587587 +08:00:00\n   Compiling helloworld v0.1.0 (/home/runner/check/batch_6/qclic/sparreal-os/apps/helloworld)\n    Checking sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T03:26:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "xtask",
      "count": 11,
      "raw_reports": [
        {
          "file": "xtask/src/cli/up_version.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Clippy(Warn)": [
              "warning: variables can be used directly in the `format!` string\n  --> xtask/src/cli/up_version.rs:22:5\n   |\n22 |     println!(\"Current version: {}\", old);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n   = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n   |\n22 -     println!(\"Current version: {}\", old);\n22 +     println!(\"Current version: {old}\");\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> xtask/src/cli/up_version.rs:40:27\n   |\n40 |         let new_version = format!(\"{}.{}\", major, minor);\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n40 -         let new_version = format!(\"{}.{}\", major, minor);\n40 +         let new_version = format!(\"{major}.{minor}\");\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> xtask/src/cli/up_version.rs:63:23\n   |\n63 |     let new_version = format!(\"{}.{}.{}\", major, minor, patch);\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n63 -     let new_version = format!(\"{}.{}.{}\", major, minor, patch);\n63 +     let new_version = format!(\"{major}.{minor}.{patch}\");\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> xtask/src/cli/up_version.rs:64:5\n   |\n64 |     println!(\"New version: {}\", new_version);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n64 -     println!(\"New version: {}\", new_version);\n64 +     println!(\"New version: {new_version}\");\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> xtask/src/cli/up_version.rs:70:10\n   |\n70 |         &format!(\"version = \\\"{}\\\"\", old),\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n70 -         &format!(\"version = \\\"{}\\\"\", old),\n70 +         &format!(\"version = \\\"{old}\\\"\"),\n   |\n\n",
              "warning: variables can be used directly in the `format!` string\n  --> xtask/src/cli/up_version.rs:71:10\n   |\n71 |         &format!(\"version = \\\"{}\\\"\", new_version),\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n   |\n71 -         &format!(\"version = \\\"{}\\\"\", new_version),\n71 +         &format!(\"version = \\\"{new_version}\\\"\"),\n   |\n\n",
              "warning: this `if` statement can be collapsed\n  --> xtask/src/cli/up_version.rs:83:5\n   |\n83 | /     if let Some(workspace) = cargo_toml.get(\"workspace\") {\n84 | |         if let Some(package) = workspace.get(\"package\") {\n85 | |             if let Some(version) = package.get(\"version\") {\n86 | |                 if let Some(version_str) = version.as_str() {\n...  |\n91 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n83 ~     if let Some(workspace) = cargo_toml.get(\"workspace\")\n84 ~         && let Some(package) = workspace.get(\"package\") {\n85 |             if let Some(version) = package.get(\"version\") {\n...\n89 |             }\n90 ~         }\n   |\n\n",
              "warning: this `if` statement can be collapsed\n  --> xtask/src/cli/up_version.rs:84:9\n   |\n84 | /         if let Some(package) = workspace.get(\"package\") {\n85 | |             if let Some(version) = package.get(\"version\") {\n86 | |                 if let Some(version_str) = version.as_str() {\n87 | |                     return Ok(version_str.to_string());\n...  |\n90 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n84 ~         if let Some(package) = workspace.get(\"package\")\n85 ~             && let Some(version) = package.get(\"version\") {\n86 |                 if let Some(version_str) = version.as_str() {\n87 |                     return Ok(version_str.to_string());\n88 |                 }\n89 ~             }\n   |\n\n",
              "warning: this `if` statement can be collapsed\n  --> xtask/src/cli/up_version.rs:85:13\n   |\n85 | /             if let Some(version) = package.get(\"version\") {\n86 | |                 if let Some(version_str) = version.as_str() {\n87 | |                     return Ok(version_str.to_string());\n88 | |                 }\n89 | |             }\n   | |_____________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n85 ~             if let Some(version) = package.get(\"version\")\n86 ~                 && let Some(version_str) = version.as_str() {\n87 |                     return Ok(version_str.to_string());\n88 ~                 }\n   |\n\n",
              "warning: this `if` statement can be collapsed\n   --> xtask/src/cli/up_version.rs:106:13\n    |\n106 | /             if let Some(pkg) = dependencies.get_mut(dep) {\n107 | |                 if let Some(old_version) = pkg.get_mut(\"version\") {\n108 | |                     println!(\n109 | |                         \"{}: {}->{}\",\n...   |\n118 | |             }\n    | |_____________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n    |\n106 ~             if let Some(pkg) = dependencies.get_mut(dep)\n107 ~                 && let Some(old_version) = pkg.get_mut(\"version\") {\n108 |                     println!(\n...\n116 |                     changed = true;\n117 ~                 }\n    |\n\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=xtask, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/xtask\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 11:27:10.924631414 +08:00:00\n\nName  Project  Compat  Latest  Kind    Platform\n----  -------  ------  ------  ----    --------\nclap  4.5.32   4.5.38  4.5.38  Normal  cfg(not(target_os = \"none\"))\ntoml  0.8.20   0.8.22  0.8.22  Normal  cfg(not(target_os = \"none\"))\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "simple_test",
      "count": 4,
      "raw_reports": [
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=simple_test, checker=Mirai\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:26:08.712880666 +08:00:00\n   Compiling simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.17s\n   Compiling scopeguard v1.2.0\n   Compiling rdif-base v0.1.4\n   Compiling num-traits v0.2.19\n   Compiling thiserror v2.0.12\n   Compiling lock_api v0.4.12\n   Compiling bytemuck v1.22.0\n   Compiling log v0.4.27\n   Compiling arrayvec v0.7.6\n   Compiling rgb v0.8.50\n   Compiling spin v0.9.8\n   Compiling rdif-power v0.1.0\n   Compiling rdif-intc v0.2.0\n   Compiling rdif-timer v0.1.3\n   Compiling fdt-parser v0.4.10\n   Compiling utf8-width v0.1.7\n   Compiling page-table-generic v0.5.3\n   Compiling ansi_rgb v0.2.0\n   Compiling anyhow v1.0.97\n   Compiling rust_decimal v1.37.1\n   Compiling rdrive v0.3.3\n   Compiling lazy_static v1.5.0\n   Compiling buddy_system_allocator v0.11.0\n   Compiling pasts v0.14.3\n   Compiling memory_addr v0.3.2\n   Compiling dma-api v0.3.0\n   Compiling numeric-enum-macro v0.2.0\n   Compiling bare-test v0.4.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test)\n   Compiling simple_test v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test)\n   Compiling byte-unit v5.1.6\n   Compiling sparreal-kernel v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-kernel)\n   Compiling sparreal-rt v0.9.1 (/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-rt)\nerror: could not compile `sparreal-rt` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=simple_test, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-25 11:25:16.809582924 +08:00:00\n    Building simple_test v0.9.1 (current)\n       Built [   0.195s] (current)\n     Parsing simple_test v0.9.1 (current)\n      Parsed [   0.001s] (current)\nerror: simple_test not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=simple_test, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/apps/simple_test\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-25 11:25:17.282310598 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building simple_test v0.9.1 (current)\n       Built [   0.195s] (current)\n     Parsing simple_test v0.9.1 (current)\n      Parsed [   0.001s] (current)\nerror: simple_test not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-rt/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Mirai": [
              "error[E0583]: file not found for module `arch`\n  --> crates/sparreal-rt/src/lib.rs:10:1\n   |\n10 | pub mod arch;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `arch`, create file \"crates/sparreal-rt/src/arch.rs\" or \"crates/sparreal-rt/src/arch/mod.rs\"\n   = note: if there is a `mod arch` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "page-table-arm",
      "count": 3,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-25T03:26:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-25T03:26:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=page-table-arm, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/page-table-arm\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 11:27:03.977348056 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nbitflags    2.9.0    2.9.1   2.9.1   Normal       ---\nenv_logger  0.11.7   0.11.8  0.11.8  Development  ---\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "sparreal-macros",
      "count": 2,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=sparreal-macros, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/sparreal-macros\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 11:27:08.12000665 +08:00:00\n\nName                Project  Compat   Latest   Kind    Platform\n----                -------  ------   ------   ----    --------\ndarling             0.20.10  0.20.11  0.20.11  Normal  ---\nproc-macro2         1.0.94   1.0.95   1.0.95   Normal  ---\nrdrive-macro-utils  0.2.1    ---      0.3.3    Normal  ---\nsyn                 2.0.100  2.0.101  2.0.101  Normal  ---\n"
            ]
          }
        },
        {
          "file": "crates/sparreal-macros/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this `if` statement can be collapsed\n   --> crates/sparreal-macros/src/lib.rs:126:5\n    |\n126 | /     if let Type::Path(p) = ty {\n127 | |         if p.qself.is_none() && p.path.leading_colon.is_none() && p.path.segments.len() == 1 {\n128 | |             let segment = p.path.segments.first().unwrap();\n129 | |             if segment.ident == name && segment.arguments == PathArguments::None {\n...   |\n133 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n126 ~     if let Type::Path(p) = ty\n127 ~         && p.qself.is_none() && p.path.leading_colon.is_none() && p.path.segments.len() == 1 {\n128 |             let segment = p.path.segments.first().unwrap();\n...\n131 |             }\n132 ~         }\n    |\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "qclic",
      "repo": "sparreal-os",
      "pkg": "bare-test-macros",
      "count": 1,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=bare-test-macros, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_6/qclic/sparreal-os/crates/bare-test-macros\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 11:27:01.142135242 +08:00:00\n\nName         Project  Compat   Latest   Kind    Platform\n----         -------  ------   ------   ----    --------\nproc-macro2  1.0.94   1.0.95   1.0.95   Normal  ---\nsyn          2.0.100  2.0.101  2.0.101  Normal  ---\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}