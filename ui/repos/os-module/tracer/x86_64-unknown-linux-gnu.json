{
  "repo": {
    "user": "os-module",
    "repo": "tracer"
  },
  "data": [
    {
      "user": "os-module",
      "repo": "tracer",
      "pkg": "tracer",
      "count": 14,
      "raw_reports": [
        {
          "file": "src/dwarf/unwinder.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_42/os-module/tracer/src/dwarf/unwinder.rs (original lines from 2 to 2)\n+use crate::utils::read_value;\n",
              "file: /home/runner/check/batch_42/os-module/tracer/src/dwarf/unwinder.rs (original lines from 13 to 13)\n-use crate::utils::read_value;\n"
            ],
            "Mirai": [
              "warning: field `0` is never read\n  --> src/dwarf/unwinder.rs:99:24\n   |\n99 |     UnexpectedRegister(Register),\n   |     ------------------ ^^^^^^^^\n   |     |\n   |     field in this variant\n   |\n   = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n99 |     UnexpectedRegister(()),\n   |                        ~~\n\n",
              "warning: field `0` is never read\n   --> src/dwarf/unwinder.rs:101:28\n    |\n101 |     CfaRuleUnknownRegister(Register),\n    |     ---------------------- ^^^^^^^^\n    |     |\n    |     field in this variant\n    |\n    = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n    |\n101 |     CfaRuleUnknownRegister(()),\n    |                            ~~\n\n"
            ],
            "Clippy(Warn)": [
              "warning: field `0` is never read\n  --> src/dwarf/unwinder.rs:99:24\n   |\n99 |     UnexpectedRegister(Register),\n   |     ------------------ ^^^^^^^^\n   |     |\n   |     field in this variant\n   |\n   = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n99 |     UnexpectedRegister(()),\n   |                        ~~\n\n",
              "warning: field `0` is never read\n   --> src/dwarf/unwinder.rs:101:28\n    |\n101 |     CfaRuleUnknownRegister(Register),\n    |     ---------------------- ^^^^^^^^\n    |     |\n    |     field in this variant\n    |\n    = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n    |\n101 |     CfaRuleUnknownRegister(()),\n    |                            ~~\n\n"
            ]
          }
        },
        {
          "file": "src/compiler.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unneeded `return` statement\n   --> src/compiler.rs:97:5\n    |\n97  | /     return match opcode {\n98  | |         0b0100011 => {\n99  | |             // 四字节的sd指令\n100 | |             let func = ins.get_bits(12..=14);\n...   |\n139 | |     };\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n97  ~     match opcode {\n98  +         0b0100011 => {\n99  ~             // 四字节的sd指令\n100 +             let func = ins.get_bits(12..=14);\n101 +             if func != 0b011 {\n102 +                 return None;\n103 +             }\n104 +             let rd = ins.get_bits(15..=19); // sp\n105 +             let rt = ins.get_bits(20..=24); // ra\n106 +             if rd != 2 || rt != 1 {\n107 +                 return None;\n108 +             }\n109 +             let mut imm = 0u32;\n110 +             imm.set_bits(0..=4, ins.get_bits(7..=11));\n111 +             imm.set_bits(5..=11, ins.get_bits(25..=31));\n112 +             for i in 12..32 {\n113 +                 imm.set_bit(i, imm.get_bit(11));\n114 +             }\n115 +             let imm = imm as isize;\n116 +             if imm > 0 {\n117 +                 Some(imm as u32)\n118 +             } else {\n119 +                 None\n120 +             }\n121 +         }\n122 +         _ => {\n123 ~             // 2字节的sd指令\n124 +             // c.sdsp\n125 +             // 111 [uimm5:3 8:6] rt 10\n126 +             let short_ins = ins.get_bits(0..16);\n127 +             let high = short_ins.get_bits(13..16);\n128 +             let low = short_ins.get_bits(0..2);\n129 +             match (high, low) {\n130 +                 (0b111, 0b10) => {\n131 +                     let mut imm = 0u32;\n132 +                     imm.set_bits(3..6, short_ins.get_bits(10..13));\n133 +                     imm.set_bits(6..9, short_ins.get_bits(7..10));\n134 +                     Some(imm)\n135 +                 }\n136 +                 (_, _) => None,\n137 +             }\n138 +         }\n139 ~     }\n    |\n\n",
              "warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/compiler.rs:253:17\n    |\n253 | /                 match ins {\n254 | |                     InstructionSp::Addi(x) => {\n255 | |                         stack_size += x;\n...   |\n258 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n253 ~                 if let InstructionSp::Addi(x) = ins {\n254 +                     stack_size += x;\n255 +                 }\n    |\n\n"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `return_position_impl_trait_in_trait` has been stable since 1.75.0 and no longer requires an attribute to enable\n --> src/lib.rs:1:12\n  |\n1 | #![feature(return_position_impl_trait_in_trait)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ],
            "Mirai": [
              "warning: the feature `return_position_impl_trait_in_trait` has been stable since 1.75.0 and no longer requires an attribute to enable\n --> src/lib.rs:1:12\n  |\n1 | #![feature(return_position_impl_trait_in_trait)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=tracer, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_43/os-module/tracer\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-03-07 17:20:36.045796153 +08:00:00\n    Building tracer v0.2.0 (current)\n       Built [   1.276s] (current)\n     Parsing tracer v0.2.0 (current)\n      Parsed [   0.003s] (current)\nerror: `cargo metadata` exited with an error:     Updating crates.io index\nerror: failed to select a version for the requirement `tracer = \"=0.1.0\"`\n  version 0.1.0 is yanked\nlocation searched: crates.io index\nrequired by package `placeholder v0.0.0 (/home/runner/check/batch_43/os-module/tracer/target/semver-checks/registry-tracer-0_1_0-01666ec060466c14)`\n\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=tracer, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_42/os-module/tracer\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:28:05.375955119 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\ngimli  0.26.2   ---     0.31.1  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[rap] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=tracer, checker=Rapx\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_42/os-module/tracer\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 21:28:04.892177316 +08:00:00\n\nwarning: Memory Leak detected.\n   --> src/dwarf/unwinder.rs:128:19\n    |\n118 |   fn new<T: DwarfProvider>(provider: &T) -> Self {\n119 |           let hdr = provider.kernel_eh_frame_hdr();\n120 |           let hdr_len = provider.kernel_eh_frame_hdr_end() - hdr;\n121 |           let eh_frame = provider.kernel_eh_frame();\n122 |           let eh_frame_len = provider.kernel_eh_frame_end() - eh_frame;\n123 |           trace!(\"hdr: {:#x?}, len: {}\", hdr, hdr_len);\n124 |           trace!(\"eh_frame: {:#x?}, len: {}\", eh_frame, eh_frame_len);\n125 |           let mut base_addrs = BaseAddresses::default();\n126 |           base_addrs = base_addrs.set_eh_frame_hdr(hdr as u64);\n127 |\n128 |           let hdr = Box::leak(Box::new(\n    |  ___________________-\n129 | |             EhFrameHdr::new(\n130 | |                 // TODO: remove Box\n131 | |                 unsafe { slice::from_raw_parts(hdr as *const u8, hdr_len) },\n132 | |                 LittleEndian,\n133 | |             )\n134 | |             .parse(&base_addrs, size_of::<usize>() as u8)\n135 | |             .unwrap(),\n136 | |         ));\n    | |__________- Memory Leak Candidates.\n137 |           base_addrs = base_addrs.set_eh_frame(eh_frame as u64);\n138 |           let eh_frame = EhFrame::new(\n139 |               unsafe { slice::from_raw_parts(eh_frame as *const u8, eh_frame_len) },\n140 |               LittleEndian,\n141 |           );\n142 |           Self {\n143 |               base_addrs,\n144 |               hdr,\n145 |               hdr_table: hdr.table().unwrap(),\n146 |               eh_frame,\n147 |           }\n148 |       }\n    |\nOver visited: DefId(0:41 ~ tracer[2aa6]::compiler::{impl#3}::next)\nOver visited: DefId(0:134 ~ tracer[2aa6]::dwarf::unwinder::{impl#5}::next)\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=tracer, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_43/os-module/tracer\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-03-07 17:20:37.742407028 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building tracer v0.2.0 (current)\n       Built [   1.276s] (current)\n     Parsing tracer v0.2.0 (current)\n      Parsed [   0.003s] (current)\nerror: `cargo metadata` exited with an error:     Updating crates.io index\nerror: failed to select a version for the requirement `tracer = \"=0.1.0\"`\n  version 0.1.0 is yanked\nlocation searched: crates.io index\nrequired by package `placeholder v0.0.0 (/home/runner/check/batch_43/os-module/tracer/target/semver-checks/registry-tracer-0_1_0-01666ec060466c14)`\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}