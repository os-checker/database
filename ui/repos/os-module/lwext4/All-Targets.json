{
  "repo": {
    "user": "os-module",
    "repo": "lwext4"
  },
  "data": [
    {
      "user": "os-module",
      "repo": "lwext4",
      "pkg": "lwext4-rs",
      "count": 37,
      "raw_reports": [
        {
          "file": "lwext4-rs/src/block.rs",
          "features": "",
          "count": 13,
          "kinds": {
            "Clippy(Warn)": [
              "warning: use of deprecated module `std::intrinsics`: import this function via `std::mem` instead\n  --> lwext4-rs/src/block.rs:10:23\n   |\n10 | use core::intrinsics::transmute;\n   |                       ^^^^^^^^^\n   |\n   = note: `#[warn(deprecated)]` on by default\n\n",
              "warning: transmute from a reference to a pointer\n  --> lwext4-rs/src/block.rs:41:25\n   |\n41 |                 p_user: transmute(Box::leak(Box::new(interface))),\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::leak(Box::new(interface)) as *mut T as *mut std::ffi::c_void`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n   = note: `#[warn(clippy::useless_transmute)]` on by default\n\n",
              "warning: transmute from a pointer type (`*mut std::ffi::c_void`) to a reference type (`&T`)\n  --> lwext4-rs/src/block.rs:81:18\n   |\n81 |         unsafe { transmute((*self.raw.bdif).p_user) }\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*((*self.raw.bdif).p_user as *const T)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n   = note: `#[warn(clippy::transmute_ptr_to_ref)]` on by default\n\n",
              "warning: transmute from a pointer type (`*mut std::ffi::c_void`) to a reference type (`&mut T`)\n  --> lwext4-rs/src/block.rs:86:18\n   |\n86 |         unsafe { transmute((*self.raw.bdif).p_user) }\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *((*self.raw.bdif).p_user as *mut T)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n",
              "warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/block.rs:120:50\n    |\n120 |             errno_to_result(ext4_device_register(transmute(&bdev.raw), c_name.as_ptr()))?;\n    |                                                  ^^^^^^^^^^^^^^^^^^^^ help: try: `&bdev.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n",
              "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:234:47\n    |\n234 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n",
              "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:252:47\n    |\n252 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n",
              "warning: transmute used without annotations\n   --> lwext4-rs/src/block.rs:256:36\n    |\n256 |                 from_raw_parts_mut(transmute(buf), (blk_cnt * bsize) as usize),\n    |                                    ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*mut std::ffi::c_void, *mut u8>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n",
              "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:271:47\n    |\n271 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n",
              "warning: transmute used without annotations\n   --> lwext4-rs/src/block.rs:275:32\n    |\n275 |                 from_raw_parts(transmute(buf), (blk_cnt * bsize) as usize),\n    |                                ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const std::ffi::c_void, *const u8>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n",
              "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:285:47\n    |\n285 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n",
              "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:293:47\n    |\n293 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n",
              "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:301:47\n    |\n301 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n"
            ]
          }
        },
        {
          "file": "lwext4-rs/src/mkfs.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: transmute from a reference to a pointer\n  --> lwext4-rs/src/mkfs.rs:68:27\n   |\n68 |                     bdev: transmute(&bdev.raw),\n   |                           ^^^^^^^^^^^^^^^^^^^^ help: try: `&bdev.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n",
              "warning: you should consider adding a `Default` implementation for `FsBuilder`\n   --> lwext4-rs/src/mkfs.rs:181:5\n    |\n181 | /     pub fn new() -> Self {\n182 | |         Self {\n183 | |             block_size: 1024,\n184 | |             ty: None,\n...   |\n188 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n180 + impl Default for FsBuilder {\n181 +     fn default() -> Self {\n182 +         Self::new()\n183 +     }\n184 + }\n    |\n\n",
              "warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/mkfs.rs:251:17\n    |\n251 |                 transmute(&fs.device.raw),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&fs.device.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n",
              "warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/mkfs.rs:267:17\n    |\n267 |                 transmute(&self.device.raw),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&self.device.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n",
              "warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/mkfs.rs:268:17\n    |\n268 |                 transmute(&self.raw_info),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&self.raw_info as *const lwext4_sys::ext4::ext4_mkfs_info as *mut lwext4_sys::ext4::ext4_mkfs_info`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n"
            ]
          }
        },
        {
          "file": "lwext4-rs/src/dir.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: using `clone` on type `ext4_file` which implements the `Copy` trait\n  --> lwext4-rs/src/dir.rs:37:19\n   |\n37 |         File::new(self.raw.f.clone(), self.path.clone())\n   |                   ^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.raw.f`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n",
              "warning: using `clone` on type `ext4_direntry` which implements the `Copy` trait\n   --> lwext4-rs/src/dir.rs:108:26\n    |\n108 |                     raw: (*transmute::<_, &ext4_direntry>(result)).clone(),\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `(*transmute::<_, &ext4_direntry>(result))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n",
              "warning: transmute from a pointer type (`*const lwext4_sys::ext4::ext4_direntry`) to a reference type (`&lwext4_sys::ext4::ext4_direntry`)\n   --> lwext4-rs/src/dir.rs:108:28\n    |\n108 |                     raw: (*transmute::<_, &ext4_direntry>(result)).clone(),\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*result.cast::<ext4_direntry>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n",
              "warning: transmute used without annotations\n   --> lwext4-rs/src/dir.rs:108:28\n    |\n108 |                     raw: (*transmute::<_, &ext4_direntry>(result)).clone(),\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const lwext4_sys::ext4::ext4_direntry, &lwext4_sys::ext4::ext4_direntry>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
            ]
          }
        },
        {
          "file": "lwext4-rs/src/types.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> lwext4-rs/src/types.rs:102:27\n    |\n102 |     pub(super) fn to_ext4(&self) -> u8 {\n    |                           ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n",
              "warning: you should consider adding a `Default` implementation for `MountStats`\n   --> lwext4-rs/src/types.rs:121:5\n    |\n121 | /     pub fn new() -> Self {\n122 | |         Self(ext4_mount_stats {\n123 | |             inodes_count: 0,\n124 | |             free_inodes_count: 0,\n...   |\n132 | |         })\n133 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n120 + impl Default for MountStats {\n121 +     fn default() -> Self {\n122 +         Self::new()\n123 +     }\n124 + }\n    |\n\n",
              "warning: struct `Metadata` has a public `len` method, but no `is_empty` method\n   --> lwext4-rs/src/types.rs:379:5\n    |\n379 |     pub fn len(&self) -> u64 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty\n    = note: `#[warn(clippy::len_without_is_empty)]` on by default\n\n",
              "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> lwext4-rs/src/types.rs:517:1\n    |\n517 | impl Into<u32> for Time {\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<types::Time>`\n    |\n517 ~ impl From<Time> for u32 {\n518 ~     fn from(val: Time) -> Self {\n519 ~         val.epoch_secs as u32\n    |\n\n"
            ]
          }
        },
        {
          "file": "lwext4-rs/src/lib.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Mirai": [
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> lwext4-rs/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> lwext4-rs/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ],
            "Clippy(Warn)": [
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> lwext4-rs/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=lwext4-rs, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_38/os-module/lwext4/lwext4-rs\n// cmd=cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-16 20:48:59.411148785 +08:00:00\n   Compiling lwext4-sys v0.1.0 (/home/runner/check/batch_38/os-module/lwext4/lwext4-sys)\n    Checking lwext4-rs v0.1.0 (/home/runner/check/batch_38/os-module/lwext4/lwext4-rs)\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 1.16s\n   Compiling memchr v2.7.4\n   Compiling regex-syntax v0.8.5\n   Compiling utf8parse v0.2.2\n   Compiling log v0.4.25\n   Compiling anstyle-parse v0.2.6\n   Compiling is_terminal_polyfill v1.70.1\n   Compiling colorchoice v1.0.3\n   Compiling anstyle-query v1.1.2\n   Compiling anstyle v1.0.10\n   Compiling lwext4-sys v0.1.0 (/home/runner/check/batch_38/os-module/lwext4/lwext4-sys)\n   Compiling anstream v0.6.18\n   Compiling humantime v2.1.0\n   Compiling aho-corasick v1.1.3\n   Compiling embedded-io v0.6.1\n   Compiling bitflags v1.3.2\n   Compiling lwext4-rs v0.1.0 (/home/runner/check/batch_38/os-module/lwext4/lwext4-rs)\n   Compiling regex-automata v0.4.9\n   Compiling regex v1.11.1\n   Compiling env_filter v0.1.3\n   Compiling env_logger v0.11.6\nerror: could not compile `lwext4-rs` (test \"ext\")\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.cargo/bin/cargo-mirai /home/runner/.rustup/toolchains/nightly-2025-01-04-x86_64-unknown-linux-gnu/bin/rustc --crate-name ext --edition=2021 lwext4-rs/tests/ext.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --cfg 'feature=\"default\"' --cfg 'feature=\"std\"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values(\"default\", \"std\"))' -C metadata=88e7dbb7486910e2 -C extra-filename=-149d16eafa851dc8 --out-dir /home/runner/check/batch_38/os-module/lwext4/target/x86_64-unknown-linux-gnu/debug/deps --target x86_64-unknown-linux-gnu -L dependency=/home/runner/check/batch_38/os-module/lwext4/target/x86_64-unknown-linux-gnu/debug/deps -L dependency=/home/runner/check/batch_38/os-module/lwext4/target/debug/deps --extern bitflags=/home/runner/check/batch_38/os-module/lwext4/target/x86_64-unknown-linux-gnu/debug/deps/libbitflags-088a11bdb6af9603.rlib --extern embedded_io=/home/runner/check/batch_38/os-module/lwext4/target/x86_64-unknown-linux-gnu/debug/deps/libembedded_io-a0443947088264bc.rlib --extern env_logger=/home/runner/check/batch_38/os-module/lwext4/target/x86_64-unknown-linux-gnu/debug/deps/libenv_logger-ec67c3ce8ec12e07.rlib --extern log=/home/runner/check/batch_38/os-module/lwext4/target/x86_64-unknown-linux-gnu/debug/deps/liblog-d27c3a7519f639dc.rlib --extern lwext4_rs=/home/runner/check/batch_38/os-module/lwext4/target/x86_64-unknown-linux-gnu/debug/deps/liblwext4_rs-2522952dd33c7292.rlib --extern lwext4_sys=/home/runner/check/batch_38/os-module/lwext4/target/x86_64-unknown-linux-gnu/debug/deps/liblwext4_sys-7987a2f1e4903c21.rlib --cfg mirai -Z always_encode_mir -L native=/home/runner/check/batch_38/os-module/lwext4/target/x86_64-unknown-linux-gnu/debug/build/lwext4-sys-8b36485033399c82/out/lwext4/build_generic/src` (exit status: 1)\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=lwext4-rs, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_38/os-module/lwext4/lwext4-rs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-16 20:47:56.423197415 +08:00:00\n    Building lwext4-rs v0.1.0 (current)\n       Built [  17.030s] (current)\n     Parsing lwext4-rs v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_38/os-module/lwext4/target/semver-checks/local-lwext4_rs-0_1_0-2030aa6224c61976/target/x86_64-unknown-linux-gnu/doc/lwext4_rs.json\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=lwext4-rs, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_38/os-module/lwext4/lwext4-rs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 20:51:01.674952301 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  1.3.2    ---     2.8.0   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[rap] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=lwext4-rs, checker=Rapx\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_38/os-module/lwext4/lwext4-rs\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 20:50:34.196668462 +08:00:00\n\nwarning: Memory Leak detected.\n  --> lwext4-rs/src/block.rs:41:35\n   |\n26 | pub fn new(interface: T) -> Pin<Box<BlockDevice<T>>> {\n27 |         unsafe {\n28 |             let raw_interface = ext4_blockdev_iface {\n29 |                 open: Some(<T as BlockDeviceInterfaceExt>::open),\n30 |                 bread: Some(<T as BlockDeviceInterfaceExt>::bread),\n31 |                 bwrite: Some(<T as BlockDeviceInterfaceExt>::bwrite),\n32 |                 close: Some(<T as BlockDeviceInterfaceExt>::close),\n33 |                 lock: Some(<T as BlockDeviceInterfaceExt>::lock),\n34 |                 unlock: Some(<T as BlockDeviceInterfaceExt>::unlock),\n35 |                 ph_bsize: 0,\n36 |                 ph_bcnt: 0,\n37 |                 ph_bbuf: null_mut(),\n38 |                 ph_refctr: 0,\n39 |                 bread_ctr: 0,\n40 |                 bwrite_ctr: 0,\n41 |                 p_user: transmute(Box::leak(Box::new(interface))),\n   |                                   ------------------------------ Memory Leak Candidates.\n42 |             };\n43 |             let device_raw = ext4_blockdev {\n44 |                 bdif: Box::leak(Box::new(raw_interface)),\n   |                       ---------------------------------- Memory Leak Candidates.\n45 |                 part_offset: 0,\n46 |                 part_size: 0,\n47 |                 bc: null_mut(),\n48 |                 lg_bsize: 0,\n49 |                 lg_bcnt: 0,\n50 |                 cache_write_back: 0,\n51 |                 fs: null_mut(),\n52 |                 journal: null_mut(),\n53 |             };\n54 |             Box::pin(Self {\n55 |                 raw: device_raw,\n56 |                 data: Default::default(),\n57 |             })\n58 |         }\n59 |     }\n   |\nwarning: Memory Leak detected.\n   --> lwext4-rs/src/block.rs:238:42\n    |\n232 | unsafe extern \"C\" fn open(bdev: *mut ext4_blockdev) -> errno_t {\n233 |         let r: Result<()> = try {\n234 |             let device: &mut BlockDevice<T> = transmute(bdev);\n235 |             let config = T::open(&mut *device)?;\n236 |             (*device.raw.bdif).ph_bsize = config.block_size;\n237 |             (*device.raw.bdif).ph_bcnt = config.block_count;\n238 |             (*device.raw.bdif).ph_bbuf = vec![0u8; config.block_size as usize].leak().as_mut_ptr();\n    |                                          -------------------------------------------- Memory Leak Candidates.\n239 |             device.raw.part_size = config.part_size;\n240 |             device.raw.part_offset = config.part_offset;\n241 |         };\n242 |         result_to_errno(r)\n243 |     }\n    |\nOver visited: DefId(0:719 ~ lwext4_rs[42f9]::types::{impl#22}::fmt)\nOver visited: DefId(0:920 ~ lwext4_rs[42f9]::types::{impl#56}::fmt)\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=lwext4-rs, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_38/os-module/lwext4/lwext4-rs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 20:48:13.828840645 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building lwext4-rs v0.1.0 (current)\n       Built [  17.030s] (current)\n     Parsing lwext4-rs v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_38/os-module/lwext4/target/semver-checks/local-lwext4_rs-0_1_0-2030aa6224c61976/target/x86_64-unknown-linux-gnu/doc/lwext4_rs.json\n"
            ]
          }
        },
        {
          "file": "lwext4-rs/src/error.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> lwext4-rs/src/error.rs:103:1\n    |\n103 | impl Into<std::io::Error> for Error {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<error::Error>`\n    |\n103 ~ impl From<Error> for std::io::Error {\n104 ~     fn from(val: Error) -> Self {\n105 ~         std::io::Error::from_raw_os_error(val as i32)\n    |\n\n"
            ]
          }
        },
        {
          "file": "lwext4-rs/src/fs.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: length comparison to zero\n   --> lwext4-rs/src/fs.rs:230:16\n    |\n230 |             if x.len() > 0 {\n    |                ^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "lwext4-rs/src/standard.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> lwext4-rs/src/standard.rs:28:27\n   |\n28 |         self.0.read_exact(&mut buf).unwrap();\n   |                           ^^^^^^^^ help: change this to: `buf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "lwext4",
      "pkg": "lwext4-mkfs",
      "count": 4,
      "raw_reports": [
        {
          "file": "lwext4-rs/src/lib.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> lwext4-rs/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ],
            "Mirai": [
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> lwext4-rs/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "[rap] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=lwext4-mkfs, checker=Rapx\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_38/os-module/lwext4/lwext4-mkfs\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 20:50:04.648438471 +08:00:00\n\nwarning: Memory Leak detected.\n  --> lwext4-rs/src/block.rs:41:35\n   |\n26 | pub fn new(interface: T) -> Pin<Box<BlockDevice<T>>> {\n27 |         unsafe {\n28 |             let raw_interface = ext4_blockdev_iface {\n29 |                 open: Some(<T as BlockDeviceInterfaceExt>::open),\n30 |                 bread: Some(<T as BlockDeviceInterfaceExt>::bread),\n31 |                 bwrite: Some(<T as BlockDeviceInterfaceExt>::bwrite),\n32 |                 close: Some(<T as BlockDeviceInterfaceExt>::close),\n33 |                 lock: Some(<T as BlockDeviceInterfaceExt>::lock),\n34 |                 unlock: Some(<T as BlockDeviceInterfaceExt>::unlock),\n35 |                 ph_bsize: 0,\n36 |                 ph_bcnt: 0,\n37 |                 ph_bbuf: null_mut(),\n38 |                 ph_refctr: 0,\n39 |                 bread_ctr: 0,\n40 |                 bwrite_ctr: 0,\n41 |                 p_user: transmute(Box::leak(Box::new(interface))),\n   |                                   ------------------------------ Memory Leak Candidates.\n42 |             };\n43 |             let device_raw = ext4_blockdev {\n44 |                 bdif: Box::leak(Box::new(raw_interface)),\n   |                       ---------------------------------- Memory Leak Candidates.\n45 |                 part_offset: 0,\n46 |                 part_size: 0,\n47 |                 bc: null_mut(),\n48 |                 lg_bsize: 0,\n49 |                 lg_bcnt: 0,\n50 |                 cache_write_back: 0,\n51 |                 fs: null_mut(),\n52 |                 journal: null_mut(),\n53 |             };\n54 |             Box::pin(Self {\n55 |                 raw: device_raw,\n56 |                 data: Default::default(),\n57 |             })\n58 |         }\n59 |     }\n   |\nwarning: Memory Leak detected.\n   --> lwext4-rs/src/block.rs:238:42\n    |\n232 | unsafe extern \"C\" fn open(bdev: *mut ext4_blockdev) -> errno_t {\n233 |         let r: Result<()> = try {\n234 |             let device: &mut BlockDevice<T> = transmute(bdev);\n235 |             let config = T::open(&mut *device)?;\n236 |             (*device.raw.bdif).ph_bsize = config.block_size;\n237 |             (*device.raw.bdif).ph_bcnt = config.block_count;\n238 |             (*device.raw.bdif).ph_bbuf = vec![0u8; config.block_size as usize].leak().as_mut_ptr();\n    |                                          -------------------------------------------- Memory Leak Candidates.\n239 |             device.raw.part_size = config.part_size;\n240 |             device.raw.part_offset = config.part_offset;\n241 |         };\n242 |         result_to_errno(r)\n243 |     }\n    |\nOver visited: DefId(0:719 ~ lwext4_rs[42f9]::types::{impl#22}::fmt)\nOver visited: DefId(0:920 ~ lwext4_rs[42f9]::types::{impl#56}::fmt)\nOver visited: DefId(0:17 ~ lwext4_mkfs[5106]::main)\n"
            ]
          }
        },
        {
          "file": "lwext4-rs/src/block.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: use of deprecated module `std::intrinsics`: import this function via `std::mem` instead\n  --> lwext4-rs/src/block.rs:10:23\n   |\n10 | use core::intrinsics::transmute;\n   |                       ^^^^^^^^^\n   |\n   = note: `#[warn(deprecated)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "lwext4",
      "pkg": "lwext4-sys",
      "count": 3,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=lwext4-sys, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_38/os-module/lwext4/lwext4-sys\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-16 20:48:13.830608492 +08:00:00\n    Building lwext4-sys v0.1.0 (current)\n       Built [  17.258s] (current)\n     Parsing lwext4-sys v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_38/os-module/lwext4/target/semver-checks/local-lwext4_sys-0_1_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/lwext4_sys.json\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=lwext4-sys, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_38/os-module/lwext4/lwext4-sys\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 20:51:02.171589967 +08:00:00\n\nName     Project  Compat  Latest  Kind   Platform\n----     -------  ------  ------  ----   --------\nbindgen  0.65.1   ---     0.71.1  Build  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=lwext4-sys, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_38/os-module/lwext4/lwext4-sys\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 20:48:31.437189194 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building lwext4-sys v0.1.0 (current)\n       Built [  17.258s] (current)\n     Parsing lwext4-sys v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_38/os-module/lwext4/target/semver-checks/local-lwext4_sys-0_1_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/lwext4_sys.json\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}