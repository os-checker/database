{"repo":{"user":"os-module","repo":"rvfs"},"data":[{"user":"os-module","repo":"rvfs","pkg":"lwext4-vfs","count":16,"raw_reports":[{"file":"lwext4-vfs/src/inode/dir.rs","count":5,"kinds":{"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n  --> lwext4-vfs/src/inode/dir.rs:81:9\n   |\n78 | /         let perm = file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n79 | |             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n80 | |         });\n   | |___________- unnecessary `let` binding\n81 |           perm\n   |           ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n78 ~         \n79 ~         file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n80 +             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n81 +         })\n   |\n\n","warning: question mark operator is useless here\n   --> lwext4-vfs/src/inode/dir.rs:193:9\n    |\n193 |         Ok(self.lookup(name)?)\n    |         ^^^^^^^^^^^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `self.lookup(name)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_question_mark\n    = note: `#[warn(clippy::needless_question_mark)]` on by default\n\n","warning: the borrowed expression implements the required traits\n   --> lwext4-vfs/src/inode/dir.rs:191:25\n    |\n191 |         sb.fs.soft_link(&sy_name, &path).map_err(into_vfs)?;\n    |                         ^^^^^^^^ help: change this to: `sy_name`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n    = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n","warning: unneeded `return` statement\n   --> lwext4-vfs/src/inode/dir.rs:227:21\n    |\n227 |                     return Ok(Arc::new(dir) as Arc<dyn VfsInode>);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n227 -                     return Ok(Arc::new(dir) as Arc<dyn VfsInode>);\n227 +                     Ok(Arc::new(dir) as Arc<dyn VfsInode>)\n    |\n\n","warning: comparison to empty slice\n   --> lwext4-vfs/src/inode/dir.rs:230:31\n    |\n230 |                     return if p_path == \"\" {\n    |                               ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `p_path.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"]}},{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/check/batch_10/os-module/rvfs/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 722 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 722,\n    \"last-commit\": \"3c6d3186ab06737d1defd2b5ae556d0ecd161603\",\n    \"last-updated\": \"2024-12-28T17:54:04Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=lwext4-vfs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/lwext4-vfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2024-12-29 7:51:57.737422646 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_10/os-module/rvfs/Cargo.lock\")\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=lwext4-vfs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/lwext4-vfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2024-12-29 7:48:07.162427054 +08:00:00\n    Building lwext4-vfs v0.1.0 (current)\n       Built [  17.033s] (current)\n     Parsing lwext4-vfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: lwext4-vfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-28T23:48:55Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:55Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T23:48:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T23:49:20Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:49:20Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=lwext4-vfs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/lwext4-vfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nbitflags    1.3.2    ---     2.6.0   Normal       ---\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rap":["pkg=lwext4-vfs, checker=Rap\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/lwext4-vfs\ncmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-linux-gnu\n\n23:50:49|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n23:50:49|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n23:50:49|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n23:50:49|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n23:50:49|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n23:50:49|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n23:50:49|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n23:50:49|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:52|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:52|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:52|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:52|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=lwext4-vfs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/lwext4-vfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building lwext4-vfs v0.1.0 (current)\n       Built [  17.033s] (current)\n     Parsing lwext4-vfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: lwext4-vfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"lwext4-vfs/src/blk.rs","count":1,"kinds":{"Clippy(Warn)":["warning: using `clone` on type `BlockDeviceConfig` which implements the `Copy` trait\n  --> lwext4-vfs/src/blk.rs:34:12\n   |\n34 |         Ok(self.config.clone())\n   |            ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.config`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"]}},{"file":"lwext4-vfs/src/inode/file.rs","count":1,"kinds":{"Clippy(Warn)":["warning: returning the result of a `let` binding from a block\n  --> lwext4-vfs/src/inode/file.rs:88:9\n   |\n85 | /         let perm = file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n86 | |             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n87 | |         });\n   | |___________- unnecessary `let` binding\n88 |           perm\n   |           ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n85 ~         \n86 ~         file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n87 +             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n88 +         })\n   |\n\n"]}}]},{"user":"os-module","repo":"rvfs","pkg":"ramfs","count":11,"raw_reports":[{"file":"ramfs/src/inode/symlink.rs","count":2,"kinds":{"Clippy(Warn)":["warning: needless call to `as_bytes()`\n  --> ramfs/src/inode/symlink.rs:64:19\n   |\n64 |         let len = inner.as_bytes().len();\n   |                   ^^^^^^^^^^^^^^^^^^^^^^ help: `len()` can be called directly on strings: `inner.len()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes\n   = note: `#[warn(clippy::needless_as_bytes)]` on by default\n\n","warning: needless call to `as_bytes()`\n  --> ramfs/src/inode/symlink.rs:77:25\n   |\n77 |         basic.st_size = self.inner.lock().as_bytes().len() as u64;\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: `len()` can be called directly on strings: `self.inner.lock().len()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes\n\n"]}},{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/check/batch_10/os-module/rvfs/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 722 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 722,\n    \"last-commit\": \"3c6d3186ab06737d1defd2b5ae556d0ecd161603\",\n    \"last-updated\": \"2024-12-28T17:54:04Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=ramfs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/ramfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2024-12-29 7:51:57.854600054 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_10/os-module/rvfs/Cargo.lock\")\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=ramfs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/ramfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2024-12-29 7:48:25.065018443 +08:00:00\n    Building ramfs v0.1.0 (current)\n       Built [   4.048s] (current)\n     Parsing ramfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: ramfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-28T23:48:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=ramfs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/ramfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rap":["pkg=ramfs, checker=Rap\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/ramfs\ncmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-linux-gnu\n\n23:51:03|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n23:51:03|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n23:51:03|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n23:51:03|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n23:51:03|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n23:51:03|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n23:51:03|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n23:51:03|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:51:04|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=ramfs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/ramfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building ramfs v0.1.0 (current)\n       Built [   4.048s] (current)\n     Parsing ramfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: ramfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}}]},{"user":"os-module","repo":"rvfs","pkg":"devfs","count":9,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/check/batch_10/os-module/rvfs/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 722 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 722,\n    \"last-commit\": \"3c6d3186ab06737d1defd2b5ae556d0ecd161603\",\n    \"last-updated\": \"2024-12-28T17:54:04Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=devfs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/devfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2024-12-29 7:51:57.379579485 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_10/os-module/rvfs/Cargo.lock\")\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=devfs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/devfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2024-12-29 7:48:03.133983272 +08:00:00\n    Building devfs v0.1.0 (current)\n       Built [   0.749s] (current)\n     Parsing devfs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: devfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-28T23:48:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=devfs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/devfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rap":["pkg=devfs, checker=Rap\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/devfs\ncmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-linux-gnu\n\n23:50:10|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n23:50:10|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n23:50:10|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n23:50:10|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n23:50:10|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n23:50:10|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n23:50:10|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n23:50:10|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:11|RAP|WARN|: Dangling pointer detected in function \"create\"!!! \n23:50:11|RAP|WARN|: Dangling pointer detected in function \"create\"!!!\n23:50:11|RAP|WARN|: Dangling pointer detected in function \"unlink\"!!! \n23:50:11|RAP|WARN|: Dangling pointer detected in function \"unlink\"!!!\n23:50:11|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=devfs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/devfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building devfs v0.1.0 (current)\n       Built [   0.749s] (current)\n     Parsing devfs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: devfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}}]},{"user":"os-module","repo":"rvfs","pkg":"dynfs","count":9,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/check/batch_10/os-module/rvfs/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 722 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 722,\n    \"last-commit\": \"3c6d3186ab06737d1defd2b5ae556d0ecd161603\",\n    \"last-updated\": \"2024-12-28T17:54:04Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=dynfs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/dynfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2024-12-29 7:51:57.497277183 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_10/os-module/rvfs/Cargo.lock\")\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=dynfs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/dynfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2024-12-29 7:48:04.257951277 +08:00:00\n    Building dynfs v0.1.0 (current)\n       Built [   0.753s] (current)\n     Parsing dynfs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: dynfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-28T23:48:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=dynfs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/dynfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rap":["pkg=dynfs, checker=Rap\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/dynfs\ncmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-linux-gnu\n\n23:50:20|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n23:50:20|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n23:50:20|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n23:50:20|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n23:50:20|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n23:50:20|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n23:50:20|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n23:50:20|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:20|RAP|WARN|: Dangling pointer detected in function \"add_manually\"!!! \n23:50:20|RAP|WARN|: Dangling pointer detected in function \"add_manually\"!!!\n23:50:20|RAP|WARN|: Dangling pointer detected in function \"remove_manually\"!!! \n23:50:20|RAP|WARN|: Dangling pointer detected in function \"remove_manually\"!!!\n23:50:20|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=dynfs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/dynfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building dynfs v0.1.0 (current)\n       Built [   0.753s] (current)\n     Parsing dynfs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: dynfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}}]},{"user":"os-module","repo":"rvfs","pkg":"fat-vfs","count":9,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/check/batch_10/os-module/rvfs/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 722 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 722,\n    \"last-commit\": \"3c6d3186ab06737d1defd2b5ae556d0ecd161603\",\n    \"last-updated\": \"2024-12-28T17:54:04Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=fat-vfs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/fat-vfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2024-12-29 7:51:57.618286912 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_10/os-module/rvfs/Cargo.lock\")\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=fat-vfs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/fat-vfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2024-12-29 7:48:05.377287964 +08:00:00\n    Building fat-vfs v0.1.0 (current)\n       Built [   1.176s] (current)\n     Parsing fat-vfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: fat-vfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-28T23:48:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=fat-vfs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/fat-vfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rap":["pkg=fat-vfs, checker=Rap\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/fat-vfs\ncmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-linux-gnu\n\n23:50:29|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n23:50:29|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n23:50:29|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n23:50:29|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n23:50:29|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n23:50:29|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n23:50:29|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n23:50:29|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:30|RAP|WARN|: Double free detected in function new\n23:50:30|RAP|WARN|: Location: fat-vfs/src/fs.rs:116:51: 116:52 (#0)\n23:50:30|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:30|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:30|RAP|WARN|: Dangling pointer detected in function \"create\"!!! \n23:50:30|RAP|WARN|: Dangling pointer detected in function \"create\"!!!\n23:50:30|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n23:50:30|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n23:50:30|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:30|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=fat-vfs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/fat-vfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building fat-vfs v0.1.0 (current)\n       Built [   1.176s] (current)\n     Parsing fat-vfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: fat-vfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}}]},{"user":"os-module","repo":"rvfs","pkg":"unifs","count":9,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/check/batch_10/os-module/rvfs/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 722 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 722,\n    \"last-commit\": \"3c6d3186ab06737d1defd2b5ae556d0ecd161603\",\n    \"last-updated\": \"2024-12-28T17:54:04Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=unifs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/unifs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2024-12-29 7:51:57.9772851 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_10/os-module/rvfs/Cargo.lock\")\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=unifs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/unifs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2024-12-29 7:48:29.713967582 +08:00:00\n    Building unifs v0.1.0 (current)\n       Built [   0.741s] (current)\n     Parsing unifs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: unifs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-28T23:48:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=unifs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/unifs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rap":["pkg=unifs, checker=Rap\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/unifs\ncmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-linux-gnu\n\n23:51:13|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n23:51:13|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n23:51:13|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n23:51:13|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n23:51:13|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n23:51:13|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n23:51:13|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n23:51:13|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=unifs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/unifs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building unifs v0.1.0 (current)\n       Built [   0.741s] (current)\n     Parsing unifs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: unifs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}}]},{"user":"os-module","repo":"rvfs","pkg":"demo","count":8,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/check/batch_10/os-module/rvfs/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 722 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 722,\n    \"last-commit\": \"3c6d3186ab06737d1defd2b5ae556d0ecd161603\",\n    \"last-updated\": \"2024-12-28T17:54:04Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) geiger","count":1,"kinds":{"Cargo":["// pkg_name=demo, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/demo\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2024-12-29 7:51:57.254110907 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_10/os-module/rvfs/Cargo.lock\")\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-28T23:48:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T23:48:55Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:55Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T23:49:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:49:00Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T23:49:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:49:01Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T23:49:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:49:02Z WARN  lockbud::callbacks] crate env_logger contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-28T23:49:11Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:93:57: 93:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:96:5: 96:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:78:58: 78:68 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:81:5: 81:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:104:57: 104:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/git/checkouts/lwext4-0e9cfbb4b2c6d701/7986f8f/lwext4-rs/src/fs.rs:107:5: 107:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-12-28T23:49:11Z WARN  lockbud::callbacks] crate demo contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 3 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=demo, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/demo\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName        Project  Compat  Latest  Kind    Platform\n----        -------  ------  ------  ----    --------\nenv_logger  0.9.3    ---     0.11.6  Normal  ---\n"]}},{"file":"[rap] Not supported to display yet.","count":1,"kinds":{"Rap":["pkg=demo, checker=Rap\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/demo\ncmd=cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-linux-gnu\n\n23:49:57|RAP|WARN|: Dangling pointer detected in function \"parent\"!!! \n23:49:57|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!! \n23:49:57|RAP|WARN|: Dangling pointer detected in function \"set_parent\"!!!\n23:49:57|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!! \n23:49:57|RAP|WARN|: Dangling pointer detected in function \"readdir\"!!!\n23:49:57|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!! \n23:49:57|RAP|WARN|: Dangling pointer detected in function \"lookup\"!!!\n23:49:57|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:49:57|RAP|WARN|: Dangling pointer detected in function \"add_manually\"!!! \n23:49:57|RAP|WARN|: Dangling pointer detected in function \"add_manually\"!!!\n23:49:57|RAP|WARN|: Dangling pointer detected in function \"remove_manually\"!!! \n23:49:57|RAP|WARN|: Dangling pointer detected in function \"remove_manually\"!!!\n23:49:57|RAP|WARN|: Dangling pointer detected in function \"create\"!!! \n23:49:57|RAP|WARN|: Dangling pointer detected in function \"create\"!!!\n23:49:57|RAP|WARN|: Dangling pointer detected in function \"unlink\"!!! \n23:49:57|RAP|WARN|: Dangling pointer detected in function \"unlink\"!!!\n23:49:57|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:49:57|RAP|WARN|: Double free detected in function mount\n23:49:57|RAP|WARN|: Location: devfs/src/lib.rs:58:49: 58:50 (#0)\n23:49:57|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:49:58|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:00|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:00|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:00|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n23:50:00|RAP|WARN|: Dangling pointer detected in function \"new\"!!!\n"]}},{"file":"demo/src/extfs.rs","count":1,"kinds":{"Clippy(Warn)":["warning: file opened with `create`, but `truncate` behavior not defined\n  --> demo/src/extfs.rs:87:10\n   |\n87 |         .create(true)\n   |          ^^^^^^^^^^^^- help: add: `.truncate(true)`\n   |\n   = help: if you intend to overwrite an existing file entirely, call `.truncate(true)`\n   = help: if you instead know that you may want to keep some parts of the old file, call `.truncate(false)`\n   = help: alternatively, use `.append(true)` to append to the file instead of overwriting it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_open_options\n   = note: `#[warn(clippy::suspicious_open_options)]` on by default\n\n"]}}]},{"user":"os-module","repo":"rvfs","pkg":"vfscore","count":7,"raw_reports":[{"file":"vfscore/src/lib.rs","count":2,"kinds":{"Clippy(Warn)":["warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n","warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"]}},{"file":"/home/runner/check/batch_10/os-module/rvfs/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 722 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 722,\n    \"last-commit\": \"3c6d3186ab06737d1defd2b5ae556d0ecd161603\",\n    \"last-updated\": \"2024-12-28T17:54:04Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=vfscore, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/vfscore\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2024-12-29 7:48:30.826631239 +08:00:00\n    Building vfscore v0.1.0 (current)\n       Built [   3.834s] (current)\n     Parsing vfscore v0.1.0 (current)\n      Parsed [   0.006s] (current)\nerror: vfscore not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-28T23:48:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=vfscore, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/vfscore\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nbitflags  1.3.2    ---     2.6.0   Normal  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=vfscore, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/vfscore\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building vfscore v0.1.0 (current)\n       Built [   3.834s] (current)\n     Parsing vfscore v0.1.0 (current)\n      Parsed [   0.006s] (current)\nerror: vfscore not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}}]},{"user":"os-module","repo":"rvfs","pkg":"custom_fs","count":5,"raw_reports":[{"file":"/home/runner/check/batch_10/os-module/rvfs/Cargo.lock","count":1,"kinds":{"Audit":["    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 722 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 722,\n    \"last-commit\": \"3c6d3186ab06737d1defd2b5ae556d0ecd161603\",\n    \"last-updated\": \"2024-12-28T17:54:04Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=custom_fs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/os-module/rvfs/customfs\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2024-12-29 7:47:58.166200418 +08:00:00\n    Building custom_fs v0.1.0 (current)\n       Built [   4.187s] (current)\n     Parsing custom_fs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: custom_fs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-28T23:48:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-28T23:48:42Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[outdated direct dependencies]","count":1,"kinds":{"Outdated":["pkg=custom_fs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/customfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=custom_fs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_10/os-module/rvfs/customfs\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building custom_fs v0.1.0 (current)\n       Built [   4.187s] (current)\n     Parsing custom_fs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: custom_fs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}