{
  "repo": {
    "user": "os-module",
    "repo": "rvfs"
  },
  "data": [
    {
      "user": "os-module",
      "repo": "rvfs",
      "pkg": "lwext4-vfs",
      "count": 19,
      "raw_reports": [
        {
          "file": "vfscore/src/lib.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n",
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "lwext4-vfs/src/inode/dir.rs",
          "features": "",
          "count": 5,
          "kinds": {
            "Clippy(Warn)": [
              "warning: returning the result of a `let` binding from a block\n  --> lwext4-vfs/src/inode/dir.rs:81:9\n   |\n78 | /         let perm = file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n79 | |             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n80 | |         });\n   | |___________- unnecessary `let` binding\n81 |           perm\n   |           ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n78 ~         \n79 ~         file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n80 +             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n81 +         })\n   |\n\n",
              "warning: question mark operator is useless here\n   --> lwext4-vfs/src/inode/dir.rs:193:9\n    |\n193 |         Ok(self.lookup(name)?)\n    |         ^^^^^^^^^^^^^^^^^^^^^^ help: try removing question mark and `Ok()`: `self.lookup(name)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_question_mark\n    = note: `#[warn(clippy::needless_question_mark)]` on by default\n\n",
              "warning: the borrowed expression implements the required traits\n   --> lwext4-vfs/src/inode/dir.rs:191:25\n    |\n191 |         sb.fs.soft_link(&sy_name, &path).map_err(into_vfs)?;\n    |                         ^^^^^^^^ help: change this to: `sy_name`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n    = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n",
              "warning: unneeded `return` statement\n   --> lwext4-vfs/src/inode/dir.rs:227:21\n    |\n227 |                     return Ok(Arc::new(dir) as Arc<dyn VfsInode>);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n227 -                     return Ok(Arc::new(dir) as Arc<dyn VfsInode>);\n227 +                     Ok(Arc::new(dir) as Arc<dyn VfsInode>)\n    |\n\n",
              "warning: comparison to empty slice\n   --> lwext4-vfs/src/inode/dir.rs:230:31\n    |\n230 |                     return if p_path == \"\" {\n    |                               ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `p_path.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_40/os-module/rvfs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=lwext4-vfs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_40/os-module/rvfs/lwext4-vfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-02-16 21:34:26.046318773 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_40/os-module/rvfs/Cargo.lock\")\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=lwext4-vfs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_41/os-module/rvfs/lwext4-vfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-03-07 18:38:56.40459567 +08:00:00\n    Building lwext4-vfs v0.1.0 (current)\n       Built [  17.479s] (current)\n     Parsing lwext4-vfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: lwext4-vfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=lwext4-vfs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/lwext4-vfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:34:21.776572268 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nbitflags    1.3.2    ---     2.8.0   Normal       ---\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"
            ]
          }
        },
        {
          "file": "[rap] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=lwext4-vfs, checker=Rapx\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/lwext4-vfs\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 21:33:45.087206091 +08:00:00\n\nOver visited: DefId(0:207 ~ vfscore[efcc]::path::{impl#3}::rename_to)\nOver visited: DefId(0:223 ~ vfscore[efcc]::path::print_fs_tree)\nOver visited: DefId(0:268 ~ vfscore[efcc]::utils::{impl#3}::from)\nOver visited: DefId(0:403 ~ vfscore[efcc]::fstype::{impl#9}::fmt)\nOver visited: DefId(0:598 ~ vfscore[efcc]::utils::{impl#18}::fmt)\nOver visited: DefId(0:828 ~ vfscore[efcc]::utils::{impl#49}::fmt)\nOver visited: DefId(0:1044 ~ vfscore[efcc]::utils::{impl#99}::fmt)\nOver visited: DefId(0:1149 ~ vfscore[efcc]::utils::{impl#124}::fmt)\nOver visited: DefId(0:1384 ~ vfscore[efcc]::utils::{impl#149}::fmt)\nOver visited: DefId(0:98 ~ lwext4_vfs[5514]::inode::dir::{impl#4}::create)\nOver visited: DefId(0:100 ~ lwext4_vfs[5514]::inode::dir::{impl#4}::link)\nOver visited: DefId(0:110 ~ lwext4_vfs[5514]::inode::dir::{impl#4}::lookup)\nwarning: Double free detected.\n   --> lwext4-vfs/src/inode/dir.rs:333:5\n    |\n333 |     }\n    |     - Double free detected.\n    |\nOver visited: DefId(0:438 ~ lwext4_vfs[5514]::{impl#4}::new)\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=lwext4-vfs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_41/os-module/rvfs/lwext4-vfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-03-07 18:39:14.622024206 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building lwext4-vfs v0.1.0 (current)\n       Built [  17.479s] (current)\n     Parsing lwext4-vfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: lwext4-vfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "lwext4-vfs/src/blk.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: using `clone` on type `BlockDeviceConfig` which implements the `Copy` trait\n  --> lwext4-vfs/src/blk.rs:34:12\n   |\n34 |         Ok(self.config.clone())\n   |            ^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.config`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "lwext4-vfs/src/inode/file.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: returning the result of a `let` binding from a block\n  --> lwext4-vfs/src/inode/file.rs:88:9\n   |\n85 | /         let perm = file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n86 | |             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n87 | |         });\n   | |___________- unnecessary `let` binding\n88 |           perm\n   |           ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\nhelp: return the expression directly\n   |\n85 ~         \n86 ~         file.metadata().map_or(VfsNodePerm::default_dir(), |meta| {\n87 +             VfsNodePerm::from_bits_truncate(meta.permissions().mode() as u16)\n88 +         })\n   |\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "rvfs",
      "pkg": "ramfs",
      "count": 13,
      "raw_reports": [
        {
          "file": "vfscore/src/lib.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Mirai": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n",
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "ramfs/src/inode/symlink.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: needless call to `as_bytes`\n  --> ramfs/src/inode/symlink.rs:64:19\n   |\n64 |         let len = inner.as_bytes().len();\n   |                   ^^^^^^^^^^^^^^^^^^^^^^ help: `len()` can be called directly on strings: `inner.len()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes\n   = note: `#[warn(clippy::needless_as_bytes)]` on by default\n\n",
              "warning: needless call to `as_bytes`\n  --> ramfs/src/inode/symlink.rs:77:25\n   |\n77 |         basic.st_size = self.inner.lock().as_bytes().len() as u64;\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: `len()` can be called directly on strings: `self.inner.lock().len()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_as_bytes\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_40/os-module/rvfs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ramfs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_40/os-module/rvfs/ramfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-02-16 21:34:26.168402428 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_40/os-module/rvfs/Cargo.lock\")\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=ramfs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_41/os-module/rvfs/ramfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-03-07 18:39:14.6241791 +08:00:00\n    Building ramfs v0.1.0 (current)\n       Built [   3.879s] (current)\n     Parsing ramfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: ramfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=ramfs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/ramfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:34:22.897943572 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=ramfs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_41/os-module/rvfs/ramfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-03-07 18:39:19.137549051 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building ramfs v0.1.0 (current)\n       Built [   3.879s] (current)\n     Parsing ramfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: ramfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "rvfs",
      "pkg": "fat-vfs",
      "count": 12,
      "raw_reports": [
        {
          "file": "vfscore/src/lib.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n",
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_40/os-module/rvfs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fat-vfs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_40/os-module/rvfs/fat-vfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-02-16 21:34:25.927475853 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_40/os-module/rvfs/Cargo.lock\")\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fat-vfs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_41/os-module/rvfs/fat-vfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-03-07 18:38:54.699216918 +08:00:00\n    Building fat-vfs v0.1.0 (current)\n       Built [   1.143s] (current)\n     Parsing fat-vfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: fat-vfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=fat-vfs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/fat-vfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:34:20.622213885 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"
            ]
          }
        },
        {
          "file": "[rap] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=fat-vfs, checker=Rapx\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/fat-vfs\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 21:33:23.695669668 +08:00:00\n\nOver visited: DefId(0:207 ~ vfscore[efcc]::path::{impl#3}::rename_to)\nOver visited: DefId(0:223 ~ vfscore[efcc]::path::print_fs_tree)\nOver visited: DefId(0:268 ~ vfscore[efcc]::utils::{impl#3}::from)\nOver visited: DefId(0:403 ~ vfscore[efcc]::fstype::{impl#9}::fmt)\nOver visited: DefId(0:598 ~ vfscore[efcc]::utils::{impl#18}::fmt)\nOver visited: DefId(0:828 ~ vfscore[efcc]::utils::{impl#49}::fmt)\nOver visited: DefId(0:1044 ~ vfscore[efcc]::utils::{impl#99}::fmt)\nOver visited: DefId(0:1149 ~ vfscore[efcc]::utils::{impl#124}::fmt)\nOver visited: DefId(0:1384 ~ vfscore[efcc]::utils::{impl#149}::fmt)\nOver visited: DefId(0:132 ~ fat_vfs[9044]::inode::dir::{impl#0}::delete_file)\nwarning: Dangling pointer detected.\n   --> fat-vfs/src/inode/dir.rs:134:1\n    |\n134 | / fn create(\n135 | |         &self,\n...   |\n179 | |         }\n180 | |     }\n    | |_____- Dangling pointer detected.\n    |\nwarning: Dangling pointer detected during unwinding.\n   --> fat-vfs/src/inode/dir.rs:134:1\n    |\n134 | / fn create(\n135 | |         &self,\n...   |\n179 | |         }\n180 | |     }\n    | |_____- Dangling pointer detected during unwinding.\n    |\nwarning: Dangling pointer detected.\n   --> fat-vfs/src/inode/dir.rs:193:1\n    |\n193 | / fn lookup(&self, name: &str) -> VfsResult<Arc<dyn VfsInode>> {\n194 | |         let mut inode_cache = self.inode_cache.lock();\n...   |\n245 | |         }\n246 | |     }\n    | |_____- Dangling pointer detected.\n    |\nwarning: Dangling pointer detected during unwinding.\n   --> fat-vfs/src/inode/dir.rs:193:1\n    |\n193 | / fn lookup(&self, name: &str) -> VfsResult<Arc<dyn VfsInode>> {\n194 | |         let mut inode_cache = self.inode_cache.lock();\n...   |\n245 | |         }\n246 | |     }\n    | |_____- Dangling pointer detected during unwinding.\n    |\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=fat-vfs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_41/os-module/rvfs/fat-vfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-03-07 18:38:56.402815525 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building fat-vfs v0.1.0 (current)\n       Built [   1.143s] (current)\n     Parsing fat-vfs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: fat-vfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "rvfs",
      "pkg": "devfs",
      "count": 11,
      "raw_reports": [
        {
          "file": "vfscore/src/lib.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n",
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_40/os-module/rvfs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devfs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_40/os-module/rvfs/devfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-02-16 21:34:25.688193714 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_40/os-module/rvfs/Cargo.lock\")\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=devfs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_41/os-module/rvfs/devfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-03-07 18:38:52.531239169 +08:00:00\n    Building devfs v0.1.0 (current)\n       Built [   0.716s] (current)\n     Parsing devfs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: devfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=devfs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/devfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:34:18.293879235 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=devfs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_41/os-module/rvfs/devfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-03-07 18:38:53.613013795 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building devfs v0.1.0 (current)\n       Built [   0.716s] (current)\n     Parsing devfs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: devfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "rvfs",
      "pkg": "dynfs",
      "count": 11,
      "raw_reports": [
        {
          "file": "vfscore/src/lib.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n",
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_40/os-module/rvfs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=dynfs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_40/os-module/rvfs/dynfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-02-16 21:34:25.808094778 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_40/os-module/rvfs/Cargo.lock\")\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=dynfs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_41/os-module/rvfs/dynfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-03-07 18:38:53.614809432 +08:00:00\n    Building dynfs v0.1.0 (current)\n       Built [   0.736s] (current)\n     Parsing dynfs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: dynfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=dynfs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/dynfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:34:19.447993304 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=dynfs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_41/os-module/rvfs/dynfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-03-07 18:38:54.697436141 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building dynfs v0.1.0 (current)\n       Built [   0.736s] (current)\n     Parsing dynfs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: dynfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "rvfs",
      "pkg": "vfscore",
      "count": 10,
      "raw_reports": [
        {
          "file": "vfscore/src/lib.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n",
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_40/os-module/rvfs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=vfscore, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_41/os-module/rvfs/vfscore\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-03-07 18:39:20.131362137 +08:00:00\n    Building vfscore v0.1.0 (current)\n       Built [   3.696s] (current)\n     Parsing vfscore v0.1.0 (current)\n      Parsed [   0.006s] (current)\nerror: vfscore not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=vfscore, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/vfscore\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:34:25.386078664 +08:00:00\n\nName         Project  Compat  Latest  Kind    Platform\n----         -------  ------  ------  ----    --------\nbitflags     1.3.2    ---     2.8.0   Normal  ---\ndowncast-rs  1.2.1    ---     2.0.1   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=vfscore, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_41/os-module/rvfs/vfscore\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-03-07 18:39:24.455556713 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building vfscore v0.1.0 (current)\n       Built [   3.696s] (current)\n     Parsing vfscore v0.1.0 (current)\n      Parsed [   0.006s] (current)\nerror: vfscore not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "rvfs",
      "pkg": "demo",
      "count": 9,
      "raw_reports": [
        {
          "file": "vfscore/src/lib.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_40/os-module/rvfs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=demo, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_40/os-module/rvfs/demo\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-02-16 21:34:25.567508275 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#unifs@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_40/os-module/rvfs/Cargo.lock\")\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=demo, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/demo\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:34:16.937299814 +08:00:00\n\nName        Project  Compat  Latest  Kind    Platform\n----        -------  ------  ------  ----    --------\nenv_logger  0.9.3    ---     0.11.6  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[rap] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=demo, checker=Rapx\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/demo\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 21:32:55.203664353 +08:00:00\n\nOver visited: DefId(0:212 ~ vfscore[3374]::path::{impl#3}::rename_to)\nOver visited: DefId(0:228 ~ vfscore[3374]::path::print_fs_tree)\nOver visited: DefId(0:274 ~ vfscore[3374]::utils::{impl#3}::from)\nOver visited: DefId(0:411 ~ vfscore[3374]::fstype::{impl#9}::fmt)\nOver visited: DefId(0:606 ~ vfscore[3374]::utils::{impl#19}::fmt)\nOver visited: DefId(0:836 ~ vfscore[3374]::utils::{impl#50}::fmt)\nOver visited: DefId(0:1052 ~ vfscore[3374]::utils::{impl#100}::fmt)\nOver visited: DefId(0:1157 ~ vfscore[3374]::utils::{impl#125}::fmt)\nOver visited: DefId(0:1392 ~ vfscore[3374]::utils::{impl#150}::fmt)\nOver visited: DefId(0:98 ~ lwext4_vfs[bdfa]::inode::dir::{impl#4}::create)\nOver visited: DefId(0:100 ~ lwext4_vfs[bdfa]::inode::dir::{impl#4}::link)\nOver visited: DefId(0:110 ~ lwext4_vfs[bdfa]::inode::dir::{impl#4}::lookup)\nwarning: Double free detected.\n   --> lwext4-vfs/src/inode/dir.rs:333:5\n    |\n333 |     }\n    |     - Double free detected.\n    |\nOver visited: DefId(0:438 ~ lwext4_vfs[bdfa]::{impl#4}::new)\nOver visited: DefId(0:72 ~ demo[d5d3]::devfs::init_devfs)\nOver visited: DefId(0:105 ~ demo[d5d3]::extfs::init_extfs)\nOver visited: DefId(0:165 ~ demo[d5d3]::procfs::init_procfs)\nOver visited: DefId(0:185 ~ demo[d5d3]::ramfs::init_ramfs)\nOver visited: DefId(0:188 ~ demo[d5d3]::main)\nOver visited: DefId(0:192 ~ demo[d5d3]::open_symlink_test)\n"
            ]
          }
        },
        {
          "file": "demo/src/extfs.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: file opened with `create`, but `truncate` behavior not defined\n  --> demo/src/extfs.rs:87:10\n   |\n87 |         .create(true)\n   |          ^^^^^^^^^^^^- help: add: `.truncate(true)`\n   |\n   = help: if you intend to overwrite an existing file entirely, call `.truncate(true)`\n   = help: if you instead know that you may want to keep some parts of the old file, call `.truncate(false)`\n   = help: alternatively, use `.append(true)` to append to the file instead of overwriting it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#suspicious_open_options\n   = note: `#[warn(clippy::suspicious_open_options)]` on by default\n\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "rvfs",
      "pkg": "unifs",
      "count": 9,
      "raw_reports": [
        {
          "file": "vfscore/src/lib.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ],
            "Mirai": [
              "warning: the feature `exclusive_range_pattern` has been stable since 1.80.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:3:12\n  |\n3 | #![feature(exclusive_range_pattern)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n",
              "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> vfscore/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_40/os-module/rvfs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=unifs, checker=Geiger\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_40/os-module/rvfs/unifs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-02-16 21:34:26.286709564 +08:00:00\nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nFailed to match (ignoring source) package: git+https://github.com/os-module/rvfs.git#vfscore@0.1.0 \nerror: Cargo(\"failed to parse lock file at: /home/runner/check/batch_40/os-module/rvfs/Cargo.lock\")\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=unifs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_41/os-module/rvfs/unifs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-03-07 18:39:19.139575778 +08:00:00\n    Building unifs v0.1.0 (current)\n       Built [   0.675s] (current)\n     Parsing unifs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: unifs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=unifs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/unifs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:34:24.052168655 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=unifs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_41/os-module/rvfs/unifs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-03-07 18:39:20.129577842 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building unifs v0.1.0 (current)\n       Built [   0.675s] (current)\n     Parsing unifs v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: unifs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    },
    {
      "user": "os-module",
      "repo": "rvfs",
      "pkg": "custom_fs",
      "count": 4,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_40/os-module/rvfs/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (81 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    ├── unifs 0.1.0\n    │   ├── ramfs 0.1.0\n    │   │   ├── vfscore 0.1.0\n    │   │   │   ├── unifs 0.1.0\n    │   │   │   ├── ramfs 0.1.0\n    │   │   │   ├── lwext4-vfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── fat-vfs 0.1.0\n    │   │   │   ├── dynfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   ├── devfs 0.1.0\n    │   │   │   │   └── demo 0.1.0\n    │   │   │   └── demo 0.1.0\n    │   │   └── demo 0.1.0\n    │   ├── lwext4-vfs 0.1.0\n    │   ├── fat-vfs 0.1.0\n    │   ├── dynfs 0.1.0\n    │   └── devfs 0.1.0\n    ├── ramfs 0.1.0\n    ├── lwext4-vfs 0.1.0\n    ├── fat-vfs 0.1.0\n    ├── dynfs 0.1.0\n    ├── devfs 0.1.0\n    ├── demo 0.1.0\n    └── custom_fs 0.1.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 81\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.169\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=custom_fs, checker=SemverChecks\n// toolchain=nightly, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_41/os-module/rvfs/customfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-03-07 18:38:47.682799682 +08:00:00\n    Building custom_fs v0.1.0 (current)\n       Built [   4.014s] (current)\n     Parsing custom_fs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: custom_fs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=custom_fs, checker=Outdated\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_40/os-module/rvfs/customfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:34:15.816746097 +08:00:00\n\nName        Project  Compat  Latest  Kind         Platform\n----        -------  ------  ------  ----         --------\nenv_logger  0.9.3    ---     0.11.6  Development  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=custom_fs, checker=SemverChecks\ntoolchain=nightly, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_41/os-module/rvfs/customfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-03-07 18:38:52.529536193 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building custom_fs v0.1.0 (current)\n       Built [   4.014s] (current)\n     Parsing custom_fs v0.1.0 (current)\n      Parsed [   0.001s] (current)\nerror: custom_fs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}