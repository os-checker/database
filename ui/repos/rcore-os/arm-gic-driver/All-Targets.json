{
  "repo": {
    "user": "rcore-os",
    "repo": "arm-gic-driver"
  },
  "data": [
    {
      "user": "rcore-os",
      "repo": "arm-gic-driver",
      "pkg": "test-base",
      "count": 48,
      "raw_reports": [
        {
          "file": "gic-driver/src/version/v3/gicr.rs",
          "features": "",
          "count": 15,
          "kinds": {
            "Clippy(Warn)": [
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "gic-driver/src/version/v3/gicd.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Clippy(Warn)": [
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"imp::linux::set_times\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:101:9: 101:29 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:110:13: 110:40 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}",
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"imp::linux::set_file_handle_times\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:35:9: 35:29 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:74:13: 74:40 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:69:30: 69:74 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:70:13: 70:64 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"is_disabled\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4343:15: 4343:34 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4364:13: 4364:48 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"backends::use_file::open_or_wait\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"simd::runtime::get_runtime_feature\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n    \"dep_kind\": \"Both\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:84:37: 84:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:95:5: 95:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:127:39: 127:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:134:5: 134:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"parking_lot_core::unpark_requeue\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:216:25: 216:59 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:228:9: 228:64 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"sync::notify::NotifiedProject::<'_>::drop_notified\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1323:36: 1323:61 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1338:17: 1338:57 (#0)\",\n    \"dep_kind\": \"Data\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n    \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/rcore-os/arm-gic-driver/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── arm-gic-driver 0.15.5\n    ├── test-gicv3 0.1.0\n    ├── test-gicv2 0.1.0\n    └── test-base 0.1.0\n        ├── test-gicv3 0.1.0\n        └── test-gicv2 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 796,\n    \"last-commit\": \"61aac2116c8cb7cc80ff8ca283eec7687d384038\",\n    \"last-updated\": \"2025-08-15T20:42:09+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 289\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=test-base, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-base\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-08-21 4:31:22.452491374 +08:00:00\n   Compiling autocfg v1.5.0\n   Compiling libc v0.2.175\n   Compiling cfg-if v1.0.3\n   Compiling syn v2.0.106\n   Compiling smallvec v1.15.1\n   Compiling serde v1.0.219\n   Compiling fnv v1.0.7\n   Compiling pin-project-lite v0.2.16\n   Compiling bytes v1.10.1\n   Compiling lock_api v0.4.13\n   Compiling futures-core v0.3.31\n   Compiling itoa v1.0.15\n   Compiling parking_lot_core v0.9.11\n   Compiling stable_deref_trait v1.2.0\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling scopeguard v1.2.0\n   Compiling futures-sink v0.3.31\n   Compiling bitflags v2.9.2\n   Compiling mio v1.0.4\n   Compiling parking_lot v0.12.4\n   Compiling signal-hook-registry v1.4.6\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling socket2 v0.6.0\n   Compiling memchr v2.7.5\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.5\n   Compiling slab v0.4.11\n   Compiling indexmap v2.10.0\n   Compiling futures-channel v0.3.31\n   Compiling shlex v1.3.0\n   Compiling pin-utils v0.1.0\n   Compiling vcpkg v0.2.15\n   Compiling cc v1.2.33\n   Compiling pkg-config v0.3.32\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4343:15: 4343:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4364:13: 4364:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling futures-io v0.3.31\n   Compiling futures-task v0.3.31\n   Compiling writeable v0.6.1\n   Compiling litemap v0.8.0\n   Compiling tracing-core v0.1.34\n   Compiling icu_normalizer_data v2.0.0\n   Compiling icu_properties_data v2.0.1\n   Compiling httparse v1.10.1\n   Compiling synstructure v0.13.2\n   Compiling tracing v0.1.41\n   Compiling openssl-sys v0.9.109\n   Compiling percent-encoding v2.3.1\n   Compiling foreign-types-shared v0.1.1\n   Compiling tower-service v0.3.3\n   Compiling try-lock v0.2.5\n   Compiling prettyplease v0.2.37\n   Compiling openssl v0.10.73\n   Compiling want v0.3.1\n   Compiling foreign-types v0.3.2\n   Compiling http v1.3.1\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling native-tls v0.2.14\n   Compiling form_urlencoded v1.2.1\n   Compiling utf8_iter v1.0.4\n   Compiling openssl-probe v0.1.6\n   Compiling log v0.4.27\n   Compiling http-body v1.0.1\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling num-traits v0.2.19\n   Compiling ryu v1.0.20\n   Compiling winnow v0.7.12\n   Compiling typeid v1.0.3\n   Compiling http v0.2.12\n   Compiling semver v1.0.26\n   Compiling zerocopy v0.8.26\n   Compiling serde_derive v1.0.219\n   Compiling zerofrom-derive v0.1.6\n   Compiling yoke-derive v0.8.0\n   Compiling zerovec-derive v0.11.1\n   Compiling displaydoc v0.2.5\n   Compiling zerofrom v0.1.6\n   Compiling yoke v0.8.0\n   Compiling tokio-macros v2.5.0\n   Compiling zerovec v0.11.4\n   Compiling futures-macro v0.3.31\n   Compiling tokio v1.47.1\n   Compiling tinystr v0.8.1\n   Compiling icu_locale_core v2.0.0\n   Compiling futures-util v0.3.31\n   Compiling potential_utf v0.1.2\n   Compiling zerotrie v0.2.2\n   Compiling icu_provider v2.0.0\n   Compiling icu_collections v2.0.0\n   Compiling icu_properties v2.0.1\n   Compiling icu_normalizer v2.0.0\n   Compiling openssl-macros v0.1.1\n   Compiling idna_adapter v1.2.1\n   Compiling idna v1.0.3\n   Compiling kdef-pgtable v0.1.4\n   Compiling thiserror-impl v2.0.16\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:216:25: 216:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:228:9: 228:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"sync::notify::NotifiedProject::<'_>::drop_notified\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1323:36: 1323:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1338:17: 1338:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling tokio-util v0.7.16\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling url v2.5.4\n   Compiling ipnet v2.11.0\n   Compiling serde_json v1.0.143\n   Compiling getrandom v0.3.3\n   Compiling atomic-waker v1.1.2\n   Compiling serde_spanned v0.6.9\n   Compiling h2 v0.4.12\n   Compiling toml_datetime v0.6.11\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:127:39: 127:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:134:5: 134:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:84:37: 84:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:95:5: 95:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] crate openssl contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling toml_write v0.1.2\n   Compiling tokio-native-tls v0.3.1\n   Compiling thiserror v1.0.69\n   Compiling rustix v1.0.8\n   Compiling toml_edit v0.22.27\n   Compiling ordered-float v2.10.1\n   Compiling erased-serde v0.4.6\n   Compiling hyper v1.7.0\n   Compiling h2 v0.3.27\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling serde_urlencoded v0.7.1\n   Compiling http-body v0.4.6\n   Compiling thiserror-impl v1.0.69\n   Compiling socket2 v0.5.10\n   Compiling sync_wrapper v1.0.2\n   Compiling encoding_rs v0.8.35\n   Compiling httpdate v1.0.3\n   Compiling linux-raw-sys v0.9.4\n   Compiling thiserror v2.0.16\n   Compiling ident_case v1.0.1\n   Compiling camino v1.1.11\n   Compiling base64 v0.22.1\n   Compiling mime v0.3.17\n   Compiling anyhow v1.0.99\n   Compiling crc32fast v1.5.0\n   Compiling tower-layer v0.3.3\n   Compiling strsim v0.11.1\n   Compiling tower v0.5.2\n   Compiling darling_core v0.20.11\n   Compiling hyper-util v0.1.16\n   Compiling hyper v0.14.32\n   Compiling rand_core v0.9.3\n   Compiling toml v0.8.23\n   Compiling ppv-lite86 v0.2.21\n   Compiling serde-untagged v0.1.8\n   Compiling serde-value v0.7.0\n   Compiling http-body-util v0.1.3\n   Compiling zeroize v1.8.1\n   Compiling adler2 v2.0.1\n   Compiling iri-string v0.7.8\n   Compiling base64 v0.21.7\n   Compiling unicode-xid v0.2.6\n   Compiling darling_macro v0.20.11\n   Compiling cargo-util-schemas v0.2.0\n   Compiling rustls-pemfile v1.0.4\n   Compiling miniz_oxide v0.8.9\n   Compiling rustls-pki-types v1.12.0\n   Compiling hyper-tls v0.6.0\n   Compiling rand_chacha v0.9.0\n   Compiling hyper-tls v0.5.0\n   Compiling xattr v1.5.1\n   Compiling tower-http v0.6.6\n   Compiling cargo-platform v0.2.0\n   Compiling futures-executor v0.3.31\n   Compiling filetime v0.2.26\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:101:9: 101:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:110:13: 110:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_file_handle_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:35:9: 35:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:74:13: 74:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] crate filetime contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling byteorder v1.5.0\n   Compiling sync_wrapper v0.1.2\n   Compiling heapless v0.8.0\n   Compiling reqwest v0.11.27\n   Compiling tar v0.4.44\n   Compiling hash32 v0.3.1\n   Compiling cargo_metadata v0.20.0\n   Compiling futures v0.3.31\n   Compiling reqwest v0.12.23\n   Compiling flate2 v1.1.2\n   Compiling rand v0.9.2\n   Compiling darling v0.20.11\n   Compiling serde_spanned v1.0.0\n   Compiling toml_datetime v0.7.0\n   Compiling toml_parser v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling nb v1.1.0\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_writer v1.0.2\n   Compiling toml v0.9.5\n   Compiling embedded-hal-nb v1.0.0\n   Compiling bindeps-simple v0.2.5\n   Compiling release-dep v0.1.0\n   Compiling pie-boot-loader-aarch64 v0.2.3\n   Compiling fdt-parser v0.4.17\n   Compiling num-align v0.1.0\n   Compiling tock-registers v0.10.0\n   Compiling any-uart v0.2.12\n   Compiling aarch64-cpu-ext v0.1.4\n   Compiling page-table-generic v0.6.0\n   Compiling pie-boot-if v0.7.0\n   Compiling kasm-aarch64 v0.1.4\n   Compiling spin v0.10.0\n   Compiling pie-boot-macros v0.1.3\n   Compiling smccc v0.2.2\n   Compiling spin v0.9.8\n   Compiling enum_dispatch v0.3.13\n   Compiling test-base v0.1.0 (/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-base)\n   Compiling buddy_system_allocator v0.11.0\n   Compiling somehal v0.3.8\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:76:8\n   |\n76 |     if let Some(ref dependencies) = cargo_toml.dependencies\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:77:12\n   |\n77 |         && let Some(dep_value) = dependencies.get(package_name)\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:85:16\n   |\n85 |             if let Some(ref dependencies) = target_dep.dependencies\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:86:20\n   |\n86 |                 && let Some(dep_value) = dependencies.get(package_name)\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `somehal` (build script) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=test-base, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-base\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-08-21 4:32:23.043853882 +08:00:00\n   Compiling proc-macro2 v1.0.101\n   Compiling libc v0.2.175\n   Compiling autocfg v1.5.0\n   Compiling cfg-if v1.0.3\n   Compiling smallvec v1.15.1\n   Compiling fnv v1.0.7\n   Compiling serde v1.0.219\n   Compiling quote v1.0.40\n   Compiling lock_api v0.4.13\n   Compiling syn v2.0.106\n   Compiling pin-project-lite v0.2.16\n   Compiling bytes v1.10.1\n   Compiling itoa v1.0.15\n   Compiling futures-core v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling parking_lot_core v0.9.11\n   Compiling scopeguard v1.2.0\n   Compiling once_cell v1.21.3\n   Compiling futures-sink v0.3.31\n   Compiling bitflags v2.9.2\n   Compiling parking_lot v0.12.4\n   Compiling signal-hook-registry v1.4.6\n   Compiling mio v1.0.4\n   Compiling socket2 v0.6.0\n   Compiling equivalent v1.0.2\n   Compiling memchr v2.7.5\n   Compiling hashbrown v0.15.5\n   Compiling slab v0.4.11\n   Compiling futures-channel v0.3.31\n   Compiling indexmap v2.10.0\n   Compiling pin-utils v0.1.0\n   Compiling shlex v1.3.0\n   Compiling futures-io v0.3.31\n   Compiling cc v1.2.33\n   Compiling vcpkg v0.2.15\n   Compiling futures-task v0.3.31\n   Compiling pkg-config v0.3.32\n   Compiling litemap v0.8.0\n   Compiling writeable v0.6.1\n   Compiling synstructure v0.13.2\n   Compiling tracing-core v0.1.34\n   Compiling openssl-sys v0.9.109\n   Compiling icu_normalizer_data v2.0.0\n   Compiling icu_properties_data v2.0.1\n   Compiling tracing v0.1.41\n   Compiling httparse v1.10.1\n   Compiling percent-encoding v2.3.1\n   Compiling tower-service v0.3.3\n   Compiling foreign-types-shared v0.1.1\n   Compiling try-lock v0.2.5\n   Compiling openssl v0.10.73\n   Compiling prettyplease v0.2.37\n   Compiling want v0.3.1\n   Compiling foreign-types v0.3.2\n   Compiling http v1.3.1\n   Compiling native-tls v0.2.14\n   Compiling form_urlencoded v1.2.1\n   Compiling utf8_iter v1.0.4\n   Compiling log v0.4.27\n   Compiling openssl-probe v0.1.6\n   Compiling http-body v1.0.1\n   Compiling num-traits v0.2.19\n   Compiling winnow v0.7.12\n   Compiling ryu v1.0.20\n   Compiling typeid v1.0.3\n   Compiling http v0.2.12\n   Compiling semver v1.0.26\n   Compiling serde_derive v1.0.219\n   Compiling zerofrom-derive v0.1.6\n   Compiling yoke-derive v0.8.0\n   Compiling zerovec-derive v0.11.1\n   Compiling zerofrom v0.1.6\n   Compiling tokio-macros v2.5.0\n   Compiling yoke v0.8.0\n   Compiling displaydoc v0.2.5\n   Compiling zerovec v0.11.4\n   Compiling tokio v1.47.1\n   Compiling futures-macro v0.3.31\n   Compiling tinystr v0.8.1\n   Compiling icu_locale_core v2.0.0\n   Compiling futures-util v0.3.31\n   Compiling potential_utf v0.1.2\n   Compiling zerotrie v0.2.2\n   Compiling icu_provider v2.0.0\n   Compiling icu_collections v2.0.0\n   Compiling icu_normalizer v2.0.0\n   Compiling icu_properties v2.0.1\n   Compiling openssl-macros v0.1.1\n   Compiling tokio-util v0.7.16\n   Compiling idna_adapter v1.2.1\n   Compiling idna v1.0.3\n   Compiling kdef-pgtable v0.1.4\n   Compiling thiserror-impl v2.0.16\n   Compiling url v2.5.4\n   Compiling serde_json v1.0.143\n   Compiling zerocopy v0.8.26\n   Compiling atomic-waker v1.1.2\n   Compiling ipnet v2.11.0\n   Compiling getrandom v0.3.3\n   Compiling h2 v0.4.12\n   Compiling tokio-native-tls v0.3.1\n   Compiling toml_datetime v0.6.11\n   Compiling serde_spanned v0.6.9\n   Compiling rustix v1.0.8\n   Compiling thiserror v1.0.69\n   Compiling toml_write v0.1.2\n   Compiling toml_edit v0.22.27\n   Compiling erased-serde v0.4.6\n   Compiling ordered-float v2.10.1\n   Compiling hyper v1.7.0\n   Compiling h2 v0.3.27\n   Compiling serde_urlencoded v0.7.1\n   Compiling http-body v0.4.6\n   Compiling thiserror-impl v1.0.69\n   Compiling socket2 v0.5.10\n   Compiling sync_wrapper v1.0.2\n   Compiling encoding_rs v0.8.35\n   Compiling tower-layer v0.3.3\n   Compiling httpdate v1.0.3\n   Compiling base64 v0.22.1\n   Compiling thiserror v2.0.16\n   Compiling crc32fast v1.5.0\n   Compiling camino v1.1.11\n   Compiling ident_case v1.0.1\n   Compiling mime v0.3.17\n   Compiling strsim v0.11.1\n   Compiling anyhow v1.0.99\n   Compiling linux-raw-sys v0.9.4\n   Compiling darling_core v0.20.11\n   Compiling hyper v0.14.32\n   Compiling hyper-util v0.1.16\n   Compiling tower v0.5.2\n   Compiling rand_core v0.9.3\n   Compiling ppv-lite86 v0.2.21\n   Compiling toml v0.8.23\n   Compiling serde-untagged v0.1.8\n   Compiling serde-value v0.7.0\n   Compiling http-body-util v0.1.3\n   Compiling adler2 v2.0.1\n   Compiling unicode-xid v0.2.6\n   Compiling zeroize v1.8.1\n   Compiling iri-string v0.7.8\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4343:15: 4343:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4364:13: 4364:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:216:25: 216:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:228:9: 228:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"sync::notify::NotifiedProject::<'_>::drop_notified\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1323:36: 1323:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1338:17: 1338:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:127:39: 127:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:134:5: 134:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:84:37: 84:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:95:5: 95:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] crate openssl contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:101:9: 101:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:110:13: 110:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_file_handle_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:35:9: 35:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:74:13: 74:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] crate filetime contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=test-base, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-base\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-08-21 4:32:53.441870091 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.101\n   Compiling libc v0.2.175\n   Compiling autocfg v1.5.0\n   Compiling cfg-if v1.0.3\n   Compiling smallvec v1.15.1\n   Compiling fnv v1.0.7\n   Compiling serde v1.0.219\n   Compiling quote v1.0.40\n   Compiling lock_api v0.4.13\n   Compiling syn v2.0.106\n   Compiling pin-project-lite v0.2.16\n   Compiling bytes v1.10.1\n   Compiling itoa v1.0.15\n   Compiling futures-core v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling parking_lot_core v0.9.11\n   Compiling scopeguard v1.2.0\n   Compiling once_cell v1.21.3\n   Compiling futures-sink v0.3.31\n   Compiling bitflags v2.9.2\n   Compiling parking_lot v0.12.4\n   Compiling signal-hook-registry v1.4.6\n   Compiling mio v1.0.4\n   Compiling socket2 v0.6.0\n   Compiling equivalent v1.0.2\n   Compiling memchr v2.7.5\n   Compiling hashbrown v0.15.5\n   Compiling slab v0.4.11\n   Compiling futures-channel v0.3.31\n   Compiling indexmap v2.10.0\n   Compiling pin-utils v0.1.0\n   Compiling shlex v1.3.0\n   Compiling futures-io v0.3.31\n   Compiling cc v1.2.33\n   Compiling vcpkg v0.2.15\n   Compiling futures-task v0.3.31\n   Compiling pkg-config v0.3.32\n   Compiling litemap v0.8.0\n   Compiling writeable v0.6.1\n   Compiling synstructure v0.13.2\n   Compiling tracing-core v0.1.34\n   Compiling openssl-sys v0.9.109\n   Compiling icu_normalizer_data v2.0.0\n   Compiling icu_properties_data v2.0.1\n   Compiling tracing v0.1.41\n   Compiling httparse v1.10.1\n   Compiling percent-encoding v2.3.1\n   Compiling tower-service v0.3.3\n   Compiling foreign-types-shared v0.1.1\n   Compiling try-lock v0.2.5\n   Compiling openssl v0.10.73\n   Compiling prettyplease v0.2.37\n   Compiling want v0.3.1\n   Compiling foreign-types v0.3.2\n   Compiling http v1.3.1\n   Compiling native-tls v0.2.14\n   Compiling form_urlencoded v1.2.1\n   Compiling utf8_iter v1.0.4\n   Compiling log v0.4.27\n   Compiling openssl-probe v0.1.6\n   Compiling http-body v1.0.1\n   Compiling num-traits v0.2.19\n   Compiling winnow v0.7.12\n   Compiling ryu v1.0.20\n   Compiling typeid v1.0.3\n   Compiling http v0.2.12\n   Compiling semver v1.0.26\n   Compiling serde_derive v1.0.219\n   Compiling zerofrom-derive v0.1.6\n   Compiling yoke-derive v0.8.0\n   Compiling zerovec-derive v0.11.1\n   Compiling zerofrom v0.1.6\n   Compiling tokio-macros v2.5.0\n   Compiling yoke v0.8.0\n   Compiling displaydoc v0.2.5\n   Compiling zerovec v0.11.4\n   Compiling tokio v1.47.1\n   Compiling futures-macro v0.3.31\n   Compiling tinystr v0.8.1\n   Compiling icu_locale_core v2.0.0\n   Compiling futures-util v0.3.31\n   Compiling potential_utf v0.1.2\n   Compiling zerotrie v0.2.2\n   Compiling icu_provider v2.0.0\n   Compiling icu_collections v2.0.0\n   Compiling icu_normalizer v2.0.0\n   Compiling icu_properties v2.0.1\n   Compiling openssl-macros v0.1.1\n   Compiling tokio-util v0.7.16\n   Compiling idna_adapter v1.2.1\n   Compiling idna v1.0.3\n   Compiling kdef-pgtable v0.1.4\n   Compiling thiserror-impl v2.0.16\n   Compiling url v2.5.4\n   Compiling serde_json v1.0.143\n   Compiling zerocopy v0.8.26\n   Compiling atomic-waker v1.1.2\n   Compiling ipnet v2.11.0\n   Compiling getrandom v0.3.3\n   Compiling h2 v0.4.12\n   Compiling tokio-native-tls v0.3.1\n   Compiling toml_datetime v0.6.11\n   Compiling serde_spanned v0.6.9\n   Compiling rustix v1.0.8\n   Compiling thiserror v1.0.69\n   Compiling toml_write v0.1.2\n   Compiling toml_edit v0.22.27\n   Compiling erased-serde v0.4.6\n   Compiling ordered-float v2.10.1\n   Compiling hyper v1.7.0\n   Compiling h2 v0.3.27\n   Compiling serde_urlencoded v0.7.1\n   Compiling http-body v0.4.6\n   Compiling thiserror-impl v1.0.69\n   Compiling socket2 v0.5.10\n   Compiling sync_wrapper v1.0.2\n   Compiling encoding_rs v0.8.35\n   Compiling tower-layer v0.3.3\n   Compiling httpdate v1.0.3\n   Compiling base64 v0.22.1\n   Compiling thiserror v2.0.16\n   Compiling crc32fast v1.5.0\n   Compiling camino v1.1.11\n   Compiling ident_case v1.0.1\n   Compiling mime v0.3.17\n   Compiling strsim v0.11.1\n   Compiling anyhow v1.0.99\n   Compiling linux-raw-sys v0.9.4\n   Compiling darling_core v0.20.11\n   Compiling hyper v0.14.32\n   Compiling hyper-util v0.1.16\n   Compiling tower v0.5.2\n   Compiling rand_core v0.9.3\n   Compiling ppv-lite86 v0.2.21\n   Compiling toml v0.8.23\n   Compiling serde-untagged v0.1.8\n   Compiling serde-value v0.7.0\n   Compiling http-body-util v0.1.3\n   Compiling adler2 v2.0.1\n   Compiling unicode-xid v0.2.6\n   Compiling zeroize v1.8.1\n   Compiling iri-string v0.7.8\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        }
      ]
    },
    {
      "user": "rcore-os",
      "repo": "arm-gic-driver",
      "pkg": "test-gicv2",
      "count": 48,
      "raw_reports": [
        {
          "file": "gic-driver/src/version/v3/gicr.rs",
          "features": "",
          "count": 15,
          "kinds": {
            "Clippy(Warn)": [
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "gic-driver/src/version/v3/gicd.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Clippy(Warn)": [
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"imp::linux::set_times\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:101:9: 101:29 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:110:13: 110:40 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}",
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"imp::linux::set_file_handle_times\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:35:9: 35:29 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:74:13: 74:40 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:69:30: 69:74 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:70:13: 70:64 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"is_disabled\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4343:15: 4343:34 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4364:13: 4364:48 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"backends::use_file::open_or_wait\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"simd::runtime::get_runtime_feature\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n    \"dep_kind\": \"Both\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:84:37: 84:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:95:5: 95:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:127:39: 127:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:134:5: 134:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"parking_lot_core::unpark_requeue\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:216:25: 216:59 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:228:9: 228:64 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"sync::notify::NotifiedProject::<'_>::drop_notified\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1323:36: 1323:61 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1338:17: 1338:57 (#0)\",\n    \"dep_kind\": \"Data\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n    \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/rcore-os/arm-gic-driver/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── arm-gic-driver 0.15.5\n    ├── test-gicv3 0.1.0\n    ├── test-gicv2 0.1.0\n    └── test-base 0.1.0\n        ├── test-gicv3 0.1.0\n        └── test-gicv2 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 796,\n    \"last-commit\": \"61aac2116c8cb7cc80ff8ca283eec7687d384038\",\n    \"last-updated\": \"2025-08-15T20:42:09+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 289\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=test-gicv2, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-gicv2\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-08-21 4:32:08.124750889 +08:00:00\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:216:25: 216:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:228:9: 228:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"sync::notify::NotifiedProject::<'_>::drop_notified\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1323:36: 1323:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1338:17: 1338:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4343:15: 4343:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4364:13: 4364:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:127:39: 127:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:134:5: 134:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:84:37: 84:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:95:5: 95:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] crate openssl contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:101:9: 101:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:110:13: 110:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_file_handle_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:35:9: 35:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:74:13: 74:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] crate filetime contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling somehal v0.3.8\n   Compiling arm-gic-driver v0.15.5 (/home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver)\n   Compiling test-gicv2 v0.1.0 (/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-gicv2)\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:76:8\n   |\n76 |     if let Some(ref dependencies) = cargo_toml.dependencies\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:77:12\n   |\n77 |         && let Some(dep_value) = dependencies.get(package_name)\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:85:16\n   |\n85 |             if let Some(ref dependencies) = target_dep.dependencies\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:86:20\n   |\n86 |                 && let Some(dep_value) = dependencies.get(package_name)\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `somehal` (build script) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0658]: `let` expressions in this position are unstable\n   --> gic-driver/src/version/v2/mod.rs:724:20\n    |\n724 |                 if let Some(cpu_id) = cpu_id\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: could not compile `arm-gic-driver` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=test-gicv2, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-gicv2\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-08-21 4:32:53.443461143 +08:00:00\n    Checking bitflags v2.9.2\n    Checking scopeguard v1.2.0\n   Compiling base64 v0.21.7\n   Compiling thiserror v2.0.16\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:216:25: 216:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:228:9: 228:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"sync::notify::NotifiedProject::<'_>::drop_notified\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1323:36: 1323:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1338:17: 1338:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4343:15: 4343:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4364:13: 4364:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:127:39: 127:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:134:5: 134:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:84:37: 84:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:95:5: 95:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] crate openssl contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:101:9: 101:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:110:13: 110:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_file_handle_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:35:9: 35:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:74:13: 74:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] crate filetime contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=test-gicv2, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-gicv2\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-08-21 4:32:53.95089576 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking bitflags v2.9.2\n    Checking scopeguard v1.2.0\n   Compiling base64 v0.21.7\n   Compiling thiserror v2.0.16\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\n"
            ]
          }
        }
      ]
    },
    {
      "user": "rcore-os",
      "repo": "arm-gic-driver",
      "pkg": "test-gicv3",
      "count": 48,
      "raw_reports": [
        {
          "file": "gic-driver/src/version/v3/gicr.rs",
          "features": "",
          "count": 15,
          "kinds": {
            "Clippy(Warn)": [
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "gic-driver/src/version/v3/gicd.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Clippy(Warn)": [
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"imp::linux::set_times\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:101:9: 101:29 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:110:13: 110:40 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}",
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"imp::linux::set_file_handle_times\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:35:9: 35:29 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:74:13: 74:40 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:69:30: 69:74 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:70:13: 70:64 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"is_disabled\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4343:15: 4343:34 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4364:13: 4364:48 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"backends::use_file::open_or_wait\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"simd::runtime::get_runtime_feature\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n    \"dep_kind\": \"Both\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:84:37: 84:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:95:5: 95:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:127:39: 127:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:134:5: 134:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"parking_lot_core::unpark_requeue\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:216:25: 216:59 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:228:9: 228:64 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"sync::notify::NotifiedProject::<'_>::drop_notified\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1323:36: 1323:61 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1338:17: 1338:57 (#0)\",\n    \"dep_kind\": \"Data\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"DoubleLock\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n    \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n    \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n    \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n    \"callchains\": [\n      [\n        [\n          \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n        ]\n      ]\n    ]\n  },\n  \"explanation\": \"The first lock is not released when acquiring the second lock\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_4/rcore-os/arm-gic-driver/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── arm-gic-driver 0.15.5\n    ├── test-gicv3 0.1.0\n    ├── test-gicv2 0.1.0\n    └── test-base 0.1.0\n        ├── test-gicv3 0.1.0\n        └── test-gicv2 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 796,\n    \"last-commit\": \"61aac2116c8cb7cc80ff8ca283eec7687d384038\",\n    \"last-updated\": \"2025-08-15T20:42:09+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 289\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=test-gicv3, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-gicv3\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-08-21 4:32:09.391744283 +08:00:00\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:216:25: 216:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:228:9: 228:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"sync::notify::NotifiedProject::<'_>::drop_notified\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1323:36: 1323:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1338:17: 1338:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4343:15: 4343:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4364:13: 4364:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:127:39: 127:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:134:5: 134:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:84:37: 84:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:95:5: 95:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] crate openssl contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:101:9: 101:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:110:13: 110:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_file_handle_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:35:9: 35:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:74:13: 74:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] crate filetime contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling somehal v0.3.8\n   Compiling arm-gic-driver v0.15.5 (/home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver)\n   Compiling test-gicv3 v0.1.0 (/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-gicv3)\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:76:8\n   |\n76 |     if let Some(ref dependencies) = cargo_toml.dependencies\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:77:12\n   |\n77 |         && let Some(dep_value) = dependencies.get(package_name)\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:85:16\n   |\n85 |             if let Some(ref dependencies) = target_dep.dependencies\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: `let` expressions in this position are unstable\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/somehal-0.3.8/build.rs:86:20\n   |\n86 |                 && let Some(dep_value) = dependencies.get(package_name)\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n   = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `somehal` (build script) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror[E0658]: `let` expressions in this position are unstable\n   --> gic-driver/src/version/v2/mod.rs:724:20\n    |\n724 |                 if let Some(cpu_id) = cpu_id\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: could not compile `arm-gic-driver` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=test-gicv3, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-gicv3\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-08-21 4:32:53.95240588 +08:00:00\n    Checking bitflags v2.9.2\n    Checking scopeguard v1.2.0\n   Compiling rustls-pki-types v1.12.0\n   Compiling miniz_oxide v0.8.9\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"runtime::time::entry::StateCell::fire\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:216:25: 216:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/runtime/time/entry.rs:228:9: 228:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"sync::notify::NotifiedProject::<'_>::drop_notified\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1323:36: 1323:61 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/sync/notify.rs:1338:17: 1338:57 (#0)\",\n            \"dep_kind\": \"Data\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"process::imp::pidfd_reaper::Pidfd::open\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:35:12: 35:42 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.47.1/src/process/unix/pidfd_reaper.rs:46:17: 46:54 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:40Z WARN  lockbud::callbacks] crate tokio contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"command_helpers::CargoOutput::print_debug\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:69:30: 69:74 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/command_helpers.rs:70:13: 70:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"is_disabled\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4343:15: 4343:34 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.33/src/lib.rs:4364:13: 4364:48 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:27Z WARN  lockbud::callbacks] crate cc contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:47: 282:51 (#0)\",\n            \"second_lock_type\": \"StdMutex(sync::cancellation_token::tree_node::Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:229:10: 229:14 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.16/src/sync/cancellation_token/tree_node.rs:282:21: 282:52 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      }\n    ]\n[2025-08-20T20:31:41Z WARN  lockbud::callbacks] crate tokio_util contains bugs: { probably: 0, possibly: 1 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"simd::runtime::get_runtime_feature\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:24:23: 24:62 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/simd/runtime.rs:27:9: 27:58 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:29Z WARN  lockbud::callbacks] crate httparse contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:127:39: 127:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/ssl/mod.rs:134:5: 134:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:84:37: 84:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/hash.rs:95:5: 95:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:44Z WARN  lockbud::callbacks] crate openssl contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:30Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"backends::use_file::open_or_wait\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:84:15: 84:41 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/backends/use_file.rs:106:5: 106:37 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:48Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:101:9: 101:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:110:13: 110:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"imp::linux::set_file_handle_times\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:35:9: 35:29 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/filetime-0.2.26/src/unix/linux.rs:74:13: 74:40 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:59Z WARN  lockbud::callbacks] crate filetime contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=test-gicv3, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/itest/test-gicv3\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-08-21 4:32:54.673362351 +08:00:00\n\n\nstdout:\n\nstderr:\n    Checking bitflags v2.9.2\n    Checking scopeguard v1.2.0\n   Compiling rustls-pki-types v1.12.0\n   Compiling miniz_oxide v0.8.9\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `scopeguard` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `bitflags` (lib) due to 1 previous error\n"
            ]
          }
        }
      ]
    },
    {
      "user": "rcore-os",
      "repo": "arm-gic-driver",
      "pkg": "arm-gic-driver",
      "count": 37,
      "raw_reports": [
        {
          "file": "gic-driver/src/version/v3/gicr.rs",
          "features": "",
          "count": 15,
          "kinds": {
            "Clippy(Warn)": [
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicr.rs:217:12\n    |\n190 | impl LPI {\n    | -------- methods in this implementation\n...\n217 |     pub fn enable_lpi(&self) {\n    |            ^^^^^^^^^^\n...\n222 |     pub fn disable_lpi(&self) {\n    |            ^^^^^^^^^^^\n...\n231 |     pub fn is_lpi_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^\n...\n236 |     pub fn set_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n241 |     pub fn clear_lpi_pending(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^^^\n...\n246 |     pub fn invalidate_lpi(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n251 |     pub fn invalidate_all_lpi(&self) {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n256 |     pub fn sync(&self) {\n    |            ^^^^\n...\n263 |     pub fn is_last(&self) -> bool {\n    |            ^^^^^^^\n...\n268 |     pub fn get_affinity(&self) -> u32 {\n    |            ^^^^^^^^^^^^\n...\n273 |     pub fn supports_physical_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n278 |     pub fn supports_virtual_lpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `set_group`, `is_group1`, and `set_group_modifier` are never used\n   --> gic-driver/src/version/v3/gicr.rs:464:12\n    |\n324 | impl SGI {\n    | -------- methods in this implementation\n...\n464 |     pub fn set_group(&self, intid: IntId, group1: bool) {\n    |            ^^^^^^^^^\n...\n474 |     pub fn is_group1(&self, intid: IntId) -> bool {\n    |            ^^^^^^^^^\n...\n481 |     pub fn set_group_modifier(&self, intid: IntId, modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "gic-driver/src/version/v3/gicd.rs",
          "features": "",
          "count": 12,
          "kinds": {
            "Clippy(Warn)": [
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: multiple methods are never used\n   --> gic-driver/src/version/v3/gicd.rs:297:12\n    |\n 92 | impl DistributorReg {\n    | ------------------- methods in this implementation\n...\n297 |     pub fn set_interrupt_group(&self, intid: u32, group: u32, group_modifier: bool) {\n    |            ^^^^^^^^^^^^^^^^^^^\n...\n425 |     pub fn generate_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^^\n...\n432 |     pub fn generate_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^^^^\n...\n439 |     pub fn clear_spi_ns(&self, intid: u32) {\n    |            ^^^^^^^^^^^^\n...\n446 |     pub fn clear_spi_s(&self, intid: u32) {\n    |            ^^^^^^^^^^^\n...\n453 |     pub fn set_nmi(&self, intid: u32, nmi: bool) {\n    |            ^^^^^^^\n...\n470 |     pub fn is_nmi(&self, intid: u32) -> bool {\n    |            ^^^^^^\n...\n484 |     pub fn has_extended_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n...\n490 |     pub fn extended_spi_range(&self) -> u32 {\n    |            ^^^^^^^^^^^^^^^^^^\n...\n496 |     pub fn has_message_based_spi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^^^^^^\n...\n501 |     pub fn has_lpis(&self) -> bool {\n    |            ^^^^^^^^\n...\n506 |     pub fn has_direct_vlpi(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}",
              "{\n  \"bug_kind\": \"UseAfterFree\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n  \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm-gic-driver, checker=Lockbud\n// toolchain=nightly, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-08-21 4:31:16.471973077 +08:00:00\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.18\n   Compiling paste v1.0.15\n   Compiling once_cell v1.21.3\n   Compiling tock-registers v0.9.0\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling aarch64-cpu v10.0.0\n   Compiling log v0.4.27\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.9.2\n   Compiling quote v1.0.40\n   Compiling syn v2.0.106\n   Compiling enum_dispatch v0.3.13\n   Compiling arm-gic-driver v0.15.5 (/home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver)\nerror[E0658]: `let` expressions in this position are unstable\n   --> gic-driver/src/version/v2/mod.rs:724:20\n    |\n724 |                 if let Some(cpu_id) = cpu_id\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #53667 <https://github.com/rust-lang/rust/issues/53667> for more information\n    = help: add `#![feature(let_chains)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `arm-gic-driver` (lib) due to 1 previous error\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm-gic-driver, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-08-21 4:31:12.619236711 +08:00:00\n    Building arm-gic-driver v0.15.5 (current)\nerror: running cargo-doc on crate 'arm-gic-driver' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.18\n   Compiling thiserror v2.0.16\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arm-gic-driver v0.15.5\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver --features rdif,rdif-intc &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arm-gic-driver v0.15.5\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=arm-gic-driver, checker=Udeps\n// toolchain=nightly, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \n// timestamp=2025-08-21 4:32:22.51855477 +08:00:00\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.18\n   Compiling paste v1.0.15\n    Checking tock-registers v0.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-08-20T20:31:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=arm-gic-driver, checker=Udeps\ntoolchain=nightly, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target aarch64-unknown-none-softfloat \ntimestamp=2025-08-21 4:32:23.042303674 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.18\n   Compiling paste v1.0.15\n    Checking tock-registers v0.9.0\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `tock-registers` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=arm-gic-driver, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-08-21 4:32:14.573762285 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\ntock-registers  0.9.0    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=arm-gic-driver, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-08-21 4:31:13.535849437 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building arm-gic-driver v0.15.5 (current)\nerror: running cargo-doc on crate 'arm-gic-driver' failed with output:\n-----\n   Compiling proc-macro2 v1.0.101\n   Compiling unicode-ident v1.0.18\n   Compiling thiserror v2.0.16\n    Checking as-any v0.3.2\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none-softfloat` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none-softfloat`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `as-any` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate arm-gic-driver v0.15.5\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/rcore-os/arm-gic-driver/gic-driver --features rdif,rdif-intc &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate arm-gic-driver v0.15.5\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}