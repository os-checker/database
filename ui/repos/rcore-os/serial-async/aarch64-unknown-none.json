{
  "repo": {
    "user": "rcore-os",
    "repo": "serial-async"
  },
  "data": [
    {
      "user": "rcore-os",
      "repo": "serial-async",
      "pkg": "some-serial",
      "count": 11,
      "raw_reports": [
        {
          "file": "some-serial/src/ns16550.rs",
          "features": "",
          "count": 7,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused variable: `event`\n   --> some-serial/src/ns16550.rs:108:31\n    |\n108 |     fn clean_irq_event(&self, event: IrqEvent) {}\n    |                               ^^^^^ help: if this is intentional, prefix it with an underscore: `_event`\n    |\n    = note: `#[warn(unused_variables)]` (part of `#[warn(unused)]`) on by default\n\n",
              "warning: unused variable: `baud_rate`\n   --> some-serial/src/ns16550.rs:134:29\n    |\n134 |     fn set_baud_rate(&self, baud_rate: usize) -> Result<(), ConfigError> {\n    |                             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_baud_rate`\n\n",
              "warning: unused variable: `data_bits`\n   --> some-serial/src/ns16550.rs:138:29\n    |\n138 |     fn set_data_bits(&self, data_bits: DataBits) -> Result<(), ConfigError> {\n    |                             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_data_bits`\n\n",
              "warning: unused variable: `stop_bits`\n   --> some-serial/src/ns16550.rs:142:29\n    |\n142 |     fn set_stop_bits(&self, stop_bits: StopBits) -> Result<(), ConfigError> {\n    |                             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_stop_bits`\n\n",
              "warning: unused variable: `parity`\n   --> some-serial/src/ns16550.rs:146:26\n    |\n146 |     fn set_parity(&self, parity: Parity) -> Result<(), ConfigError> {\n    |                          ^^^^^^ help: if this is intentional, prefix it with an underscore: `_parity`\n\n",
              "warning: unused variable: `flow_control`\n   --> some-serial/src/ns16550.rs:150:32\n    |\n150 |     fn set_flow_control(&self, flow_control: FlowControl) -> Result<(), ConfigError> {\n    |                                ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_flow_control`\n\n",
              "warning: method `modify` is never used\n  --> some-serial/src/ns16550.rs:62:8\n   |\n43 | impl Impl {\n   | --------- method in this implementation\n...\n62 |     fn modify(&self, offset: usize, f: impl FnOnce(u8) -> u8) {\n   |        ^^^^^^\n   |\n   = note: `#[warn(dead_code)]` (part of `#[warn(unused)]`) on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_5/rcore-os/serial-async/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── rdrive 0.16.0\n│   └── sparreal-kernel 0.11.1\n│       ├── sparreal-rt 0.11.0\n│       │   └── bare-test 0.6.0\n│       │       └── some-serial 0.1.0\n│       └── bare-test 0.6.0\n└── arm-gic-driver 0.15.8\n    └── sparreal-rt 0.11.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 861,\n    \"last-commit\": \"32546e97dfa0ad59baab4166705156d8dd0fbfa8\",\n    \"last-updated\": \"2025-10-27T17:45:41+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 324\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=some-serial, checker=SemverChecks\n// toolchain=nightly, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_5/rcore-os/serial-async/some-serial\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-10-28 5:04:12.920011108 +08:00:00\n    Building some-serial v0.1.0 (current)\n       Built [   4.889s] (current)\n     Parsing some-serial v0.1.0 (current)\n      Parsed [   0.011s] (current)\n    Building some-serial v0.1.0 (baseline)\nerror: running cargo-doc on crate 'some-serial' failed with output:\n-----\n   Compiling proc-macro2 v1.0.103\n   Compiling unicode-ident v1.0.20\n   Compiling quote v1.0.41\n   Compiling thiserror v2.0.17\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n    Checking futures-sink v0.3.31\n    Checking futures-core v0.3.31\n    Checking lock_api v0.4.14\n    Checking tock-registers v0.9.0\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.16\n    Checking aarch64-cpu v10.0.0\n    Checking futures-util v0.3.31\n    Checking spin v0.10.0\n    Checking futures-channel v0.3.31\n    Checking tock-registers v0.10.0\n    Checking futures-io v0.3.31\n   Compiling syn v2.0.108\n    Checking as-any v0.3.2\n    Checking cfg-if v1.0.4\n    Checking mbarrier v0.1.3\n    Checking bitflags v2.10.0\n    Checking log v0.4.28\n    Checking futures v0.3.31\n    Checking aarch64-cpu-ext v0.1.4\n   Compiling thiserror-impl v2.0.17\n   Compiling async-trait v0.1.89\n   Compiling bare-test-macros v0.2.0\n   Compiling some-serial v0.1.0\n    Checking rdif-def v0.2.0\n    Checking dma-api v0.5.1\n    Checking rdif-base v0.7.0\n    Checking rdif-serial v0.5.4\n Documenting some-serial v0.1.0\nerror[E0432]: unresolved imports `rdif_serial::RegisterTransferError`, `rdif_serial::SerialRaw`\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/some-serial-0.1.0/src/pl011.rs:4:19\n  |\n4 | use rdif_serial::{RegisterTransferError as TransferError, Serial, SerialRaw};\n  |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^          ^^^^^^^^^\n  |                   |                                               |\n  |                   |                                               no `SerialRaw` in the root\n  |                   |                                               help: a similar name exists in the module: `Serial`\n  |                   no `RegisterTransferError` in the root\n\nerror[E0053]: method `line_status` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/some-serial-0.1.0/src/pl011.rs:470:20\n    |\n470 |     fn line_status(&self) -> LineStatus {\n    |                    ^^^^^ types differ in mutability\n    |\n    = note: expected signature `fn(&mut pl011::Pl011) -> rdif_serial::LineStatus`\n               found signature `fn(&pl011::Pl011) -> rdif_serial::LineStatus`\nhelp: change the self-receiver type to match the trait\n    |\n470 |     fn line_status(&mut self) -> LineStatus {\n    |                     +++\n\nerror[E0053]: method `set_base` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/some-serial-0.1.0/src/pl011.rs:501:34\n    |\n501 |     fn set_base(&mut self, base: NonNull<u8>) {\n    |                                  ^^^^^^^^^^^ expected `usize`, found `core::ptr::NonNull<u8>`\n    |\n    = note: expected signature `fn(&mut pl011::Pl011, usize)`\n               found signature `fn(&mut pl011::Pl011, core::ptr::NonNull<u8>)`\nhelp: change the parameter type to match the trait\n    |\n501 -     fn set_base(&mut self, base: NonNull<u8>) {\n501 +     fn set_base(&mut self, base: usize) {\n    |\n\nSome errors have detailed explanations: E0053, E0432.\nFor more information about an error, try `rustc --explain E0053`.\nerror: could not document `some-serial`\n\n-----\n\nerror: failed to build rustdoc for crate some-serial v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add some-serial@=0.1.0 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate some-serial v0.1.0\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=some-serial, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_5/rcore-os/serial-async/some-serial\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-10-28 5:04:48.687369041 +08:00:00\n\nName       Project  Compat  Latest  Kind         Platform\n----       -------  ------  ------  ----         --------\nbare-test  0.6.0    ---     0.7.0   Development  cfg(target_os = \"none\")\nbitflags   2.9.3    2.10.0  2.10.0  Normal       ---\nlog        0.4.27   0.4.28  0.4.28  Development  cfg(target_os = \"none\")\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=some-serial, checker=SemverChecks\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_5/rcore-os/serial-async/some-serial\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-10-28 5:04:24.381381097 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building some-serial v0.1.0 (current)\n       Built [   4.889s] (current)\n     Parsing some-serial v0.1.0 (current)\n      Parsed [   0.011s] (current)\n    Building some-serial v0.1.0 (baseline)\nerror: running cargo-doc on crate 'some-serial' failed with output:\n-----\n   Compiling proc-macro2 v1.0.103\n   Compiling unicode-ident v1.0.20\n   Compiling quote v1.0.41\n   Compiling thiserror v2.0.17\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n    Checking futures-sink v0.3.31\n    Checking futures-core v0.3.31\n    Checking lock_api v0.4.14\n    Checking tock-registers v0.9.0\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.16\n    Checking aarch64-cpu v10.0.0\n    Checking futures-util v0.3.31\n    Checking spin v0.10.0\n    Checking futures-channel v0.3.31\n    Checking tock-registers v0.10.0\n    Checking futures-io v0.3.31\n   Compiling syn v2.0.108\n    Checking as-any v0.3.2\n    Checking cfg-if v1.0.4\n    Checking mbarrier v0.1.3\n    Checking bitflags v2.10.0\n    Checking log v0.4.28\n    Checking futures v0.3.31\n    Checking aarch64-cpu-ext v0.1.4\n   Compiling thiserror-impl v2.0.17\n   Compiling async-trait v0.1.89\n   Compiling bare-test-macros v0.2.0\n   Compiling some-serial v0.1.0\n    Checking rdif-def v0.2.0\n    Checking dma-api v0.5.1\n    Checking rdif-base v0.7.0\n    Checking rdif-serial v0.5.4\n Documenting some-serial v0.1.0\nerror[E0432]: unresolved imports `rdif_serial::RegisterTransferError`, `rdif_serial::SerialRaw`\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/some-serial-0.1.0/src/pl011.rs:4:19\n  |\n4 | use rdif_serial::{RegisterTransferError as TransferError, Serial, SerialRaw};\n  |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^          ^^^^^^^^^\n  |                   |                                               |\n  |                   |                                               no `SerialRaw` in the root\n  |                   |                                               help: a similar name exists in the module: `Serial`\n  |                   no `RegisterTransferError` in the root\n\nerror[E0053]: method `line_status` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/some-serial-0.1.0/src/pl011.rs:470:20\n    |\n470 |     fn line_status(&self) -> LineStatus {\n    |                    ^^^^^ types differ in mutability\n    |\n    = note: expected signature `fn(&mut pl011::Pl011) -> rdif_serial::LineStatus`\n               found signature `fn(&pl011::Pl011) -> rdif_serial::LineStatus`\nhelp: change the self-receiver type to match the trait\n    |\n470 |     fn line_status(&mut self) -> LineStatus {\n    |                     +++\n\nerror[E0053]: method `set_base` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/some-serial-0.1.0/src/pl011.rs:501:34\n    |\n501 |     fn set_base(&mut self, base: NonNull<u8>) {\n    |                                  ^^^^^^^^^^^ expected `usize`, found `core::ptr::NonNull<u8>`\n    |\n    = note: expected signature `fn(&mut pl011::Pl011, usize)`\n               found signature `fn(&mut pl011::Pl011, core::ptr::NonNull<u8>)`\nhelp: change the parameter type to match the trait\n    |\n501 -     fn set_base(&mut self, base: NonNull<u8>) {\n501 +     fn set_base(&mut self, base: usize) {\n    |\n\nSome errors have detailed explanations: E0053, E0432.\nFor more information about an error, try `rustc --explain E0053`.\nerror: could not document `some-serial`\n\n-----\n\nerror: failed to build rustdoc for crate some-serial v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add some-serial@=0.1.0 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate some-serial v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "rcore-os",
      "repo": "serial-async",
      "pkg": "serial-async",
      "count": 1,
      "raw_reports": [
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=serial-async, checker=Outdated\ntoolchain=nightly, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_5/rcore-os/serial-async/serial-async\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-10-28 5:04:43.526178851 +08:00:00\n\nName         Project  Compat  Latest  Kind         Platform\n----         -------  ------  ------  ----         --------\nrdif-serial  0.1.3    ---     0.5.4   Normal       ---\nthiserror    2.0.16   2.0.17  2.0.17  Normal       ---\ntokio        1.47.1   1.48.0  1.48.0  Development  cfg(not(target_os = \"none\"))\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}