{"repo":{"user":"shilei-massclouds","repo":"driver_block"},"data":[{"user":"shilei-massclouds","repo":"driver_block","pkg":"rt_driver_block","count":6,"raw_reports":[{"file":"src/main.rs","count":4,"kinds":{"Unformatted":["file: /home/runner/check/batch_12/shilei-massclouds/driver_block/rt_driver_block/src/main.rs (original lines from 10 to 10)\n-use driver_common::{BaseDriverOps, DeviceType};\n","file: /home/runner/check/batch_12/shilei-massclouds/driver_block/rt_driver_block/src/main.rs (original lines from 12 to 12)\n+use driver_common::{BaseDriverOps, DeviceType};\n","file: /home/runner/check/batch_12/shilei-massclouds/driver_block/rt_driver_block/src/main.rs (original lines from 13 to 14)\n-const DISK_SIZE: usize = 0x1000;    // 4K\n-const BLOCK_SIZE: usize = 0x200;    // 512\n+const DISK_SIZE: usize = 0x1000; // 4K\n+const BLOCK_SIZE: usize = 0x200; // 512\n","file: /home/runner/check/batch_12/shilei-massclouds/driver_block/rt_driver_block/src/main.rs (original lines from 28 to 28)\n-    assert_eq!(disk.num_blocks() as usize, DISK_SIZE/BLOCK_SIZE);\n+    assert_eq!(disk.num_blocks() as usize, DISK_SIZE / BLOCK_SIZE);\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=rt_driver_block, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/driver_block/rt_driver_block\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling cfg-if v1.0.0\n   Compiling nb v1.1.0\n   Compiling bit_field v0.10.2\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling void v1.0.2\n   Compiling static_assertions v1.1.0\n   Compiling nb v0.1.3\n   Compiling riscv v0.10.1\n   Compiling sbi-spec v0.0.4\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.2.0\n   Compiling log v0.4.22\n   Compiling sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.6.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n[2024-11-22T10:31:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:31:11Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling const-default v1.0.0\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-22T10:31:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:31:11Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]},{"user":"shilei-massclouds","repo":"driver_block","pkg":"driver_block","count":3,"raw_reports":[{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=driver_block, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_12/shilei-massclouds/driver_block/driver_block\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling driver_common v0.1.0 (ssh://git@github.com/shilei-massclouds/driver_common#2e86ed35)\n   Compiling driver_block v0.1.0 (/home/runner/check/batch_12/shilei-massclouds/driver_block/driver_block)\nerror[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/driver_common-fa2dbf8873b7fe39/2e86ed3/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\nerror[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/driver_common-fa2dbf8873b7fe39/2e86ed3/driver_common/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\nFor more information about this error, try `rustc --explain E0049`.\nerror: could not compile `driver_block` (lib) due to 2 previous errors\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=driver_block, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_15/shilei-massclouds/driver_block/driver_block\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n     Parsing driver_block v0.1.0 (current)\nerror: running cargo-doc on crate driver_block failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate driver_block v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_15/shilei-massclouds/driver_block/driver_block --no-default-features --features bcm2835-sdhci,default,ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate driver_block v0.1.0\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=driver_block, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_15/shilei-massclouds/driver_block/driver_block\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n     Parsing driver_block v0.1.0 (current)\nerror: running cargo-doc on crate driver_block failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate driver_block v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_15/shilei-massclouds/driver_block/driver_block --no-default-features --features bcm2835-sdhci,default,ramdisk &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate driver_block v0.1.0\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}