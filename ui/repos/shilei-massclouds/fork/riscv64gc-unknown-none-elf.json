{
  "repo": {
    "user": "shilei-massclouds",
    "repo": "fork"
  },
  "data": [
    {
      "user": "shilei-massclouds",
      "repo": "fork",
      "pkg": "fork",
      "count": 6,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_8/shilei-massclouds/fork/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    ├── axhal 0.1.0\n    │   ├── taskctx 0.1.0\n    │   │   ├── wait_queue 0.1.0\n    │   │   │   ├── task 0.1.0\n    │   │   │   │   ├── rt_fork 0.1.0\n    │   │   │   │   ├── fork 0.1.0\n    │   │   │   │   │   └── rt_fork 0.1.0\n    │   │   │   │   └── fork 0.1.0\n    │   │   │   └── mutex 0.1.0\n    │   │   │       ├── mm 0.1.0\n    │   │   │       │   ├── task 0.1.0\n    │   │   │       │   ├── fork 0.1.0\n    │   │   │       │   └── fork 0.1.0\n    │   │   │       ├── filetable 0.1.0\n    │   │   │       │   └── task 0.1.0\n    │   │   │       ├── ext2fs 0.1.0\n    │   │   │       │   └── axmount 0.1.0\n    │   │   │       │       ├── rt_fork 0.1.0\n    │   │   │       │       └── fstree 0.1.0\n    │   │   │       │           ├── task 0.1.0\n    │   │   │       │           └── axfile 0.1.0\n    │   │   │       │               ├── mm 0.1.0\n    │   │   │       │               └── filetable 0.1.0\n    │   │   │       └── axmount 0.1.0\n    │   │   ├── task 0.1.0\n    │   │   ├── run_queue 0.1.0\n    │   │   │   ├── wait_queue 0.1.0\n    │   │   │   ├── task 0.1.0\n    │   │   │   ├── rt_fork 0.1.0\n    │   │   │   ├── preempt_guard 0.1.0\n    │   │   │   │   ├── task 0.1.0\n    │   │   │   │   └── spinpreempt 0.1.0\n    │   │   │   │       ├── task 0.1.0\n    │   │   │   │       ├── fstree 0.1.0\n    │   │   │   │       └── filetable 0.1.0\n    │   │   │   ├── pipefs 0.1.0\n    │   │   │   │   └── axfs_ramfs 0.1.0\n    │   │   │   │       └── axmount 0.1.0\n    │   │   │   ├── fork 0.1.0\n    │   │   │   ├── fork 0.1.0\n    │   │   │   └── axfs_devfs 0.1.0\n    │   │   │       ├── axmount 0.1.0\n    │   │   │       └── axfs_ramfs 0.1.0\n    │   │   ├── rt_fork 0.1.0\n    │   │   ├── preempt_guard 0.1.0\n    │   │   ├── mutex 0.1.0\n    │   │   ├── fork 0.1.0\n    │   │   └── fork 0.1.0\n    │   ├── task 0.1.0\n    │   ├── run_queue 0.1.0\n    │   ├── rt_fork 0.1.0\n    │   ├── page_table_entry 0.1.0\n    │   │   └── page_table 0.1.0\n    │   │       ├── taskctx 0.1.0\n    │   │       ├── rt_fork 0.1.0\n    │   │       ├── mm 0.1.0\n    │   │       └── fstree 0.1.0\n    │   ├── page_table 0.1.0\n    │   ├── mm 0.1.0\n    │   ├── fstree 0.1.0\n    │   ├── fork 0.1.0\n    │   ├── fork 0.1.0\n    │   ├── ext2fs 0.1.0\n    │   ├── axmount 0.1.0\n    │   ├── axfs_devfs 0.1.0\n    │   ├── axdriver 0.1.0\n    │   │   ├── fstree 0.1.0\n    │   │   ├── ext2fs 0.1.0\n    │   │   └── axmount 0.1.0\n    │   └── axalloc 0.1.0\n    │       ├── rt_fork 0.1.0\n    │       ├── page_table 0.1.0\n    │       ├── mm 0.1.0\n    │       ├── fstree 0.1.0\n    │       ├── fork 0.1.0\n    │       ├── fork 0.1.0\n    │       └── axdriver 0.1.0\n    └── arch_boot 0.1.0\n        └── rt_fork 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 772,\n    \"last-commit\": \"4584ad9a5ea16ce196317cf4d3593e974fb4a8a1\",\n    \"last-updated\": \"2025-05-02T10:23:27+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 101\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fork, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_8/shilei-massclouds/fork/fork\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-05 5:00:14.521560938 +08:00:00\n   Compiling log v0.4.27\n   Compiling cfg-if v1.0.0\n   Compiling nb v1.1.0\n   Compiling bit_field v0.10.2\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling bitflags v2.9.0\n   Compiling nb v0.1.3\n   Compiling static_assertions v1.1.0\n   Compiling void v1.0.2\n   Compiling riscv v0.10.1\n[2025-05-04T21:00:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T21:00:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embedded-hal v0.2.7\n   Compiling sbi-spec v0.0.4\n   Compiling critical-section v1.2.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling sbi-rt v0.0.2\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling const-default v1.0.0\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fork, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_8/shilei-massclouds/fork/fork\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-05 5:00:22.196487167 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking nb v1.1.0\n   Compiling toml_edit v0.19.15\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking bitflags v2.9.0\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.2.0\n   Compiling syn v1.0.109\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking const-default v1.0.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n21:00:29|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=fork, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_8/shilei-massclouds/fork/fork\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-05 4:59:37.90630248 +08:00:00\n    Building fork v0.1.0 (current)\nerror: running cargo-doc on crate 'fork' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.101\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not be installed\n  = help: consider downloading the target with `rustup target add riscv64gc-unknown-none-elf`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `log` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate fork v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_8/shilei-massclouds/fork/fork &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fork v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-04T21:00:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T21:00:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=fork, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_8/shilei-massclouds/fork/fork\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-05 4:59:52.13819708 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building fork v0.1.0 (current)\nerror: running cargo-doc on crate 'fork' failed with output:\n-----\n    Checking log v0.4.27\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.101\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not be installed\n  = help: consider downloading the target with `rustup target add riscv64gc-unknown-none-elf`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `log` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate fork v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_8/shilei-massclouds/fork/fork &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate fork v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "shilei-massclouds",
      "repo": "fork",
      "pkg": "rt_fork",
      "count": 4,
      "raw_reports": [
        {
          "file": "/home/runner/check/batch_8/shilei-massclouds/fork/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    ├── axhal 0.1.0\n    │   ├── taskctx 0.1.0\n    │   │   ├── wait_queue 0.1.0\n    │   │   │   ├── task 0.1.0\n    │   │   │   │   ├── rt_fork 0.1.0\n    │   │   │   │   ├── fork 0.1.0\n    │   │   │   │   │   └── rt_fork 0.1.0\n    │   │   │   │   └── fork 0.1.0\n    │   │   │   └── mutex 0.1.0\n    │   │   │       ├── mm 0.1.0\n    │   │   │       │   ├── task 0.1.0\n    │   │   │       │   ├── fork 0.1.0\n    │   │   │       │   └── fork 0.1.0\n    │   │   │       ├── filetable 0.1.0\n    │   │   │       │   └── task 0.1.0\n    │   │   │       ├── ext2fs 0.1.0\n    │   │   │       │   └── axmount 0.1.0\n    │   │   │       │       ├── rt_fork 0.1.0\n    │   │   │       │       └── fstree 0.1.0\n    │   │   │       │           ├── task 0.1.0\n    │   │   │       │           └── axfile 0.1.0\n    │   │   │       │               ├── mm 0.1.0\n    │   │   │       │               └── filetable 0.1.0\n    │   │   │       └── axmount 0.1.0\n    │   │   ├── task 0.1.0\n    │   │   ├── run_queue 0.1.0\n    │   │   │   ├── wait_queue 0.1.0\n    │   │   │   ├── task 0.1.0\n    │   │   │   ├── rt_fork 0.1.0\n    │   │   │   ├── preempt_guard 0.1.0\n    │   │   │   │   ├── task 0.1.0\n    │   │   │   │   └── spinpreempt 0.1.0\n    │   │   │   │       ├── task 0.1.0\n    │   │   │   │       ├── fstree 0.1.0\n    │   │   │   │       └── filetable 0.1.0\n    │   │   │   ├── pipefs 0.1.0\n    │   │   │   │   └── axfs_ramfs 0.1.0\n    │   │   │   │       └── axmount 0.1.0\n    │   │   │   ├── fork 0.1.0\n    │   │   │   ├── fork 0.1.0\n    │   │   │   └── axfs_devfs 0.1.0\n    │   │   │       ├── axmount 0.1.0\n    │   │   │       └── axfs_ramfs 0.1.0\n    │   │   ├── rt_fork 0.1.0\n    │   │   ├── preempt_guard 0.1.0\n    │   │   ├── mutex 0.1.0\n    │   │   ├── fork 0.1.0\n    │   │   └── fork 0.1.0\n    │   ├── task 0.1.0\n    │   ├── run_queue 0.1.0\n    │   ├── rt_fork 0.1.0\n    │   ├── page_table_entry 0.1.0\n    │   │   └── page_table 0.1.0\n    │   │       ├── taskctx 0.1.0\n    │   │       ├── rt_fork 0.1.0\n    │   │       ├── mm 0.1.0\n    │   │       └── fstree 0.1.0\n    │   ├── page_table 0.1.0\n    │   ├── mm 0.1.0\n    │   ├── fstree 0.1.0\n    │   ├── fork 0.1.0\n    │   ├── fork 0.1.0\n    │   ├── ext2fs 0.1.0\n    │   ├── axmount 0.1.0\n    │   ├── axfs_devfs 0.1.0\n    │   ├── axdriver 0.1.0\n    │   │   ├── fstree 0.1.0\n    │   │   ├── ext2fs 0.1.0\n    │   │   └── axmount 0.1.0\n    │   └── axalloc 0.1.0\n    │       ├── rt_fork 0.1.0\n    │       ├── page_table 0.1.0\n    │       ├── mm 0.1.0\n    │       ├── fstree 0.1.0\n    │       ├── fork 0.1.0\n    │       ├── fork 0.1.0\n    │       └── axdriver 0.1.0\n    └── arch_boot 0.1.0\n        └── rt_fork 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 772,\n    \"last-commit\": \"4584ad9a5ea16ce196317cf4d3593e974fb4a8a1\",\n    \"last-updated\": \"2025-05-02T10:23:27+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 101\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_fork, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_8/shilei-massclouds/fork/rt_fork\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-05 5:00:21.296928462 +08:00:00\n[2025-05-04T21:00:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T21:00:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling autocfg v1.4.0\n   Compiling scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_fork, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_8/shilei-massclouds/fork/rt_fork\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-05 5:00:50.842818759 +08:00:00\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.9.0\n   Compiling unicode-ident v1.0.18\n    Checking log v0.4.27\n   Compiling quote v1.0.40\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.101\n    Checking bit_field v0.10.2\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n    Checking critical-section v1.2.0\n    Checking bitflags v2.9.0\n    Checking sbi-rt v0.0.2\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n21:00:58|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-04T21:00:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-04T21:00:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}