{"repo":{"user":"shilei-massclouds","repo":"taskctx"},"data":[{"user":"shilei-massclouds","repo":"taskctx","pkg":"taskctx","count":21,"raw_reports":[{"file":"src/lib.rs","count":11,"kinds":{"Unformatted":["file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 10 to 13)\n-use core::ops::Deref;\n-use core::mem::ManuallyDrop;\n-use core::{alloc::Layout, cell::UnsafeCell, ptr::NonNull};\n-use core::sync::atomic::{AtomicUsize, AtomicU8, AtomicBool, Ordering};\n+use axhal::arch::write_page_table_root0;\n","file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 16 to 20)\n-use axhal::trap::{TRAPFRAME_SIZE, STACK_ALIGN};\n-use memory_addr::{align_up_4k, align_down, PAGE_SIZE_4K};\n-use spinbase::SpinNoIrq;\n-use axhal::arch::write_page_table_root0;\n-use page_table::paging::PageTable;\n+use axhal::trap::{STACK_ALIGN, TRAPFRAME_SIZE};\n+use core::mem::ManuallyDrop;\n+use core::ops::Deref;\n+use core::sync::atomic::{AtomicBool, AtomicU8, AtomicUsize, Ordering};\n+use core::{alloc::Layout, cell::UnsafeCell, ptr::NonNull};\n","file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 22 to 22)\n+use memory_addr::{align_down, align_up_4k, PAGE_SIZE_4K};\n+use page_table::paging::PageTable;\n+use spinbase::SpinNoIrq;\n","file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 25 to 26)\n-pub const TIF_SIGPENDING: usize     = 2;    // signal pending\n-pub const TIF_NOTIFY_SIGNAL: usize  = 9;    // signal notifications exist\n+pub const TIF_SIGPENDING: usize = 2; // signal pending\n+pub const TIF_NOTIFY_SIGNAL: usize = 9; // signal notifications exist\n","file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 82 to 83)\n-    tid:    Tid,\n-    tgid:   Tid,\n+    tid: Tid,\n+    tgid: Tid,\n","file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 87 to 88)\n-    pub real_parent:   Option<Arc<SchedInfo>>,\n-    pub group_leader:  Option<Arc<SchedInfo>>,\n+    pub real_parent: Option<Arc<SchedInfo>>,\n+    pub group_leader: Option<Arc<SchedInfo>>,\n","file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 164 to 164)\n-        self.flags.fetch_or(1<<flag, Ordering::Relaxed);\n+        self.flags.fetch_or(1 << flag, Ordering::Relaxed);\n","file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 169 to 169)\n-        self.flags.fetch_and(!(1<<flag), Ordering::Relaxed);\n+        self.flags.fetch_and(!(1 << flag), Ordering::Relaxed);\n","file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 302 to 304)\n-        unsafe {\n-            Arc::get_mut_unchecked(&mut self.0)\n-        }\n+        unsafe { Arc::get_mut_unchecked(&mut self.0) }\n","file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 308 to 308)\n-        info!(\"CurrentCtx::set_current {} -> {}...\", prev.tid(), next.tid());\n+        info!(\n+            \"CurrentCtx::set_current {} -> {}...\",\n+            prev.tid(),\n+            next.tid()\n+        );\n","file: /home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx/src/lib.rs (original lines from 335 to 336)\n-    debug!(\"###### switch_mm prev {} next {}; paddr {:#X}\",\n-        prev_mm_id, next_mm_id, next_pgd.lock().root_paddr());\n+    debug!(\n+        \"###### switch_mm prev {} next {}; paddr {:#X}\",\n+        prev_mm_id,\n+        next_mm_id,\n+        next_pgd.lock().root_paddr()\n+    );\n"]}},{"file":"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs","count":5,"kinds":{"Clippy(Error)":["error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n","error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n","error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n","error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n","error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=taskctx, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.6.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.6.0\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n    Checking log v0.4.22\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling syn v2.0.89\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.165\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n    Checking bit v0.1.1\n   Compiling unicode-width v0.1.14\n    Checking x2apic v0.4.3\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=taskctx, checker=Lockbud\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.6.0\n   Compiling bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling bitflags v2.6.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling volatile v0.4.6\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling x86_64 v0.14.12\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling syn v1.0.109\n   Compiling log v0.4.22\n   Compiling scopeguard v1.2.0\n   Compiling x86 v0.52.0\n[2024-11-26T09:43:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:43:32Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling paste v1.0.15\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling syn v2.0.89\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling libc v0.2.165\n   Compiling spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=taskctx, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/taskctx/taskctx\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.6.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.6.0\n   Compiling lock_api v0.4.12\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling syn v2.0.89\n   Compiling libc v0.2.165\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n09:43:44|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:43:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:43:32Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}