{
  "repo": {
    "user": "shilei-massclouds",
    "repo": "preempt_guard"
  },
  "data": [
    {
      "user": "shilei-massclouds",
      "repo": "preempt_guard",
      "pkg": "preempt_guard",
      "count": 24,
      "raw_reports": [
        {
          "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n",
              "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n",
              "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n",
              "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n",
              "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
            ],
            "Mirai": [
              "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=Clippy\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-06-28 11:23:57.66800142 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.1\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\n   Compiling autocfg v1.5.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.13\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking log v0.4.27\n   Compiling x86 v0.52.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.104\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.174\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking spin v0.9.8\n    Checking bit v0.1.1\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking x2apic v0.4.3\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) geiger",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=Geiger\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu geiger --output-format Ascii\n// timestamp=2025-06-28 11:24:55.474637849 +08:00:00\nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \nFailed to match (ignoring source) package: registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.219 \n     Removed 0 files\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.11\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/equivalent-5a88bd14f385988f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/serde-83de869712263d2f/build_script_build-83de869712263d2f.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libequivalent-5a88bd14f385988f.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/toml_datetime-999d9932efff2177.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libequivalent-5a88bd14f385988f.rlib\",\"emit\":\"link\"}\n   Compiling winnow v0.5.40\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/hashbrown-2573dfd5dc2f6be7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libtoml_datetime-999d9932efff2177.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/serde-83de869712263d2f/build_script_build-83de869712263d2f\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libtoml_datetime-999d9932efff2177.rlib\",\"emit\":\"link\"}\n   Compiling proc-macro2 v1.0.95\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/winnow-053300347d18f651.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/proc-macro2-4b131a9cc84a5cde/build_script_build-4b131a9cc84a5cde.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/proc-macro2-4b131a9cc84a5cde/build_script_build-4b131a9cc84a5cde\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/serde-21112e9198a34766.d\",\"emit\":\"dep-info\"}\n   Compiling unicode-ident v1.0.18\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/unicode_ident-1d1395cd7a8bd8da.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libunicode_ident-1d1395cd7a8bd8da.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libunicode_ident-1d1395cd7a8bd8da.rlib\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libhashbrown-2573dfd5dc2f6be7.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/proc_macro2-d52e1b0fd08ab4a5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libhashbrown-2573dfd5dc2f6be7.rlib\",\"emit\":\"link\"}\n   Compiling indexmap v2.10.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/indexmap-5117044413c7a0b8.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libproc_macro2-d52e1b0fd08ab4a5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libproc_macro2-d52e1b0fd08ab4a5.rlib\",\"emit\":\"link\"}\n    Checking bit_field v0.10.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/bit_field-1cb827c223858202.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libindexmap-5117044413c7a0b8.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libbit_field-1cb827c223858202.rmeta\",\"emit\":\"metadata\"}\n   Compiling quote v1.0.40\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libindexmap-5117044413c7a0b8.rlib\",\"emit\":\"link\"}\n    Checking cfg-if v1.0.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/cfg_if-375191e112da1984.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libcfg_if-375191e112da1984.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/quote-c8eb33032447793c.d\",\"emit\":\"dep-info\"}\n   Compiling rustversion v1.0.21\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/rustversion-0768b5f6fd8db8b7/build_script_build-0768b5f6fd8db8b7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libquote-c8eb33032447793c.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libquote-c8eb33032447793c.rlib\",\"emit\":\"link\"}\n    Checking bitflags v2.9.1\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/rustversion-0768b5f6fd8db8b7/build_script_build-0768b5f6fd8db8b7\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/bitflags-7c3693fde2daac8d.d\",\"emit\":\"dep-info\"}\n   Compiling autocfg v1.5.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/autocfg-3b49e0afa777d415.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libbitflags-7c3693fde2daac8d.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/rustversion-0cd5cbeb9eaceaca.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libautocfg-3b49e0afa777d415.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libwinnow-053300347d18f651.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libautocfg-3b49e0afa777d415.rlib\",\"emit\":\"link\"}\n   Compiling lock_api v0.4.13\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libwinnow-053300347d18f651.rlib\",\"emit\":\"link\"}\n   Compiling toml_edit v0.19.15\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/lock_api-f541141e107cd5c7/build_script_build-f541141e107cd5c7.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/toml_edit-b448c5b7e7e97eb1.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/lock_api-f541141e107cd5c7/build_script_build-f541141e107cd5c7\",\"emit\":\"link\"}\n    Checking bitflags v1.3.2\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/bitflags-e452f082b53802d5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libbitflags-e452f082b53802d5.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/librustversion-0cd5cbeb9eaceaca.so\",\"emit\":\"link\"}\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/volatile-9c3a5d9b8a46e4be.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libvolatile-9c3a5d9b8a46e4be.rmeta\",\"emit\":\"metadata\"}\n    Checking x86_64 v0.14.13\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/raw_cpuid-5f4ca47649f2be1c.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/x86_64-22a650480a550269.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libraw_cpuid-5f4ca47649f2be1c.rmeta\",\"emit\":\"metadata\"}\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/kernel_guard_base-36e94dbc8fbce48b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libkernel_guard_base-36e94dbc8fbce48b.rmeta\",\"emit\":\"metadata\"}\n   Compiling syn v1.0.109\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/syn-0f4391f70f9c1540/build_script_build-0f4391f70f9c1540.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libserde-21112e9198a34766.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libserde-21112e9198a34766.rlib\",\"emit\":\"link\"}\n   Compiling paste v1.0.15\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/syn-0f4391f70f9c1540/build_script_build-0f4391f70f9c1540\",\"emit\":\"link\"}\n    Checking log v0.4.27\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/paste-9245072c691d01c9/build_script_build-9245072c691d01c9.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/log-61ee3d839ec629a2.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libx86_64-22a650480a550269.rmeta\",\"emit\":\"metadata\"}\n    Checking scopeguard v1.2.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/scopeguard-f9f4a2b4ed0dfe04.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libscopeguard-f9f4a2b4ed0dfe04.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/liblog-61ee3d839ec629a2.rmeta\",\"emit\":\"metadata\"}\n   Compiling x86 v0.52.0\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/x86-cff6e8417eca5035/build_script_build-cff6e8417eca5035.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/paste-9245072c691d01c9/build_script_build-9245072c691d01c9\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/lock_api-4e210db0b18355ba.d\",\"emit\":\"dep-info\"}\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/x86-cff6e8417eca5035/build_script_build-cff6e8417eca5035\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/spinbase-33bd1e0137d2a99d.d\",\"emit\":\"dep-info\"}\n   Compiling syn v2.0.104\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libspinbase-33bd1e0137d2a99d.rmeta\",\"emit\":\"metadata\"}\n   Compiling libc v0.2.174\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/libc-642159acc7c13ff6/build_script_build-642159acc7c13ff6.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/liblock_api-4e210db0b18355ba.rmeta\",\"emit\":\"metadata\"}\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libtoml_edit-b448c5b7e7e97eb1.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/percpu2-77c92bfbd22e68c5/build_script_build-77c92bfbd22e68c5.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/percpu2-77c92bfbd22e68c5/build_script_build-77c92bfbd22e68c5\",\"emit\":\"link\"}\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/axerrno-e5fbd00f36db2fd0/build_script_build-e5fbd00f36db2fd0.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/syn-fff2c145fa39ae1a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/libc-642159acc7c13ff6/build_script_build-642159acc7c13ff6\",\"emit\":\"link\"}\n    Checking spin v0.9.8\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/spin-70fc69ed0e2b5023.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/axerrno-e5fbd00f36db2fd0/build_script_build-e5fbd00f36db2fd0\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libspin-70fc69ed0e2b5023.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/x86-71daba8f6c3e4c2a.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/syn-519ef6ba0e17e9fa.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libtoml_edit-b448c5b7e7e97eb1.rlib\",\"emit\":\"link\"}\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/axconfig-5d84f80140ed617b/build_script_build-5d84f80140ed617b.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libx86-71daba8f6c3e4c2a.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/paste-324a265740fab356.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/axconfig-5d84f80140ed617b/build_script_build-5d84f80140ed617b\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/axconfig-11be1f5e5f3dc6e2.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libaxconfig-11be1f5e5f3dc6e2.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libaxconfig-11be1f5e5f3dc6e2.rlib\",\"emit\":\"link\"}\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/early_console-5f646f9b8874dec0/build_script_build-5f646f9b8874dec0.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/early_console-5f646f9b8874dec0/build_script_build-5f646f9b8874dec0\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libsyn-519ef6ba0e17e9fa.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/axconfig-68b69274af03d150.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libaxconfig-68b69274af03d150.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libpaste-324a265740fab356.so\",\"emit\":\"link\"}\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n{\"$message_type\":\"diagnostic\",\"message\":\"unresolved imports `platform::getchar`, `platform::putchar`\",\"code\":{\"code\":\"E0432\",\"explanation\":\"An import was unresolved.\\n\\nErroneous code example:\\n\\n```compile_fail,E0432\\nuse something::Foo; // error: unresolved import `something::Foo`.\\n```\\n\\nIn Rust 2015, paths in `use` statements are relative to the crate root. To\\nimport items relative to the current and parent modules, use the `self::` and\\n`super::` prefixes, respectively.\\n\\nIn Rust 2018 or later, paths in `use` statements are relative to the current\\nmodule unless they begin with the name of a crate or a literal `crate::`, in\\nwhich case they start from the crate root. As in Rust 2015 code, the `self::`\\nand `super::` prefixes refer to the current and parent modules respectively.\\n\\nAlso verify that you didn't misspell the import name and that the import exists\\nin the module from where you tried to import it. Example:\\n\\n```\\nuse self::something::Foo; // Ok.\\n\\nmod something {\\n    pub struct Foo;\\n}\\n# fn main() {}\\n```\\n\\nIf you tried to use a module from an external crate and are using Rust 2015,\\nyou may have missed the `extern crate` declaration (which is usually placed in\\nthe crate root):\\n\\n```edition2015\\nextern crate core; // Required to use the `core` crate in Rust 2015.\\n\\nuse core::any;\\n# fn main() {}\\n```\\n\\nSince Rust 2018 the `extern crate` declaration is not required and\\nyou can instead just `use` it:\\n\\n```edition2018\\nuse core::any; // No extern crate required in Rust 2018.\\n# fn main() {}\\n```\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs\",\"byte_start\":248,\"byte_end\":255,\"line_start\":12,\"line_end\":12,\"column_start\":20,\"column_end\":27,\"is_primary\":true,\"text\":[{\"text\":\"pub use platform::{getchar, putchar};\",\"highlight_start\":20,\"highlight_end\":27}],\"label\":\"no `getchar` in `platform`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs\",\"byte_start\":257,\"byte_end\":264,\"line_start\":12,\"line_end\":12,\"column_start\":29,\"column_end\":36,\"is_primary\":true,\"text\":[{\"text\":\"pub use platform::{getchar, putchar};\",\"highlight_start\":29,\"highlight_end\":36}],\"label\":\"no `putchar` in `platform`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0432]\\u001b[0m\\u001b[0m\\u001b[1m: unresolved imports `platform::getchar`, `platform::putchar`\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m12\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0mpub use platform::{getchar, putchar};\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^\\u001b[0m\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mno `putchar` in `platform`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mno `getchar` in `platform`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"failed to resolve: unresolved import\",\"code\":{\"code\":\"E0433\",\"explanation\":\"An undeclared crate, module, or type was used.\\n\\nErroneous code example:\\n\\n```compile_fail,E0433\\nlet map = HashMap::new();\\n// error: failed to resolve: use of undeclared type `HashMap`\\n```\\n\\nPlease verify you didn't misspell the type/module's name or that you didn't\\nforget to import it:\\n\\n```\\nuse std::collections::HashMap; // HashMap has been imported.\\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\\n```\\n\\nIf you've expected to use a crate name:\\n\\n```compile_fail\\nuse ferris_wheel::BigO;\\n// error: failed to resolve: use of undeclared module or unlinked crate\\n```\\n\\nMake sure the crate has been added as a dependency in `Cargo.toml`.\\n\\nTo use a module from your current crate, add the `crate::` prefix to the path.\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs\",\"byte_start\":770,\"byte_end\":773,\"line_start\":31,\"line_end\":31,\"column_start\":69,\"column_end\":72,\"is_primary\":true,\"text\":[{\"text\":\"    pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\",\"highlight_start\":69,\"highlight_end\":72}],\"label\":\"unresolved import\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"a similar path exists\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs\",\"byte_start\":770,\"byte_end\":773,\"line_start\":31,\"line_end\":31,\"column_start\":69,\"column_end\":72,\"is_primary\":true,\"text\":[{\"text\":\"    pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\",\"highlight_start\":69,\"highlight_end\":72}],\"label\":null,\"suggested_replacement\":\"core::mem\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0433]\\u001b[0m\\u001b[0m\\u001b[1m: failed to resolve: unresolved import\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m31\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                                                     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                                                     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m|\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                                                     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9munresolved import\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                                                     \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mhelp: a similar path exists: `core::mem`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"cannot find function `console_init` in module `platform`\",\"code\":{\"code\":\"E0425\",\"explanation\":\"An unresolved name was used.\\n\\nErroneous code examples:\\n\\n```compile_fail,E0425\\nsomething_that_doesnt_exist::foo;\\n// error: unresolved name `something_that_doesnt_exist::foo`\\n\\n// or:\\n\\ntrait Foo {\\n    fn bar() {\\n        Self; // error: unresolved name `Self`\\n    }\\n}\\n\\n// or:\\n\\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\\n```\\n\\nPlease verify that the name wasn't misspelled and ensure that the\\nidentifier being referred to is valid for the given situation. Example:\\n\\n```\\nenum something_that_does_exist {\\n    Foo,\\n}\\n```\\n\\nOr:\\n\\n```\\nmod something_that_does_exist {\\n    pub static foo : i32 = 0i32;\\n}\\n\\nsomething_that_does_exist::foo; // ok!\\n```\\n\\nOr:\\n\\n```\\nlet unknown_variable = 12u32;\\nlet x = unknown_variable; // ok!\\n```\\n\\nIf the item is not defined in the current module, it must be imported using a\\n`use` statement, like so:\\n\\n```\\n# mod foo { pub fn bar() {} }\\n# fn main() {\\nuse foo::bar;\\nbar();\\n# }\\n```\\n\\nIf the item you are importing is not defined in some super-module of the\\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs\",\"byte_start\":357,\"byte_end\":369,\"line_start\":17,\"line_end\":17,\"column_start\":15,\"column_end\":27,\"is_primary\":true,\"text\":[{\"text\":\"    platform::console_init();\",\"highlight_start\":15,\"highlight_end\":27}],\"label\":\"not found in `platform`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0425]\\u001b[0m\\u001b[0m\\u001b[1m: cannot find function `console_init` in module `platform`\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m17\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m    platform::console_init();\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m               \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mnot found in `platform`\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"cannot find function `putchar` in module `platform`\",\"code\":{\"code\":\"E0425\",\"explanation\":\"An unresolved name was used.\\n\\nErroneous code examples:\\n\\n```compile_fail,E0425\\nsomething_that_doesnt_exist::foo;\\n// error: unresolved name `something_that_doesnt_exist::foo`\\n\\n// or:\\n\\ntrait Foo {\\n    fn bar() {\\n        Self; // error: unresolved name `Self`\\n    }\\n}\\n\\n// or:\\n\\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\\n```\\n\\nPlease verify that the name wasn't misspelled and ensure that the\\nidentifier being referred to is valid for the given situation. Example:\\n\\n```\\nenum something_that_does_exist {\\n    Foo,\\n}\\n```\\n\\nOr:\\n\\n```\\nmod something_that_does_exist {\\n    pub static foo : i32 = 0i32;\\n}\\n\\nsomething_that_does_exist::foo; // ok!\\n```\\n\\nOr:\\n\\n```\\nlet unknown_variable = 12u32;\\nlet x = unknown_variable; // ok!\\n```\\n\\nIf the item is not defined in the current module, it must be imported using a\\n`use` statement, like so:\\n\\n```\\n# mod foo { pub fn bar() {} }\\n# fn main() {\\nuse foo::bar;\\nbar();\\n# }\\n```\\n\\nIf the item you are importing is not defined in some super-module of the\\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs\",\"byte_start\":493,\"byte_end\":500,\"line_start\":23,\"line_end\":23,\"column_start\":19,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"        platform::putchar(*c);\",\"highlight_start\":19,\"highlight_end\":26}],\"label\":\"not found in `platform`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"consider importing this function\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs\",\"byte_start\":229,\"byte_end\":229,\"line_start\":12,\"line_end\":12,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"pub use platform::{getchar, putchar};\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":\"use crate::platform::console::putchar;\\n\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"if you import `putchar`, refer to it directly\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs\",\"byte_start\":483,\"byte_end\":493,\"line_start\":23,\"line_end\":23,\"column_start\":9,\"column_end\":19,\"is_primary\":true,\"text\":[{\"text\":\"        platform::putchar(*c);\",\"highlight_start\":9,\"highlight_end\":19}],\"label\":null,\"suggested_replacement\":\"\",\"suggestion_applicability\":\"Unspecified\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0425]\\u001b[0m\\u001b[0m\\u001b[1m: cannot find function `putchar` in module `platform`\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m23\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        platform::putchar(*c);\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mnot found in `platform`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: consider importing this function\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m12\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[38;5;10m+ use crate::platform::console::putchar;\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: if you import `putchar`, refer to it directly\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m23\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[38;5;9m- \\u001b[0m\\u001b[0m        \\u001b[0m\\u001b[0m\\u001b[38;5;9mplatform::\\u001b[0m\\u001b[0mputchar(*c);\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m23\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[38;5;10m+ \\u001b[0m\\u001b[0m        putchar(*c);\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"cannot find function `getchar` in module `platform`\",\"code\":{\"code\":\"E0425\",\"explanation\":\"An unresolved name was used.\\n\\nErroneous code examples:\\n\\n```compile_fail,E0425\\nsomething_that_doesnt_exist::foo;\\n// error: unresolved name `something_that_doesnt_exist::foo`\\n\\n// or:\\n\\ntrait Foo {\\n    fn bar() {\\n        Self; // error: unresolved name `Self`\\n    }\\n}\\n\\n// or:\\n\\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\\n```\\n\\nPlease verify that the name wasn't misspelled and ensure that the\\nidentifier being referred to is valid for the given situation. Example:\\n\\n```\\nenum something_that_does_exist {\\n    Foo,\\n}\\n```\\n\\nOr:\\n\\n```\\nmod something_that_does_exist {\\n    pub static foo : i32 = 0i32;\\n}\\n\\nsomething_that_does_exist::foo; // ok!\\n```\\n\\nOr:\\n\\n```\\nlet unknown_variable = 12u32;\\nlet x = unknown_variable; // ok!\\n```\\n\\nIf the item is not defined in the current module, it must be imported using a\\n`use` statement, like so:\\n\\n```\\n# mod foo { pub fn bar() {} }\\n# fn main() {\\nuse foo::bar;\\nbar();\\n# }\\n```\\n\\nIf the item you are importing is not defined in some super-module of the\\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\\n\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs\",\"byte_start\":702,\"byte_end\":709,\"line_start\":31,\"line_end\":31,\"column_start\":36,\"column_end\":43,\"is_primary\":true,\"text\":[{\"text\":\"        if let Some(c) = platform::getchar() {\",\"highlight_start\":36,\"highlight_end\":43}],\"label\":\"not found in `platform`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"consider importing this function\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs\",\"byte_start\":229,\"byte_end\":229,\"line_start\":12,\"line_end\":12,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"pub use platform::{getchar, putchar};\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":\"use crate::platform::console::getchar;\\n\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"if you import `getchar`, refer to it directly\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs\",\"byte_start\":692,\"byte_end\":702,\"line_start\":31,\"line_end\":31,\"column_start\":26,\"column_end\":36,\"is_primary\":true,\"text\":[{\"text\":\"        if let Some(c) = platform::getchar() {\",\"highlight_start\":26,\"highlight_end\":36}],\"label\":null,\"suggested_replacement\":\"\",\"suggestion_applicability\":\"Unspecified\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0425]\\u001b[0m\\u001b[0m\\u001b[1m: cannot find function `getchar` in module `platform`\\u001b[0m\\n\\u001b[0m  \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m--> \\u001b[0m\\u001b[0m/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m31\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m        if let Some(c) = platform::getchar() {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\u001b[0m                                    \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9m^^^^^^^\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;9mnot found in `platform`\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: consider importing this function\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m12\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[38;5;10m+ use crate::platform::console::getchar;\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;14mhelp\\u001b[0m\\u001b[0m: if you import `getchar`, refer to it directly\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m31\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[38;5;9m- \\u001b[0m\\u001b[0m        if let Some(c) = \\u001b[0m\\u001b[0m\\u001b[38;5;9mplatform::\\u001b[0m\\u001b[0mgetchar() {\\u001b[0m\\n\\u001b[0m\\u001b[1m\\u001b[38;5;12m31\\u001b[0m\\u001b[0m \\u001b[0m\\u001b[0m\\u001b[38;5;10m+ \\u001b[0m\\u001b[0m        if let Some(c) = getchar() {\\u001b[0m\\n\\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/early_console-beed7afe40a70795.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/axhal-bd9e6ca1535d3316/build_script_build-bd9e6ca1535d3316.d\",\"emit\":\"dep-info\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"aborting due to 5 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to 5 previous errors\\u001b[0m\\n\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"Some errors have detailed explanations: E0425, E0432, E0433.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1mSome errors have detailed explanations: E0425, E0432, E0433.\\u001b[0m\\n\"}\n{\"$message_type\":\"diagnostic\",\"message\":\"For more information about an error, try `rustc --explain E0425`.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"\\u001b[0m\\u001b[1mFor more information about an error, try `rustc --explain E0425`.\\u001b[0m\\n\"}\nerror: could not compile `early_console` (lib)\n\nCaused by:\n  process didn't exit successfully: `/home/runner/.rustup/toolchains/nightly-2025-06-26-x86_64-unknown-linux-gnu/bin/rustc --crate-name early_console --edition=2021 /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=5d3ddce1766d54e9 -C extra-filename=-beed7afe40a70795 --out-dir /home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps -L dependency=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps --extern axconfig=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libaxconfig-68b69274af03d150.rmeta --extern bitflags=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libbitflags-7c3693fde2daac8d.rmeta --extern cfg_if=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libcfg_if-375191e112da1984.rmeta --extern log=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/liblog-61ee3d839ec629a2.rmeta --extern spinbase=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libspinbase-33bd1e0137d2a99d.rmeta --extern x86_64=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libx86_64-22a650480a550269.rmeta --cap-lints allow --cfg 'platform=\"dummy\"' --cfg 'platform_family=\"dummy\"'` (exit status: 1)\nwarning: build failed, waiting for other jobs to finish...\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/build/axhal-bd9e6ca1535d3316/build_script_build-bd9e6ca1535d3316\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libsyn-519ef6ba0e17e9fa.rlib\",\"emit\":\"link\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libsyn-fff2c145fa39ae1a.rmeta\",\"emit\":\"metadata\"}\n{\"$message_type\":\"artifact\",\"artifact\":\"/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard/target/debug/deps/libsyn-fff2c145fa39ae1a.rlib\",\"emit\":\"link\"}\nerror: Cargo(\"1 job failed\")\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=Lockbud\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:24:25.612210268 +08:00:00\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling indexmap v2.10.0\n   Compiling bit_field v0.10.2\n   Compiling quote v1.0.40\n   Compiling cfg-if v1.0.1\n   Compiling rustversion v1.0.21\n   Compiling autocfg v1.5.0\n   Compiling bitflags v2.9.1\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.13\n   Compiling bitflags v1.3.2\n   Compiling volatile v0.4.6\n   Compiling raw-cpuid v10.7.0\n   Compiling x86_64 v0.14.13\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling syn v1.0.109\n   Compiling log v0.4.27\n   Compiling paste v1.0.15\n[2025-06-28T03:24:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:24:29Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling scopeguard v1.2.0\n   Compiling x86 v0.52.0\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.104\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.174\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=Mirai\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:24:18.465089283 +08:00:00\n   Compiling hashbrown v0.15.4\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.1\n   Compiling rustversion v1.0.21\n   Compiling autocfg v1.5.0\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.9.1\n   Compiling lock_api v0.4.13\n    Checking volatile v0.4.6\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling x86 v0.52.0\n    Checking log v0.4.27\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.104\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling libc v0.2.174\n    Checking spin v0.9.8\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=Rapx\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:24:34.203595988 +08:00:00\n   Compiling hashbrown v0.15.4\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.1\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\n   Compiling autocfg v1.5.0\n   Compiling lock_api v0.4.13\n    Checking volatile v0.4.6\n    Checking bitflags v1.3.2\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking scopeguard v1.2.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking log v0.4.27\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n03:24:39|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:24:04.662777764 +08:00:00\n    Building preempt_guard v0.1.0 (current)\nerror: running cargo-doc on crate 'preempt_guard' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.1\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\n   Compiling autocfg v1.5.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.13\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n    Checking log v0.4.27\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.104\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling libc v0.2.174\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling base64 v0.13.1\n    Checking bit v0.1.1\n   Compiling unicode-width v0.1.14\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate preempt_guard v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate preempt_guard v0.1.0\n"
            ]
          }
        },
        {
          "file": "(virtual) udeps",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=preempt_guard, checker=Udeps\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \n// timestamp=2025-06-28 11:25:01.483191713 +08:00:00\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.1\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\n   Compiling autocfg v1.5.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.13\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n    Checking scopeguard v1.2.0\n    Checking log v0.4.27\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.104\n   Compiling libc v0.2.174\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling base64 v0.13.1\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\n    Checking bit v0.1.1\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── taskctx 0.1.0\n        │   ├── run_queue 0.1.0\n        │   │   └── preempt_guard 0.1.0\n        │   └── preempt_guard 0.1.0\n        ├── run_queue 0.1.0\n        ├── page_table_entry 0.1.0\n        │   └── page_table 0.1.0\n        │       └── taskctx 0.1.0\n        ├── page_table 0.1.0\n        └── axalloc 0.1.0\n            └── page_table 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 787,\n    \"last-commit\": \"7573f55ba337263f61167dbb0ea926cdc7c8eb5d\",\n    \"last-updated\": \"2025-06-17T11:04:25+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 71\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-06-28T03:24:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-06-28T03:24:29Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[Udeps] Unused dependencies",
          "features": "",
          "count": 1,
          "kinds": {
            "Unused Deps": [
              "pkg=preempt_guard, checker=Udeps\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu udeps --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 11:25:08.216752568 +08:00:00\n\n\nstdout:\n\nstderr:\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling toml_datetime v0.6.11\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.1\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\n   Compiling autocfg v1.5.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.13\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n    Checking scopeguard v1.2.0\n    Checking log v0.4.27\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.104\n   Compiling libc v0.2.174\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling base64 v0.13.1\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\n    Checking bit v0.1.1\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=preempt_guard, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-06-28 11:24:18.00430484 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building preempt_guard v0.1.0 (current)\nerror: running cargo-doc on crate 'preempt_guard' failed with output:\n-----\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.4\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.11\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.10.0\n   Compiling unicode-ident v1.0.18\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.40\n    Checking cfg-if v1.0.1\n   Compiling rustversion v1.0.21\n    Checking bitflags v2.9.1\n   Compiling autocfg v1.5.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.13\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n    Checking log v0.4.27\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.104\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling libc v0.2.174\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling base64 v0.13.1\n    Checking bit v0.1.1\n   Compiling unicode-width v0.1.14\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate preempt_guard v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_9/shilei-massclouds/preempt_guard/preempt_guard --features default &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate preempt_guard v0.1.0\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}