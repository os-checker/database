{
  "repo": {
    "user": "shilei-massclouds",
    "repo": "mmap"
  },
  "data": [
    {
      "user": "shilei-massclouds",
      "repo": "mmap",
      "pkg": "mmap",
      "count": 117,
      "raw_reports": [
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 105,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 7 to 7)\n-use axerrno::{LinuxResult, LinuxError, linux_err};\n+use axerrno::{linux_err, LinuxError, LinuxResult};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 9 to 9)\n+use axhal::arch::flush_tlb;\n+use axhal::arch::user_mode;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 10 to 10)\n+use axhal::arch::TASK_SIZE;\n+#[cfg(target_arch = \"riscv64\")]\n+use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 11 to 11)\n-use axhal::arch::user_mode;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 13 to 13)\n+use capability::Cap;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 14 to 14)\n-use memory_addr::{align_up_4k, align_down_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n+use memory_addr::{align_down_4k, align_up_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 17 to 19)\n-use axhal::arch::TASK_SIZE;\n-use mm::{VM_READ, VM_WRITE, VM_EXEC, VM_SHARED, VM_MAYSHARE};\n-use mm::{VM_MAYREAD, VM_MAYWRITE, VM_MAYEXEC};\n+use mm::{VM_EXEC, VM_MAYSHARE, VM_READ, VM_SHARED, VM_WRITE};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 21 to 21)\n+use mm::{VM_MAYEXEC, VM_MAYREAD, VM_MAYWRITE};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 22 to 23)\n-use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n-#[cfg(target_arch = \"riscv64\")]\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 25 to 26)\n-use capability::Cap;\n-use axhal::arch::flush_tlb;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 58 to 58)\n-const MAP_EXECUTABLE: usize= 0x1000;\n+const MAP_EXECUTABLE: usize = 0x1000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 60 to 60)\n-const MAP_LOCKED: usize    = 0x2000;\n+const MAP_LOCKED: usize = 0x2000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 76 to 76)\n-const MAP_STACK: usize =    0x020000;\n+const MAP_STACK: usize = 0x020000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 78 to 78)\n-const MAP_HUGETLB: usize =  0x040000;\n+const MAP_HUGETLB: usize = 0x040000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 88 to 90)\n-pub const VM_FAULT_OOM:     usize = 0x000001;\n-pub const VM_FAULT_SIGBUS:  usize = 0x000002;\n-pub const VM_FAULT_HWPOISON:usize = 0x000010;\n+pub const VM_FAULT_OOM: usize = 0x000001;\n+pub const VM_FAULT_SIGBUS: usize = 0x000002;\n+pub const VM_FAULT_HWPOISON: usize = 0x000010;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 93 to 93)\n-pub const VM_FAULT_FALLBACK:usize = 0x000800;\n+pub const VM_FAULT_FALLBACK: usize = 0x000800;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 95 to 97)\n-pub const VM_FAULT_ERROR: usize =\n-    VM_FAULT_OOM | VM_FAULT_SIGBUS | VM_FAULT_SIGSEGV | VM_FAULT_HWPOISON |\n-    VM_FAULT_HWPOISON_LARGE | VM_FAULT_FALLBACK;\n+pub const VM_FAULT_ERROR: usize = VM_FAULT_OOM\n+    | VM_FAULT_SIGBUS\n+    | VM_FAULT_SIGSEGV\n+    | VM_FAULT_HWPOISON\n+    | VM_FAULT_HWPOISON_LARGE\n+    | VM_FAULT_FALLBACK;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 99 to 103)\n-const LEGACY_MAP_MASK: usize =\n-    MAP_SHARED | MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS | MAP_DENYWRITE |\n-    MAP_EXECUTABLE | MAP_UNINITIALIZED | MAP_GROWSDOWN | MAP_LOCKED | MAP_NORESERVE |\n-    MAP_POPULATE | MAP_NONBLOCK | MAP_STACK | MAP_HUGETLB | MAP_32BIT |\n-    MAP_HUGE_2MB | MAP_HUGE_1GB;\n+const LEGACY_MAP_MASK: usize = MAP_SHARED\n+    | MAP_PRIVATE\n+    | MAP_FIXED\n+    | MAP_ANONYMOUS\n+    | MAP_DENYWRITE\n+    | MAP_EXECUTABLE\n+    | MAP_UNINITIALIZED\n+    | MAP_GROWSDOWN\n+    | MAP_LOCKED\n+    | MAP_NORESERVE\n+    | MAP_POPULATE\n+    | MAP_NONBLOCK\n+    | MAP_STACK\n+    | MAP_HUGETLB\n+    | MAP_32BIT\n+    | MAP_HUGE_2MB\n+    | MAP_HUGE_1GB;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 193 to 193)\n-    info!(\"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\", va, offset, flags, prot);\n+    info!(\n+        \"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\",\n+        va, offset, flags, prot\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 238 to 239)\n-    let mut vm_flags = calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags)\n-        | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n+    let mut vm_flags =\n+        calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags) | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 298 to 302)\n-    locked_mm.vmas.iter().find(|(_, vma)| {\n-        in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n-    }).map(|(key, _)| {\n-        *key\n-    })\n+    locked_mm\n+        .vmas\n+        .iter()\n+        .find(|(_, vma)| {\n+            in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n+        })\n+        .map(|(key, _)| *key)\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 352 to 352)\n-                vma.vm_start, vma.vm_end, gap_end - len\n+                vma.vm_start,\n+                vma.vm_end,\n+                gap_end - len\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 371 to 371)\n-    va: usize, cause: usize, epc: usize, fixup: &mut usize,\n+    va: usize,\n+    cause: usize,\n+    epc: usize,\n+    fixup: &mut usize,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 386 to 387)\n-        info!(\"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n-            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff);\n+        info!(\n+            \"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n+            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff\n+        );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 443 to 444)\n-            locked_mm.map_region(va, *pa, PAGE_SIZE_4K, 1)\n-                .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+            locked_mm\n+                .map_region(va, *pa, PAGE_SIZE_4K, 1)\n+                .unwrap_or_else(|e| panic!(\"{:?}\", e));\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 467 to 468)\n-    locked_mm.map_region(va, pa, PAGE_SIZE_4K, 1)\n-        .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+    locked_mm\n+        .map_region(va, pa, PAGE_SIZE_4K, 1)\n+        .unwrap_or_else(|e| panic!(\"{:?}\", e));\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 548 to 550)\n-        EXC_INST_PAGE_FAULT => {\n-            (vma.vm_flags & VM_EXEC) == 0\n-        },\n+        EXC_INST_PAGE_FAULT => (vma.vm_flags & VM_EXEC) == 0,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 554 to 557)\n-        },\n-        EXC_STORE_PAGE_FAULT => {\n-            (vma.vm_flags & VM_WRITE) == 0\n-        },\n+        }\n+        EXC_STORE_PAGE_FAULT => (vma.vm_flags & VM_WRITE) == 0,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 598 to 598)\n-        _mmap(brk, offset, PROT_READ | PROT_WRITE, MAP_FIXED | MAP_ANONYMOUS, None, 0).unwrap();\n+        _mmap(\n+            brk,\n+            offset,\n+            PROT_READ | PROT_WRITE,\n+            MAP_FIXED | MAP_ANONYMOUS,\n+            None,\n+            0,\n+        )\n+        .unwrap();\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 659 to 659)\n-    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE-va {\n+    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE - va {\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 708 to 708)\n-    oaddr: usize, mut osize: usize, mut nsize: usize, flags: usize, naddr: usize\n+    oaddr: usize,\n+    mut osize: usize,\n+    mut nsize: usize,\n+    flags: usize,\n+    naddr: usize,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 716 to 717)\n-    error!(\"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n-        oaddr, osize, nsize, flags, naddr);\n+    error!(\n+        \"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n+        oaddr, osize, nsize, flags, naddr\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 723 to 723)\n-    assert_eq!(oaddr+osize, area.vm_end);\n+    assert_eq!(oaddr + osize, area.vm_end);\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 753 to 753)\n-        },\n+        }\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 756 to 756)\n-        },\n+        }\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 7 to 7)\n-use axerrno::{LinuxResult, LinuxError, linux_err};\n+use axerrno::{linux_err, LinuxError, LinuxResult};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 9 to 9)\n+use axhal::arch::flush_tlb;\n+use axhal::arch::user_mode;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 10 to 10)\n+use axhal::arch::TASK_SIZE;\n+#[cfg(target_arch = \"riscv64\")]\n+use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 11 to 11)\n-use axhal::arch::user_mode;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 13 to 13)\n+use capability::Cap;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 14 to 14)\n-use memory_addr::{align_up_4k, align_down_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n+use memory_addr::{align_down_4k, align_up_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 17 to 19)\n-use axhal::arch::TASK_SIZE;\n-use mm::{VM_READ, VM_WRITE, VM_EXEC, VM_SHARED, VM_MAYSHARE};\n-use mm::{VM_MAYREAD, VM_MAYWRITE, VM_MAYEXEC};\n+use mm::{VM_EXEC, VM_MAYSHARE, VM_READ, VM_SHARED, VM_WRITE};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 21 to 21)\n+use mm::{VM_MAYEXEC, VM_MAYREAD, VM_MAYWRITE};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 22 to 23)\n-use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n-#[cfg(target_arch = \"riscv64\")]\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 25 to 26)\n-use capability::Cap;\n-use axhal::arch::flush_tlb;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 58 to 58)\n-const MAP_EXECUTABLE: usize= 0x1000;\n+const MAP_EXECUTABLE: usize = 0x1000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 60 to 60)\n-const MAP_LOCKED: usize    = 0x2000;\n+const MAP_LOCKED: usize = 0x2000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 76 to 76)\n-const MAP_STACK: usize =    0x020000;\n+const MAP_STACK: usize = 0x020000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 78 to 78)\n-const MAP_HUGETLB: usize =  0x040000;\n+const MAP_HUGETLB: usize = 0x040000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 88 to 90)\n-pub const VM_FAULT_OOM:     usize = 0x000001;\n-pub const VM_FAULT_SIGBUS:  usize = 0x000002;\n-pub const VM_FAULT_HWPOISON:usize = 0x000010;\n+pub const VM_FAULT_OOM: usize = 0x000001;\n+pub const VM_FAULT_SIGBUS: usize = 0x000002;\n+pub const VM_FAULT_HWPOISON: usize = 0x000010;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 93 to 93)\n-pub const VM_FAULT_FALLBACK:usize = 0x000800;\n+pub const VM_FAULT_FALLBACK: usize = 0x000800;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 95 to 97)\n-pub const VM_FAULT_ERROR: usize =\n-    VM_FAULT_OOM | VM_FAULT_SIGBUS | VM_FAULT_SIGSEGV | VM_FAULT_HWPOISON |\n-    VM_FAULT_HWPOISON_LARGE | VM_FAULT_FALLBACK;\n+pub const VM_FAULT_ERROR: usize = VM_FAULT_OOM\n+    | VM_FAULT_SIGBUS\n+    | VM_FAULT_SIGSEGV\n+    | VM_FAULT_HWPOISON\n+    | VM_FAULT_HWPOISON_LARGE\n+    | VM_FAULT_FALLBACK;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 99 to 103)\n-const LEGACY_MAP_MASK: usize =\n-    MAP_SHARED | MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS | MAP_DENYWRITE |\n-    MAP_EXECUTABLE | MAP_UNINITIALIZED | MAP_GROWSDOWN | MAP_LOCKED | MAP_NORESERVE |\n-    MAP_POPULATE | MAP_NONBLOCK | MAP_STACK | MAP_HUGETLB | MAP_32BIT |\n-    MAP_HUGE_2MB | MAP_HUGE_1GB;\n+const LEGACY_MAP_MASK: usize = MAP_SHARED\n+    | MAP_PRIVATE\n+    | MAP_FIXED\n+    | MAP_ANONYMOUS\n+    | MAP_DENYWRITE\n+    | MAP_EXECUTABLE\n+    | MAP_UNINITIALIZED\n+    | MAP_GROWSDOWN\n+    | MAP_LOCKED\n+    | MAP_NORESERVE\n+    | MAP_POPULATE\n+    | MAP_NONBLOCK\n+    | MAP_STACK\n+    | MAP_HUGETLB\n+    | MAP_32BIT\n+    | MAP_HUGE_2MB\n+    | MAP_HUGE_1GB;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 193 to 193)\n-    info!(\"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\", va, offset, flags, prot);\n+    info!(\n+        \"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\",\n+        va, offset, flags, prot\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 238 to 239)\n-    let mut vm_flags = calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags)\n-        | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n+    let mut vm_flags =\n+        calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags) | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 298 to 302)\n-    locked_mm.vmas.iter().find(|(_, vma)| {\n-        in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n-    }).map(|(key, _)| {\n-        *key\n-    })\n+    locked_mm\n+        .vmas\n+        .iter()\n+        .find(|(_, vma)| {\n+            in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n+        })\n+        .map(|(key, _)| *key)\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 352 to 352)\n-                vma.vm_start, vma.vm_end, gap_end - len\n+                vma.vm_start,\n+                vma.vm_end,\n+                gap_end - len\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 371 to 371)\n-    va: usize, cause: usize, epc: usize, fixup: &mut usize,\n+    va: usize,\n+    cause: usize,\n+    epc: usize,\n+    fixup: &mut usize,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 386 to 387)\n-        info!(\"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n-            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff);\n+        info!(\n+            \"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n+            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff\n+        );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 443 to 444)\n-            locked_mm.map_region(va, *pa, PAGE_SIZE_4K, 1)\n-                .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+            locked_mm\n+                .map_region(va, *pa, PAGE_SIZE_4K, 1)\n+                .unwrap_or_else(|e| panic!(\"{:?}\", e));\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 467 to 468)\n-    locked_mm.map_region(va, pa, PAGE_SIZE_4K, 1)\n-        .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+    locked_mm\n+        .map_region(va, pa, PAGE_SIZE_4K, 1)\n+        .unwrap_or_else(|e| panic!(\"{:?}\", e));\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 548 to 550)\n-        EXC_INST_PAGE_FAULT => {\n-            (vma.vm_flags & VM_EXEC) == 0\n-        },\n+        EXC_INST_PAGE_FAULT => (vma.vm_flags & VM_EXEC) == 0,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 554 to 557)\n-        },\n-        EXC_STORE_PAGE_FAULT => {\n-            (vma.vm_flags & VM_WRITE) == 0\n-        },\n+        }\n+        EXC_STORE_PAGE_FAULT => (vma.vm_flags & VM_WRITE) == 0,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 598 to 598)\n-        _mmap(brk, offset, PROT_READ | PROT_WRITE, MAP_FIXED | MAP_ANONYMOUS, None, 0).unwrap();\n+        _mmap(\n+            brk,\n+            offset,\n+            PROT_READ | PROT_WRITE,\n+            MAP_FIXED | MAP_ANONYMOUS,\n+            None,\n+            0,\n+        )\n+        .unwrap();\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 659 to 659)\n-    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE-va {\n+    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE - va {\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 708 to 708)\n-    oaddr: usize, mut osize: usize, mut nsize: usize, flags: usize, naddr: usize\n+    oaddr: usize,\n+    mut osize: usize,\n+    mut nsize: usize,\n+    flags: usize,\n+    naddr: usize,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 716 to 717)\n-    error!(\"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n-        oaddr, osize, nsize, flags, naddr);\n+    error!(\n+        \"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n+        oaddr, osize, nsize, flags, naddr\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 723 to 723)\n-    assert_eq!(oaddr+osize, area.vm_end);\n+    assert_eq!(oaddr + osize, area.vm_end);\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 753 to 753)\n-        },\n+        }\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 756 to 756)\n-        },\n+        }\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 7 to 7)\n-use axerrno::{LinuxResult, LinuxError, linux_err};\n+use axerrno::{linux_err, LinuxError, LinuxResult};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 9 to 9)\n+use axhal::arch::flush_tlb;\n+use axhal::arch::user_mode;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 10 to 10)\n+use axhal::arch::TASK_SIZE;\n+#[cfg(target_arch = \"riscv64\")]\n+use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 11 to 11)\n-use axhal::arch::user_mode;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 13 to 13)\n+use capability::Cap;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 14 to 14)\n-use memory_addr::{align_up_4k, align_down_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n+use memory_addr::{align_down_4k, align_up_4k, is_aligned_4k, PAGE_SHIFT, PAGE_SIZE_4K};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 17 to 19)\n-use axhal::arch::TASK_SIZE;\n-use mm::{VM_READ, VM_WRITE, VM_EXEC, VM_SHARED, VM_MAYSHARE};\n-use mm::{VM_MAYREAD, VM_MAYWRITE, VM_MAYEXEC};\n+use mm::{VM_EXEC, VM_MAYSHARE, VM_READ, VM_SHARED, VM_WRITE};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 21 to 21)\n+use mm::{VM_MAYEXEC, VM_MAYREAD, VM_MAYWRITE};\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 22 to 23)\n-use axhal::arch::{EXC_INST_PAGE_FAULT, EXC_LOAD_PAGE_FAULT, EXC_STORE_PAGE_FAULT};\n-#[cfg(target_arch = \"riscv64\")]\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 25 to 26)\n-use capability::Cap;\n-use axhal::arch::flush_tlb;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 58 to 58)\n-const MAP_EXECUTABLE: usize= 0x1000;\n+const MAP_EXECUTABLE: usize = 0x1000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 60 to 60)\n-const MAP_LOCKED: usize    = 0x2000;\n+const MAP_LOCKED: usize = 0x2000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 76 to 76)\n-const MAP_STACK: usize =    0x020000;\n+const MAP_STACK: usize = 0x020000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 78 to 78)\n-const MAP_HUGETLB: usize =  0x040000;\n+const MAP_HUGETLB: usize = 0x040000;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 88 to 90)\n-pub const VM_FAULT_OOM:     usize = 0x000001;\n-pub const VM_FAULT_SIGBUS:  usize = 0x000002;\n-pub const VM_FAULT_HWPOISON:usize = 0x000010;\n+pub const VM_FAULT_OOM: usize = 0x000001;\n+pub const VM_FAULT_SIGBUS: usize = 0x000002;\n+pub const VM_FAULT_HWPOISON: usize = 0x000010;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 93 to 93)\n-pub const VM_FAULT_FALLBACK:usize = 0x000800;\n+pub const VM_FAULT_FALLBACK: usize = 0x000800;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 95 to 97)\n-pub const VM_FAULT_ERROR: usize =\n-    VM_FAULT_OOM | VM_FAULT_SIGBUS | VM_FAULT_SIGSEGV | VM_FAULT_HWPOISON |\n-    VM_FAULT_HWPOISON_LARGE | VM_FAULT_FALLBACK;\n+pub const VM_FAULT_ERROR: usize = VM_FAULT_OOM\n+    | VM_FAULT_SIGBUS\n+    | VM_FAULT_SIGSEGV\n+    | VM_FAULT_HWPOISON\n+    | VM_FAULT_HWPOISON_LARGE\n+    | VM_FAULT_FALLBACK;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 99 to 103)\n-const LEGACY_MAP_MASK: usize =\n-    MAP_SHARED | MAP_PRIVATE | MAP_FIXED | MAP_ANONYMOUS | MAP_DENYWRITE |\n-    MAP_EXECUTABLE | MAP_UNINITIALIZED | MAP_GROWSDOWN | MAP_LOCKED | MAP_NORESERVE |\n-    MAP_POPULATE | MAP_NONBLOCK | MAP_STACK | MAP_HUGETLB | MAP_32BIT |\n-    MAP_HUGE_2MB | MAP_HUGE_1GB;\n+const LEGACY_MAP_MASK: usize = MAP_SHARED\n+    | MAP_PRIVATE\n+    | MAP_FIXED\n+    | MAP_ANONYMOUS\n+    | MAP_DENYWRITE\n+    | MAP_EXECUTABLE\n+    | MAP_UNINITIALIZED\n+    | MAP_GROWSDOWN\n+    | MAP_LOCKED\n+    | MAP_NORESERVE\n+    | MAP_POPULATE\n+    | MAP_NONBLOCK\n+    | MAP_STACK\n+    | MAP_HUGETLB\n+    | MAP_32BIT\n+    | MAP_HUGE_2MB\n+    | MAP_HUGE_1GB;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 193 to 193)\n-    info!(\"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\", va, offset, flags, prot);\n+    info!(\n+        \"mmap va {:#X} offset {:#X} flags {:#X} prot {:#X}\",\n+        va, offset, flags, prot\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 238 to 239)\n-    let mut vm_flags = calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags)\n-        | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n+    let mut vm_flags =\n+        calc_vm_prot_bits(prot) | calc_vm_flag_bits(flags) | VM_MAYREAD | VM_MAYWRITE | VM_MAYEXEC;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 298 to 302)\n-    locked_mm.vmas.iter().find(|(_, vma)| {\n-        in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n-    }).map(|(key, _)| {\n-        *key\n-    })\n+    locked_mm\n+        .vmas\n+        .iter()\n+        .find(|(_, vma)| {\n+            in_vma(va, va + len, vma) || in_range(vma.vm_start, vma.vm_end, va, va + len)\n+        })\n+        .map(|(key, _)| *key)\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 352 to 352)\n-                vma.vm_start, vma.vm_end, gap_end - len\n+                vma.vm_start,\n+                vma.vm_end,\n+                gap_end - len\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 371 to 371)\n-    va: usize, cause: usize, epc: usize, fixup: &mut usize,\n+    va: usize,\n+    cause: usize,\n+    epc: usize,\n+    fixup: &mut usize,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 386 to 387)\n-        info!(\"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n-            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff);\n+        info!(\n+            \"{:#X} - {:#X}; {:#x} pgoff {:#x}\",\n+            next_vma.vm_start, next_vma.vm_end, next_vma.vm_flags, next_vma.vm_pgoff\n+        );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 443 to 444)\n-            locked_mm.map_region(va, *pa, PAGE_SIZE_4K, 1)\n-                .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+            locked_mm\n+                .map_region(va, *pa, PAGE_SIZE_4K, 1)\n+                .unwrap_or_else(|e| panic!(\"{:?}\", e));\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 467 to 468)\n-    locked_mm.map_region(va, pa, PAGE_SIZE_4K, 1)\n-        .unwrap_or_else(|e| { panic!(\"{:?}\", e) });\n+    locked_mm\n+        .map_region(va, pa, PAGE_SIZE_4K, 1)\n+        .unwrap_or_else(|e| panic!(\"{:?}\", e));\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 548 to 550)\n-        EXC_INST_PAGE_FAULT => {\n-            (vma.vm_flags & VM_EXEC) == 0\n-        },\n+        EXC_INST_PAGE_FAULT => (vma.vm_flags & VM_EXEC) == 0,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 554 to 557)\n-        },\n-        EXC_STORE_PAGE_FAULT => {\n-            (vma.vm_flags & VM_WRITE) == 0\n-        },\n+        }\n+        EXC_STORE_PAGE_FAULT => (vma.vm_flags & VM_WRITE) == 0,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 598 to 598)\n-        _mmap(brk, offset, PROT_READ | PROT_WRITE, MAP_FIXED | MAP_ANONYMOUS, None, 0).unwrap();\n+        _mmap(\n+            brk,\n+            offset,\n+            PROT_READ | PROT_WRITE,\n+            MAP_FIXED | MAP_ANONYMOUS,\n+            None,\n+            0,\n+        )\n+        .unwrap();\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 659 to 659)\n-    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE-va {\n+    if !is_aligned_4k(va) || va > TASK_SIZE || len > TASK_SIZE - va {\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 708 to 708)\n-    oaddr: usize, mut osize: usize, mut nsize: usize, flags: usize, naddr: usize\n+    oaddr: usize,\n+    mut osize: usize,\n+    mut nsize: usize,\n+    flags: usize,\n+    naddr: usize,\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 716 to 717)\n-    error!(\"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n-        oaddr, osize, nsize, flags, naddr);\n+    error!(\n+        \"mremap oaddr {:#x} osize {:#x} nsize {:#x}, flags {:#x} naddr {:#x}\",\n+        oaddr, osize, nsize, flags, naddr\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 723 to 723)\n-    assert_eq!(oaddr+osize, area.vm_end);\n+    assert_eq!(oaddr + osize, area.vm_end);\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 753 to 753)\n-        },\n+        }\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/mmap/src/lib.rs (original lines from 756 to 756)\n-        },\n+        }\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 3,
          "kinds": {
            "Cargo": [
              "// pkg_name=mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-03-07 21:42:40.161717082 +08:00:00\n   Compiling log v0.4.26\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.9.0\n   Compiling rustversion v1.0.20\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling volatile v0.4.6\n[2025-03-07T13:42:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-03-07T13:42:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling raw-cpuid v10.7.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling raw-cpuid v11.5.0\n   Compiling x86_64 v0.14.13\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling static_assertions v1.1.0\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n   Compiling const-default v1.0.0\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-03-07 21:42:37.742275031 +08:00:00\n   Compiling log v0.4.26\n   Compiling cfg-if v1.0.0\n   Compiling nb v1.1.0\n   Compiling bit_field v0.10.2\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling bitflags v2.9.0\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling riscv v0.10.1\n[2025-03-07T13:42:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-03-07T13:42:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling static_assertions v1.1.0\n   Compiling sbi-spec v0.0.4\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.2.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling sbi-rt v0.0.2\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n   Compiling const-default v1.0.0\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-03-07 21:42:30.354471547 +08:00:00\n   Compiling proc-macro2 v1.0.94\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.18\n   Compiling serde v1.0.218\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.39\n   Compiling log v0.4.26\n[2025-03-07T13:42:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-03-07T13:42:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v2.0.99\n   Compiling cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling bitflags v2.9.0\n   Compiling toml_edit v0.19.15\n   Compiling syn v1.0.109\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n   Compiling static_assertions v1.1.0\n   Compiling bit_field v0.10.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 3,
          "kinds": {
            "Cargo": [
              "// pkg_name=mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 22:08:27.293340314 +08:00:00\n   Compiling proc-macro2 v1.0.93\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.217\n   Compiling unicode-ident v1.0.16\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n   Compiling syn v2.0.98\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling toml_edit v0.19.15\n    Checking bit_field v0.10.2\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n    Checking bitflags v2.8.0\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n   Compiling syn v1.0.109\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n14:08:35|RAP|ERROR|: Finished with non-zero exit code.\n",
              "// pkg_name=mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 22:08:19.238345915 +08:00:00\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.16\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n   Compiling syn v2.0.98\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.8.0\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking tock-registers v0.8.1\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking bit_field v0.10.2\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n14:08:27|RAP|ERROR|: Finished with non-zero exit code.\n",
              "// pkg_name=mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-02-16 22:08:35.739048893 +08:00:00\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.16\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.98\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.19\n   Compiling toml_edit v0.19.15\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n14:08:42|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 3,
          "kinds": {
            "Cargo": [
              "// pkg_name=mmap, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_65/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-03-07 18:24:00.454380145 +08:00:00\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling serde v1.0.218\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.39\n    Checking log v0.4.26\n   Compiling syn v2.0.99\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking bitflags v2.9.0\n   Compiling toml_edit v0.19.15\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking static_assertions v1.1.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking bit_field v0.10.2\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_65/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n",
              "// pkg_name=mmap, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_65/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-03-07 18:25:30.57998007 +08:00:00\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n    Checking log v0.4.26\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.20\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking volatile v0.4.6\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking raw-cpuid v11.5.0\n    Checking const-default v1.0.0\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking x86_64 v0.14.13\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking static_assertions v1.1.0\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n    Checking x2apic v0.4.3\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_65/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n",
              "// pkg_name=mmap, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_65/shilei-massclouds/mmap/mmap\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-03-07 18:24:47.791488219 +08:00:00\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n    Checking log v0.4.26\n    Checking cfg-if v1.0.0\n    Checking nb v1.1.0\n    Checking bit_field v0.10.2\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling riscv v0.10.1\n    Checking nb v0.1.3\n    Checking bitflags v2.9.0\n    Checking static_assertions v1.1.0\n    Checking void v1.0.2\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.2.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_65/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 3,
          "kinds": {
            "Semver Violation": [
              "pkg=mmap, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_65/shilei-massclouds/mmap/mmap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-03-07 18:25:30.578292313 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n    Checking log v0.4.26\n    Checking cfg-if v1.0.0\n    Checking nb v1.1.0\n    Checking bit_field v0.10.2\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling riscv v0.10.1\n    Checking nb v0.1.3\n    Checking bitflags v2.9.0\n    Checking static_assertions v1.1.0\n    Checking void v1.0.2\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.2.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking rlsf v0.2.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_65/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n",
              "pkg=mmap, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_65/shilei-massclouds/mmap/mmap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-03-07 18:26:14.646719708 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n    Checking log v0.4.26\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking bitflags v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.20\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking volatile v0.4.6\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bit v0.1.1\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking raw-cpuid v11.5.0\n    Checking const-default v1.0.0\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking x86_64 v0.14.13\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking static_assertions v1.1.0\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling autocfg v1.4.0\n    Checking x2apic v0.4.3\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_65/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n",
              "pkg=mmap, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_65/shilei-massclouds/mmap/mmap\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-03-07 18:24:47.789741414 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building mmap v0.1.0 (current)\nerror: running cargo-doc on crate 'mmap' failed with output:\n-----\n   Compiling proc-macro2 v1.0.94\n   Compiling serde v1.0.218\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.39\n    Checking log v0.4.26\n   Compiling syn v2.0.99\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking bitflags v2.9.0\n   Compiling toml_edit v0.19.15\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking static_assertions v1.1.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking const-default v1.0.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking bit_field v0.10.2\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate mmap v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_65/shilei-massclouds/mmap/mmap &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate mmap v0.1.0\n"
            ]
          }
        }
      ]
    },
    {
      "user": "shilei-massclouds",
      "repo": "mmap",
      "pkg": "rt_mmap",
      "count": 30,
      "raw_reports": [
        {
          "file": "src/main.rs",
          "features": "",
          "count": 24,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 5 to 6)\n-use core::panic::PanicInfo;\n-use alloc::vec::Vec;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 8 to 8)\n-use fileops::AT_FDCWD;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 11 to 11)\n+use alloc::vec::Vec;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 12 to 12)\n+use core::panic::PanicInfo;\n+use fileops::AT_FDCWD;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 70 to 70)\n-        _ => {},\n+        _ => {}\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 88 to 88)\n-    info!(\"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\", dfd, fname, flags, mode, ofd, fd);\n+    info!(\n+        \"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\",\n+        dfd, fname, flags, mode, ofd, fd\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 110 to 111)\n-    error!(\"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n-          va, len, prot, flags, ofd, offset, result);\n+    error!(\n+        \"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n+        va, len, prot, flags, ofd, offset, result\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 117 to 120)\n-    let ret = mmap::mmap(va, len, prot, flags, *fd, offset)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        });\n+    let ret = mmap::mmap(va, len, prot, flags, *fd, offset).unwrap_or_else(|e| linux_err_from!(e));\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 5 to 6)\n-use core::panic::PanicInfo;\n-use alloc::vec::Vec;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 8 to 8)\n-use fileops::AT_FDCWD;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 11 to 11)\n+use alloc::vec::Vec;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 12 to 12)\n+use core::panic::PanicInfo;\n+use fileops::AT_FDCWD;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 70 to 70)\n-        _ => {},\n+        _ => {}\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 88 to 88)\n-    info!(\"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\", dfd, fname, flags, mode, ofd, fd);\n+    info!(\n+        \"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\",\n+        dfd, fname, flags, mode, ofd, fd\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 110 to 111)\n-    error!(\"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n-          va, len, prot, flags, ofd, offset, result);\n+    error!(\n+        \"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n+        va, len, prot, flags, ofd, offset, result\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 117 to 120)\n-    let ret = mmap::mmap(va, len, prot, flags, *fd, offset)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        });\n+    let ret = mmap::mmap(va, len, prot, flags, *fd, offset).unwrap_or_else(|e| linux_err_from!(e));\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 5 to 6)\n-use core::panic::PanicInfo;\n-use alloc::vec::Vec;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 8 to 8)\n-use fileops::AT_FDCWD;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 11 to 11)\n+use alloc::vec::Vec;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 12 to 12)\n+use core::panic::PanicInfo;\n+use fileops::AT_FDCWD;\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 70 to 70)\n-        _ => {},\n+        _ => {}\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 88 to 88)\n-    info!(\"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\", dfd, fname, flags, mode, ofd, fd);\n+    info!(\n+        \"do_openat: ... {}, {}, {}, {}, ofd {:#x} => fd {:#x}\",\n+        dfd, fname, flags, mode, ofd, fd\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 110 to 111)\n-    error!(\"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n-          va, len, prot, flags, ofd, offset, result);\n+    error!(\n+        \"mmap: va {:#x} len {:#x} prot {:#x} flags {:#x} ofd {} off {:#x} result {}\",\n+        va, len, prot, flags, ofd, offset, result\n+    );\n",
              "file: /home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap/src/main.rs (original lines from 117 to 120)\n-    let ret = mmap::mmap(va, len, prot, flags, *fd, offset)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        });\n+    let ret = mmap::mmap(va, len, prot, flags, *fd, offset).unwrap_or_else(|e| linux_err_from!(e));\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 3,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-03-07 21:42:45.084212919 +08:00:00\n[2025-03-07T13:42:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-03-07T13:42:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling x2apic v0.4.3\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=rt_mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-03-07 21:42:44.365975708 +08:00:00\n[2025-03-07T13:42:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-03-07T13:42:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling const-default v1.0.0\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n   Compiling rlsf v0.2.1\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n",
              "// pkg_name=rt_mmap, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_9/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-03-07 21:42:44.695328287 +08:00:00\n[2025-03-07T13:42:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.26/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-03-07T13:42:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\n   Compiling autocfg v1.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 3,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 22:08:42.439556611 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling indexmap v2.7.1\n   Compiling unicode-ident v1.0.16\n    Checking log v0.4.25\n   Compiling quote v1.0.38\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.98\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking bitflags v2.8.0\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking tock-registers v0.8.1\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking aarch64-cpu v9.4.0\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking bit_field v0.10.2\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\n   Compiling svgbobdoc v0.3.0\n    Checking const-default v1.0.0\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n14:08:50|RAP|ERROR|: Finished with non-zero exit code.\n",
              "// pkg_name=rt_mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 22:08:50.571725353 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.93\n   Compiling indexmap v2.7.1\n   Compiling unicode-ident v1.0.16\n    Checking log v0.4.25\n   Compiling quote v1.0.38\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.98\n    Checking nb v1.1.0\n   Compiling toml_edit v0.19.15\n    Checking bit_field v0.10.2\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n    Checking critical-section v1.2.0\n    Checking bitflags v2.8.0\n    Checking sbi-rt v0.0.2\n   Compiling syn v1.0.109\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr.git#8d24a00e)\n    Checking const-default v1.0.0\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n14:08:58|RAP|ERROR|: Finished with non-zero exit code.\n",
              "// pkg_name=rt_mmap, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_64/shilei-massclouds/mmap/rt_mmap\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-02-16 22:08:58.932952557 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.93\n   Compiling indexmap v2.7.1\n   Compiling unicode-ident v1.0.16\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n   Compiling toml_edit v0.19.15\n    Checking bitflags v1.3.2\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.98\n   Compiling rustversion v1.0.19\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\n   Compiling paste v1.0.15\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n14:09:05|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}