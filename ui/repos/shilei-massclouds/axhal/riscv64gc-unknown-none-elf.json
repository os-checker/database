{
  "repo": {
    "user": "shilei-massclouds",
    "repo": "axhal"
  },
  "data": [
    {
      "user": "shilei-massclouds",
      "repo": "axhal",
      "pkg": "axhal",
      "count": 25,
      "raw_reports": [
        {
          "file": "src/arch/riscv/mod.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 10 to 10)\n+use axerrno::{linux_err, LinuxError};\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 13 to 13)\n-use axerrno::{LinuxError, linux_err};\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 37 to 38)\n-pub const SR_SPIE:  usize = 0x00000020; /* Previous Supervisor IE */\n-pub const SR_SPP:   usize = 0x00000100; /* Previously Supervisor */\n+pub const SR_SPIE: usize = 0x00000020; /* Previous Supervisor IE */\n+pub const SR_SPP: usize = 0x00000100; /* Previously Supervisor */\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 172 to 192)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   lb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   li {x}, 0\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = out(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   lb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   li {x}, 0\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = out(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 200 to 219)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   sb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = in(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   sb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = in(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 276 to 277)\n-pub fn early_init() {\n-}\n+pub fn early_init() {}\n"
            ]
          }
        },
        {
          "file": "src/arch/aarch64/trap.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 3 to 3)\n+use crate::trap::SyscallArgs;\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 5 to 5)\n-use crate::trap::SyscallArgs;\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 91 to 94)\n-    [\n-        tf.r[0], tf.r[1], tf.r[2],\n-        tf.r[3], tf.r[4], tf.r[5],\n-    ].map(|x| x as usize)\n+    [tf.r[0], tf.r[1], tf.r[2], tf.r[3], tf.r[4], tf.r[5]].map(|x| x as usize)\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 99 to 99)\n-    F: FnOnce(SyscallArgs, usize) -> usize\n+    F: FnOnce(SyscallArgs, usize) -> usize,\n"
            ]
          }
        },
        {
          "file": "src/misc.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 5 to 5)\n-use spinbase::SpinNoIrq;\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 7 to 7)\n+use spinbase::SpinNoIrq;\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 12 to 12)\n-\tlet mut seed = PARK_MILLER_LEHMER_SEED.lock();\n+    let mut seed = PARK_MILLER_LEHMER_SEED.lock();\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 19 to 19)\n-\t    *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n+        *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n"
            ]
          }
        },
        {
          "file": "src/arch/riscv/sysno.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 17 to 17)\n-pub const LINUX_SYSCALL_MOUNT:usize = 0x28;\n+pub const LINUX_SYSCALL_MOUNT: usize = 0x28;\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 47 to 47)\n-pub const LINUX_SYSCALL_SETGID:usize = 0x90;\n+pub const LINUX_SYSCALL_SETGID: usize = 0x90;\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_7/shilei-massclouds/axhal/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    ├── axhal 0.1.0\n    │   └── rt_axhal 0.1.0\n    ├── axhal 0.1.0\n    └── arch_boot 0.1.0\n        └── rt_axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 57\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_7/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 0:05:24.795282574 +08:00:00\n   Compiling cfg-if v1.0.0\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling static_assertions v1.1.0\n   Compiling riscv v0.10.1\n   Compiling sbi-spec v0.0.4\n   Compiling nb v0.1.3\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling log v0.4.27\n   Compiling embedded-hal v0.2.7\n   Compiling bit_field v0.10.2\n   Compiling critical-section v1.2.0\n[2025-05-24T16:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-24T16:05:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.9.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_7/shilei-massclouds/axhal/axhal)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_7/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 0:05:29.594259621 +08:00:00\n   Compiling hashbrown v0.15.3\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling proc-macro2 v1.0.95\n   Compiling indexmap v2.9.0\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.18\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling toml_edit v0.19.15\n   Compiling quote v1.0.40\n    Checking sbi-spec v0.0.4\n    Checking critical-section v1.2.0\n    Checking log v0.4.27\n    Checking bit_field v0.10.2\n    Checking sbi-rt v0.0.2\n   Compiling syn v2.0.101\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking bitflags v2.9.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_7/shilei-massclouds/axhal/axhal)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n16:05:35|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_7/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 0:05:08.328179368 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.0\n    Checking nb v1.1.0\n   Compiling proc-macro2 v1.0.95\n   Compiling riscv v0.10.1\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n    Checking void v1.0.2\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.2.0\n    Checking bit_field v0.10.2\n    Checking log v0.4.27\n    Checking sbi-rt v0.0.2\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.9.1\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_7/shilei-massclouds/axhal/axhal)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_7/shilei-massclouds/axhal/axhal --features alloc,default,fp_simd,irq,monolithic,paging,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-24T16:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-24T16:05:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_7/shilei-massclouds/axhal/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-25 0:06:10.40482581 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nriscv           0.10.1   ---     0.13.0  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx2apic          0.4.3    ---     0.5.0   Normal  cfg(target_arch = \"x86_64\")\nx86_64          0.14.13  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_7/shilei-massclouds/axhal/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-05-25 0:05:14.178547683 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling toml_edit v0.19.15\n    Checking cfg-if v1.0.0\n    Checking nb v1.1.0\n   Compiling proc-macro2 v1.0.95\n   Compiling riscv v0.10.1\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n    Checking void v1.0.2\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.2.0\n    Checking bit_field v0.10.2\n    Checking log v0.4.27\n    Checking sbi-rt v0.0.2\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.9.1\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_7/shilei-massclouds/axhal/axhal)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_7/shilei-massclouds/axhal/axhal --features alloc,default,fp_simd,irq,monolithic,paging,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
            ]
          }
        },
        {
          "file": "src/arch/aarch64/context.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/aarch64/context.rs (original lines from 185 to 189)\n-    let mut regs = unsafe {\n-        core::slice::from_raw_parts_mut(\n-            regs as *mut TrapFrame, 1\n-        )\n-    };\n+    let mut regs = unsafe { core::slice::from_raw_parts_mut(regs as *mut TrapFrame, 1) };\n"
            ]
          }
        },
        {
          "file": "src/arch/x86_64/sysno.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/axhal/src/arch/x86_64/sysno.rs (original lines from 85 to 85)\n-pub const LINUX_SYSCALL_SETGID:usize = 106;\n+pub const LINUX_SYSCALL_SETGID: usize = 106;\n"
            ]
          }
        }
      ]
    },
    {
      "user": "shilei-massclouds",
      "repo": "axhal",
      "pkg": "rt_axhal",
      "count": 6,
      "raw_reports": [
        {
          "file": "src/main.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 7 to 7)\n-use core::panic::PanicInfo;\n",
              "file: /home/runner/check/batch_7/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 9 to 9)\n+use core::panic::PanicInfo;\n"
            ]
          }
        },
        {
          "file": "/home/runner/check/batch_7/shilei-massclouds/axhal/Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    ├── axhal 0.1.0\n    │   └── rt_axhal 0.1.0\n    ├── axhal 0.1.0\n    └── arch_boot 0.1.0\n        └── rt_axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 57\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_7/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 0:05:28.3447246 +08:00:00\n[2025-05-24T16:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-24T16:05:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=rt_axhal, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_7/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-25 0:05:53.338459399 +08:00:00\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.95\n    Checking cfg-if v1.0.0\n   Compiling indexmap v2.9.0\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n   Compiling unicode-ident v1.0.18\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n    Checking log v0.4.27\n   Compiling toml_edit v0.19.15\n    Checking bit_field v0.10.2\n    Checking critical-section v1.2.0\n   Compiling quote v1.0.40\n    Checking sbi-rt v0.0.2\n   Compiling syn v2.0.101\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.9.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n16:05:59|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-24T16:05:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-24T16:05:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}