{"repo":{"user":"shilei-massclouds","repo":"elf"},"data":[{"user":"shilei-massclouds","repo":"elf","pkg":"elf","count":56,"raw_reports":[{"file":"src/abi.rs","count":30,"kinds":{"Clippy(Warn)":["warning: empty lines after doc comment\n   --> src/abi.rs:101:1\n    |\n101 | / /// 64-255 Architecture-specific value range\n102 | |\n103 | | // ET_* define constants for the ELF File Header's e_type field.\n104 | | // Represented as Elf32_Half in Elf32_Ehdr and Elf64_Half in Elf64_Ehdr which\n105 | | // are both are 2-byte unsigned integers with 2-byte alignment\n106 | |\n    | |_\n107 |   /// No file type\n108 |   pub const ET_NONE: u16 = 0;\n    |   ---------------------- the comment documents this constant\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = note: `#[warn(clippy::empty_line_after_doc_comments)]` on by default\n    = help: if the empty lines are unintentional remove them\nhelp: if the doc comment should not document `ET_NONE` comment it out\n    |\n101 | // /// 64-255 Architecture-specific value range\n    | ++\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:515:1\n    |\n515 | / /// If the number of program headers is greater than or equal to PN_XNUM (0xffff),\n516 | | /// this member has the value PN_XNUM (0xffff). The actual number of\n517 | | /// program header table entries is contained in the sh_info field of the\n518 | | /// section header at index 0. Otherwise, the sh_info member of the initial\n519 | | /// section header entry contains the value zero.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n    = note: `#[warn(clippy::too_long_first_doc_paragraph)]` on by default\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:671:1\n    |\n671 | / /// The data in the section may be merged to eliminate duplication. Unless the\n672 | | /// SHF_STRINGS flag is also set, the data elements in the section are of a uniform size.\n673 | | /// The size of each element is specified in the section header's sh_entsize field. If\n674 | | /// the SHF_STRINGS flag is also set, the data elements consist of null-terminated\n...   |\n677 | | ///\n678 | | /// Each element in the section is compared against other elements in sections with the\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:692:1\n    |\n692 | / /// This flag adds special ordering requirements for link editors. The requirements\n693 | | /// apply if the sh_link field of this section's header references another section (the\n694 | | /// linked-to section). If this section is combined with other sections in the output\n695 | | /// file, it must appear in the same relative order with respect to those sections,\n696 | | /// as the linked-to section appears with respect to sections the linked-to section is\n697 | | /// combined with.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:699:1\n    |\n699 | / /// This section requires special OS-specific processing (beyond the standard linking\n700 | | /// rules) to avoid incorrect behavior. If this section has either an sh_type value or\n701 | | /// contains sh_flags bits in the OS-specific ranges for those fields, and a link\n702 | | /// editor processing this section does not recognize those values, then the link editor\n703 | | /// should reject the object file containing this section with an error.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:705:1\n    |\n705 | / /// This section is a member (perhaps the only one) of a section group. The section must\n706 | | /// be referenced by a section of type SHT_GROUP. The SHF_GROUP flag may be set only for\n707 | | /// sections contained in relocatable objects (objects with the ELF header e_type member\n708 | | /// set to ET_REL).\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:713:1\n    |\n713 | / /// This flag identifies a section containing compressed data. SHF_COMPRESSED applies only\n714 | | /// to non-allocable sections, and cannot be used in conjunction with SHF_ALLOC. In\n715 | | /// addition, SHF_COMPRESSED cannot be applied to sections of type SHT_NOBITS.\n716 | | ///\n717 | | /// All relocations to a compressed section specifiy offsets to the uncompressed section\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: empty line after doc comment\n   --> src/abi.rs:790:1\n    |\n790 | / /// STV_* define constants for the ELF Symbol's st_visibility (encoded in the st_other field).\n791 | |\n    | |_\n...\n798 |   pub const STV_DEFAULT: u8 = 0;\n    |   ------------------------- the comment documents this constant\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n    = help: if the empty line is unintentional remove it\nhelp: if the documentation should include the empty line include it in the comment\n    |\n791 | ///\n    |\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:799:1\n    |\n799 | / /// The meaning of this visibility attribute may be defined by processor\n800 | | /// supplements to further constrain hidden symbols. A processor supplement's\n801 | | /// definition should be such that generic tools can safely treat internal\n802 | | /// symbols as hidden.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:804:1\n    |\n804 | / /// A symbol defined in the current component is hidden if its name is not\n805 | | /// visible to other components. Such a symbol is necessarily protected. This\n806 | | /// attribute may be used to control the external interface of a component. Note\n807 | | /// that an object named by such a symbol may still be referenced from another\n808 | | /// component if its address is passed outside.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:810:1\n    |\n810 | / /// A symbol defined in the current component is protected if it is visible in\n811 | | /// other components but not preemptable, meaning that any reference to such a\n812 | | /// symbol from within the defining component must be resolved to the definition\n813 | | /// in that component, even if there is a definition in another component that\n814 | | /// would preempt by the default rules.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:819:1\n    |\n819 | / /// This element holds the string table offset of a null-terminated string,\n820 | | /// giving the name of a needed library. The offset is an index into the table\n821 | | /// recorded in the DT_STRTAB code. The dynamic array may contain multiple\n822 | | /// entries with this type. These entries' relative order is significant, though\n823 | | /// their relation to entries of other types is not.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:840:1\n    |\n840 | / /// This element holds the address of a relocation table. Entries in the table\n841 | | /// have explicit addends, (Rela). An object file may have multiple relocation\n842 | | /// sections. When building the relocation table for an executable or shared\n843 | | /// object file, the link editor catenates those sections to form a single\n...   |\n849 | | /// and DT_RELAENT elements. When relocation is mandatory for a file, either\n850 | | /// DT_RELA or DT_REL may occur (both are permitted but not required).\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:868:1\n    |\n868 | / /// This element holds the string table offset of a null-terminated search\n869 | | /// library search path string. The offset is an index into the table recorded\n870 | | /// in the DT_STRTAB entry. Its use has been superseded by DT_RUNPATH.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:872:1\n    |\n872 | / /// This element's presence in a shared object library alters the dynamic\n873 | | /// linker's symbol resolution algorithm for references within the library.\n874 | | /// Instead of starting a symbol search with the executable file, the dynamic\n875 | | /// linker starts from the shared object itself. If the shared object fails to\n876 | | /// supply the referenced symbol, the dynamic linker then searches the\n877 | | /// executable file and other shared objects as usual. Its use has been\n878 | | /// superseded by the DF_SYMBOLIC flag.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:888:1\n    |\n888 | / /// This member specifies the type of relocation entry to which the procedure\n889 | | /// linkage table refers. The d_val member holds DT_REL or DT_RELA, as\n890 | | /// appropriate. All relocations in a procedure linkage table must use the same\n891 | | /// relocation.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:896:1\n    |\n896 | / /// This member's absence signifies that no relocation entry should cause a\n897 | | /// modification to a non-writable segment, as specified by the segment\n898 | | /// permissions in the program header table. If this member is present, one or\n899 | | /// more relocation entries might request modifications to a non-writable\n900 | | /// segment, and the dynamic linker can prepare accordingly. Its use has been\n901 | | /// superseded by the DF_TEXTREL flag.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:903:1\n    |\n903 | / /// If present, this entry's d_ptr member holds the address of relocation\n904 | | /// entries associated solely with the procedure linkage table. Separating these\n905 | | /// relocation entries lets the dynamic linker ignore them during process\n906 | | /// initialization, if lazy binding is enabled. If this entry is present, the\n907 | | /// related entries of types DT_PLTRELSZ and DT_PLTREL must also be present.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:909:1\n    |\n909 | / /// If present in a shared object or executable, this entry instructs the\n910 | | /// dynamic linker to process all relocations for the object containing this\n911 | | /// entry before transferring control to the program. The presence of this entry\n912 | | /// takes precedence over a directive to use lazy binding for this object when\n913 | | /// specified through the environment or via dlopen(BA_LIB). Its use has been\n914 | | /// superseded by the DF_BIND_NOW flag.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:932:1\n    |\n932 | / /// This element holds flag values specific to the object being loaded. Each\n933 | | /// flag value will have the name DF_flag_name. Defined values and their\n934 | | /// meanings are described below. All other values are reserved.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:936:1\n    |\n936 | / /// This element holds the address of the array of pointers to\n937 | | /// pre-initialization functions. The DT_PREINIT_ARRAY table is processed only\n938 | | /// in an executable file; it is ignored if contained in a shared object.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n   --> src/abi.rs:940:1\n    |\n940 | / /// This element holds the size in bytes of the array of pre-initialization\n941 | | /// functions pointed to by the DT_PREINIT_ARRAY entry. If an object has a\n942 | | /// DT_PREINIT_ARRAY entry, it must also have a DT_PREINIT_ARRAYSZ entry. As\n943 | | /// with DT_PREINIT_ARRAY, this entry is ignored if it appears in a shared\n944 | | /// object.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n    --> src/abi.rs:1019:1\n     |\n1019 | / /// This flag signifies that the object being loaded may make reference to the\n1020 | | /// $ORIGIN substitution string. The dynamic linker must determine the pathname\n1021 | | /// of the object containing this entry when the object is loaded.\n     | |_\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n    --> src/abi.rs:1023:1\n     |\n1023 | / /// If this flag is set in a shared object library, the dynamic linker's symbol\n1024 | | /// resolution algorithm for references within the library is changed. Instead\n1025 | | /// of starting a symbol search with the executable file, the dynamic linker\n1026 | | /// starts from the shared object itself. If the shared object fails to supply\n1027 | | /// the referenced symbol, the dynamic linker then searches the executable file\n1028 | | /// and other shared objects as usual.\n     | |_\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n    --> src/abi.rs:1030:1\n     |\n1030 | / /// If this flag is not set, no relocation entry should cause a modification to\n1031 | | /// a non-writable segment, as specified by the segment permissions in the\n1032 | | /// program header table. If this flag is set, one or more relocation entries\n1033 | | /// might request modifications to a non-writable segment, and the dynamic\n1034 | | /// linker can prepare accordingly.\n     | |_\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n    --> src/abi.rs:1036:1\n     |\n1036 | / /// If set in a shared object or executable, this flag instructs the dynamic\n1037 | | /// linker to process all relocations for the object containing this entry\n1038 | | /// before transferring control to the program. The presence of this entry takes\n1039 | | /// precedence over a directive to use lazy binding for this object when\n1040 | | /// specified through the environment or via dlopen(BA_LIB).\n     | |_\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n    --> src/abi.rs:1042:1\n     |\n1042 | / /// If set in a shared object or executable, this flag instructs the dynamic\n1043 | | /// linker to reject attempts to load this file dynamically. It indicates that\n1044 | | /// the shared object or executable contains code using a static thread-local\n1045 | | /// storage scheme. Implementations need not support any form of thread-local\n1046 | | /// storage.\n     | |_\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n    --> src/abi.rs:1292:1\n     |\n1292 | / /// Set in executable file headers (e_type = ET_EXEC or ET_DYN) to note explicitly that the\n1293 | | /// executable file was built to conform to the software floating-point procedure-call standard\n1294 | | /// (the base standard). If both EF_ARM_ABI_FLOAT_XXXX bits are clear, conformance to the base\n1295 | | /// procedure-call standard is implied.\n     | |_\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n    --> src/abi.rs:1676:1\n     |\n1676 | / /// Reserved for MTE memory tag data dumps in core files\n1677 | | /// (if present) hold MTE memory tags for a particular memory range.\n1678 | | /// At present they are defined for core dump files of type ET_CORE\n1679 | | /// See <https://www.kernel.org/doc/html/latest/arm64/memory-tagging-extension.html#core-dump-support>\n     | |_\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: first doc comment paragraph is too long\n    --> src/abi.rs:2537:1\n     |\n2537 | / /// Alignment statement. The addend indicates the number of bytes occupied by\n2538 | | /// nop instructions at the relocation offset. The alignment boundary is\n2539 | | /// specified by the addend rounded up to the next power of two.\n     | |_\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n"]}},{"file":"src/gnu_symver.rs","count":7,"kinds":{"Clippy(Warn)":["warning: first doc comment paragraph is too long\n   --> src/gnu_symver.rs:160:1\n    |\n160 | / /// The special GNU extension section .gnu.version has a section type of SHT_GNU_VERSYM.\n161 | | /// This section shall have the same number of entries as the Dynamic Symbol Table in\n162 | | /// the .dynsym section. The .gnu.version section shall contain an array of\n163 | | /// elements of type Elfxx_Half (both of which are 16-bit unsigned integers).\n164 | | ///\n165 | | /// The .gnu.version section and VersionIndex values act as a lookup table for specifying\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\nhelp: add an empty line\n    |\n160 ~ /// The special GNU extension section .gnu.version has a section type of SHT_GNU_VERSYM.\n161 + ///\n    |\n\n","warning: first doc comment paragraph is too long\n   --> src/gnu_symver.rs:219:1\n    |\n219 | / /// The special GNU extension section .gnu.version_d has a section type of SHT_GNU_VERDEF\n220 | | /// This section shall contain symbol version definitions. The number of entries\n221 | | /// in this section shall be contained in the DT_VERDEFNUM entry of the Dynamic\n222 | | /// Section .dynamic, and also the sh_info member of the section header.\n...   |\n225 | | ///\n226 | | /// The .gnu.version_d section shall contain an array of VerDef structures\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n","warning: the following explicit lifetimes could be elided: 'data\n   --> src/gnu_symver.rs:394:6\n    |\n394 | impl<'data, E: EndianParse> Iterator for VerDefAuxIterator<'data, E> {\n    |      ^^^^^                                                 ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n394 - impl<'data, E: EndianParse> Iterator for VerDefAuxIterator<'data, E> {\n394 + impl<E: EndianParse> Iterator for VerDefAuxIterator<'_, E> {\n    |\n\n","warning: the following explicit lifetimes could be elided: 'data\n   --> src/gnu_symver.rs:394:6\n    |\n394 | impl<'data, E: EndianParse> Iterator for VerDefAuxIterator<'data, E> {\n    |      ^^^^^                                                 ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n394 - impl<'data, E: EndianParse> Iterator for VerDefAuxIterator<'data, E> {\n394 + impl<E: EndianParse> Iterator for VerDefAuxIterator<'_, E> {\n    |\n\n","warning: first doc comment paragraph is too long\n   --> src/gnu_symver.rs:454:1\n    |\n454 | / /// The GNU extension section .gnu.version_r has a section type of SHT_GNU_VERNEED.\n455 | | /// This section contains required symbol version definitions. The number of\n456 | | /// entries in this section shall be contained in the DT_VERNEEDNUM entry of the\n457 | | /// Dynamic Section .dynamic and also the sh_info member of the section header.\n...   |\n460 | | ///\n461 | | /// The section shall contain an array of VerNeed structures optionally\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\nhelp: add an empty line\n    |\n454 ~ /// The GNU extension section .gnu.version_r has a section type of SHT_GNU_VERNEED.\n455 + ///\n    |\n\n","warning: the following explicit lifetimes could be elided: 'data\n   --> src/gnu_symver.rs:631:6\n    |\n631 | impl<'data, E: EndianParse> Iterator for VerNeedAuxIterator<'data, E> {\n    |      ^^^^^                                                  ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n631 - impl<'data, E: EndianParse> Iterator for VerNeedAuxIterator<'data, E> {\n631 + impl<E: EndianParse> Iterator for VerNeedAuxIterator<'_, E> {\n    |\n\n","warning: the following explicit lifetimes could be elided: 'data\n   --> src/gnu_symver.rs:631:6\n    |\n631 | impl<'data, E: EndianParse> Iterator for VerNeedAuxIterator<'data, E> {\n    |      ^^^^^                                                  ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n631 - impl<'data, E: EndianParse> Iterator for VerNeedAuxIterator<'data, E> {\n631 + impl<E: EndianParse> Iterator for VerNeedAuxIterator<'_, E> {\n    |\n\n"]}},{"file":"src/parse.rs","count":7,"kinds":{"Clippy(Warn)":["warning: unexpected `cfg` condition value: `std`\n  --> src/parse.rs:62:7\n   |\n62 | #[cfg(feature = \"std\")]\n   |       ^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `nightly`\n   = help: consider adding `std` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition value: `std`\n  --> src/parse.rs:86:36\n   |\n86 | #[cfg(all(feature = \"nightly\", not(feature = \"std\")))]\n   |                                    ^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `nightly`\n   = help: consider adding `std` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition value: `std`\n   --> src/parse.rs:193:7\n    |\n193 | #[cfg(feature = \"std\")]\n    |       ^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `nightly`\n    = help: consider adding `std` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition value: `std`\n  --> src/parse.rs:56:11\n   |\n56 |     #[cfg(feature = \"std\")]\n   |           ^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `nightly`\n   = help: consider adding `std` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition value: `std`\n   --> src/parse.rs:169:19\n    |\n169 |             #[cfg(feature = \"std\")]\n    |                   ^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `nightly`\n    = help: consider adding `std` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: the following explicit lifetimes could be elided: 'data\n   --> src/parse.rs:256:6\n    |\n256 | impl<'data, E: EndianParse, P: ParseAt> Iterator for ParsingIterator<'data, E, P> {\n    |      ^^^^^                                                           ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n256 - impl<'data, E: EndianParse, P: ParseAt> Iterator for ParsingIterator<'data, E, P> {\n256 + impl<E: EndianParse, P: ParseAt> Iterator for ParsingIterator<'_, E, P> {\n    |\n\n","warning: the following explicit lifetimes could be elided: 'data\n   --> src/parse.rs:256:6\n    |\n256 | impl<'data, E: EndianParse, P: ParseAt> Iterator for ParsingIterator<'data, E, P> {\n    |      ^^^^^                                                           ^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n256 - impl<'data, E: EndianParse, P: ParseAt> Iterator for ParsingIterator<'data, E, P> {\n256 + impl<E: EndianParse, P: ParseAt> Iterator for ParsingIterator<'_, E, P> {\n    |\n\n"]}},{"file":"src/lib.rs","count":5,"kinds":{"Clippy(Warn)":["warning: unexpected `cfg` condition value: `std`\n   --> src/lib.rs:128:17\n    |\n128 | #![cfg_attr(not(feature = \"std\"), no_std)]\n    |                 ^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `nightly`\n    = help: consider adding `std` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\n","warning: unexpected `cfg` condition value: `std`\n   --> src/lib.rs:129:42\n    |\n129 | #![cfg_attr(all(feature = \"nightly\", not(feature = \"std\")), feature(error_in_core))]\n    |                                          ^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `nightly`\n    = help: consider adding `std` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition value: `to_str`\n   --> src/lib.rs:148:7\n    |\n148 | #[cfg(feature = \"to_str\")]\n    |       ^^^^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `nightly`\n    = help: consider adding `to_str` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition value: `std`\n   --> src/lib.rs:158:7\n    |\n158 | #[cfg(feature = \"std\")]\n    |       ^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `nightly`\n    = help: consider adding `std` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n","warning: unexpected `cfg` condition value: `std`\n   --> src/lib.rs:160:7\n    |\n160 | #[cfg(feature = \"std\")]\n    |       ^^^^^^^^^^^^^^^\n    |\n    = note: expected values for `feature` are: `nightly`\n    = help: consider adding `std` as a feature in `Cargo.toml`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\n"]}},{"file":"src/endian.rs","count":4,"kinds":{"Clippy(Warn)":["warning: first doc comment paragraph is too long\n   --> src/endian.rs:100:1\n    |\n100 | / /// An endian parsing type that can choose at runtime which byte order to parse integers as.\n101 | | /// This is useful for scenarios where a single compiled binary wants to dynamically\n102 | | /// interpret ELF files of any byte order.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\nhelp: add an empty line\n    |\n100 ~ /// An endian parsing type that can choose at runtime which byte order to parse integers as.\n101 + ///\n    |\n\n","warning: first doc comment paragraph is too long\n   --> src/endian.rs:112:1\n    |\n112 | / /// A zero-sized type that always parses integers as if they're in little-endian order.\n113 | | /// This is useful for scenarios where a combiled binary knows it only wants to interpret\n114 | | /// little-endian ELF files and doesn't want the performance penalty of evaluating a match\n115 | | /// each time it parses an integer.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\nhelp: add an empty line\n    |\n112 ~ /// A zero-sized type that always parses integers as if they're in little-endian order.\n113 + ///\n    |\n\n","warning: first doc comment paragraph is too long\n   --> src/endian.rs:119:1\n    |\n119 | / /// A zero-sized type that always parses integers as if they're in big-endian order.\n120 | | /// This is useful for scenarios where a combiled binary knows it only wants to interpret\n121 | | /// big-endian ELF files and doesn't want the performance penalty of evaluating a match\n122 | | /// each time it parses an integer.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\nhelp: add an empty line\n    |\n119 ~ /// A zero-sized type that always parses integers as if they're in big-endian order.\n120 + ///\n    |\n\n","warning: first doc comment paragraph is too long\n   --> src/endian.rs:126:1\n    |\n126 | / /// A zero-sized type that always parses integers as if they're in the compilation target's native-endian order.\n127 | | /// This is useful for toolchain scenarios where a combiled binary knows it only wants to interpret\n128 | | /// ELF files compiled for the same target and doesn't want the performance penalty of evaluating a match\n129 | | /// each time it parses an integer.\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\nhelp: add an empty line\n    |\n126 ~ /// A zero-sized type that always parses integers as if they're in the compilation target's native-endian order.\n127 + ///\n    |\n\n"]}},{"file":"src/note.rs","count":2,"kinds":{"Clippy(Warn)":["warning: first doc comment paragraph is too long\n   --> src/note.rs:133:1\n    |\n133 | / /// Contains four 4-byte integers.\n134 | | /// The first 4-byte integer specifies the os. The second, third, and fourth\n135 | | /// 4-byte integers contain the earliest compatible kernel version.\n136 | | /// For example, if the 3 integers are 6, 0, and 7, this signifies a 6.0.7 kernel.\n137 | | ///\n138 | | /// (see: <https://raw.githubusercontent.com/wiki/hjl-tools/linux-abi/linux-abi-draft.pdf>)\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\nhelp: add an empty line\n    |\n133 ~ /// Contains four 4-byte integers.\n134 + ///\n    |\n\n","warning: first doc comment paragraph is too long\n   --> src/note.rs:167:1\n    |\n167 | / /// Contains a build ID note which is unique among the set of meaningful contents\n168 | | /// for ELF files and identical when the output file would otherwise have been identical.\n169 | | /// This is a zero-copy type which merely contains a slice of the note data from which it was parsed.\n170 | | ///\n171 | | /// (see: <https://raw.githubusercontent.com/wiki/hjl-tools/linux-abi/linux-abi-draft.pdf>)\n    | |_\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph\n\n"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=elf, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_16/shilei-massclouds/elf/elf\ncmd=cargo semver-checks --target x86_64-unknown-linux-gnu\n\n\n--- failure enum_variant_missing: pub enum variant removed or renamed ---\n\nDescription:\nA publicly-visible enum has at least one variant that is no longer available under its prior name. It may have been renamed or removed entirely.\n        ref: https://doc.rust-lang.org/cargo/reference/semver.html#item-remove\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.36.0/src/lints/enum_variant_missing.ron\n\nFailed in:\n  variant ParseError::IOError, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/parse.rs:59\n  variant ParseError::IOError, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/parse.rs:59\n\n--- failure function_missing: pub fn removed or renamed ---\n\nDescription:\nA publicly-visible function cannot be imported by its prior path. A `pub use` may have been removed, or the function itself may have been renamed or removed entirely.\n        ref: https://doc.rust-lang.org/cargo/reference/semver.html#item-remove\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.36.0/src/lints/function_missing.ron\n\nFailed in:\n  function elf::to_str::e_type_to_string, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:56\n  function elf::to_str::e_osabi_to_string, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:27\n  function elf::to_str::st_bind_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:548\n  function elf::to_str::e_type_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:45\n  function elf::to_str::e_osabi_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:4\n  function elf::to_str::e_machine_to_string, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:447\n  function elf::to_str::e_type_to_human_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:34\n  function elf::to_str::ch_type_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:582\n  function elf::to_str::e_machine_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:258\n  function elf::to_str::e_machine_to_human_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:63\n  function elf::to_str::d_tag_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:600\n  function elf::to_str::st_symtype_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:527\n  function elf::to_str::st_symtype_to_string, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:541\n  function elf::to_str::note_abi_tag_os_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:590\n  function elf::to_str::st_vis_to_string, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:575\n  function elf::to_str::st_bind_to_string, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:558\n  function elf::to_str::sh_type_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:454\n  function elf::to_str::st_vis_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:565\n  function elf::to_str::p_type_to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:502\n  function elf::to_str::p_flags_to_string, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:490\n  function elf::to_str::p_type_to_string, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:520\n  function elf::to_str::sh_type_to_string, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:483\n\n--- failure module_missing: pub module removed or renamed ---\n\nDescription:\nA publicly-visible module cannot be imported by its prior path. A `pub use` may have been removed, or the module may have been renamed, removed, or made non-public.\n        ref: https://doc.rust-lang.org/cargo/reference/semver.html#item-remove\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.36.0/src/lints/module_missing.ron\n\nFailed in:\n  mod elf::to_str, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/to_str.rs:1\n\n--- failure struct_missing: pub struct removed or renamed ---\n\nDescription:\nA publicly-visible struct cannot be imported by its prior path. A `pub use` may have been removed, or the struct itself may have been renamed or removed entirely.\n        ref: https://doc.rust-lang.org/cargo/reference/semver.html#item-remove\n       impl: https://github.com/obi1kenobi/cargo-semver-checks/tree/v0.36.0/src/lints/struct_missing.ron\n\nFailed in:\n  struct elf::ElfStream, previously in file /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/elf-0.7.4/src/elf_stream.rs:27\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}