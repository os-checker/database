{
  "repo": {
    "user": "shilei-massclouds",
    "repo": "axsyscall"
  },
  "data": [
    {
      "user": "shilei-massclouds",
      "repo": "axsyscall",
      "pkg": "axsyscall",
      "count": 42,
      "raw_reports": [
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 22,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 5 to 10)\n-use axtype::get_user_str;\n-use fileops::iovec;\n-use axtype::{align_up_4k, is_aligned_4k};\n-use axhal::arch::sysno::*;\n-use axerrno::{linux_err_from, LinuxError, linux_err};\n-use axtype::FS_NAME_LEN;\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 12 to 12)\n+use axerrno::{linux_err, linux_err_from, LinuxError};\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 13 to 13)\n+use axhal::arch::sysno::*;\n+use axtype::get_user_str;\n+use axtype::FS_NAME_LEN;\n+use axtype::{align_up_4k, is_aligned_4k};\n+use fileops::iovec;\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 123 to 124)\n-    warn!(\"impl sched_getaffinity pid {} cpu_set_size {} mask {:#X}\",\n-          pid, cpu_set_size, mask);\n+    warn!(\n+        \"impl sched_getaffinity pid {} cpu_set_size {} mask {:#X}\",\n+        pid, cpu_set_size, mask\n+    );\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 136 to 136)\n-    warn!(\"impl setitimer which {} newval {} oldval {}\", which, newval, oldval);\n+    warn!(\n+        \"impl setitimer which {} newval {} oldval {}\",\n+        which, newval, oldval\n+    );\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 144 to 146)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+        .unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 151 to 154)\n-    fileops::fchown(fd, uid as u32, gid as u32)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::fchown(fd, uid as u32, gid as u32).unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 159 to 162)\n-    fileops::fchmod(fd, mode as i32)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::fchmod(fd, mode as i32).unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 168 to 171)\n-    fileops::fchmodat(dfd, &filename, mode as i32, flags)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::fchmodat(dfd, &filename, mode as i32, flags).unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 197 to 199)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+        .unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 221 to 221)\n-        },\n+        }\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 227 to 229)\n-    fileops::register_file(\n-        fileops::openat(dfd, &filename, flags, mode), flags\n-    )\n+    fileops::register_file(fileops::openat(dfd, &filename, flags, mode), flags)\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 276 to 278)\n-    fileops::read(fd, ubuf).unwrap_or_else(|e| {\n-        linux_err_from!(e)\n-    })\n+    fileops::read(fd, ubuf).unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 284 to 286)\n-    fileops::pread64(fd, ubuf, offset).unwrap_or_else(|e| {\n-        linux_err_from!(e)\n-    })\n+    fileops::pread64(fd, ubuf, offset).unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 314 to 316)\n-    fileops::write(fd, ubuf).unwrap_or_else(|e| {\n-        linux_err_from!(e)\n-    })\n+    fileops::write(fd, ubuf).unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 330 to 333)\n-    fileops::readlinkat(dfd, &filename, buf, size)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::readlinkat(dfd, &filename, buf, size).unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 348 to 351)\n-    fileops::fallocate(fd, mode, offset, len)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::fallocate(fd, mode, offset, len).unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 374 to 377)\n-    mmap::mmap(va, len, prot, flags, fd, offset)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    mmap::mmap(va, len, prot, flags, fd, offset).unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 403 to 406)\n-    fileops::ioctl(fd, request, udata)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::ioctl(fd, request, udata).unwrap_or_else(|e| linux_err_from!(e))\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 412 to 413)\n-    warn!(\"impl linux_syscall_fgetxattr fd:{} {}->{} ({})\",\n-        fd, name, value, size);\n+    warn!(\n+        \"impl linux_syscall_fgetxattr fd:{} {}->{} ({})\",\n+        fd, name, value, size\n+    );\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 650 to 651)\n-    info!(\"sys_mount: name {:#x} dir {:#x} ty {:#x} flags {:#x} data {:#x}\",\n-        fsname, dir, fstype, flags, data);\n+    info!(\n+        \"sys_mount: name {:#x} dir {:#x} ty {:#x} flags {:#x} data {:#x}\",\n+        fsname, dir, fstype, flags, data\n+    );\n",
              "file: /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 655 to 658)\n-    fileops::mount(&fsname, &dir, &fstype, flags, data)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::mount(&fsname, &dir, &fstype, flags, data).unwrap_or_else(|e| linux_err_from!(e))\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs",
          "features": "",
          "count": 10,
          "kinds": {
            "Clippy(Error)": [
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n",
              "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n",
              "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
            ],
            "Mirai": [
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n",
              "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n",
              "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n",
              "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Error)": [
              "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
            ],
            "Mirai": [
              "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsyscall, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-05-16 7:47:42.239563303 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.3\n   Compiling serde v1.0.219\n   Compiling unicode-ident v1.0.18\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n   Compiling rustversion v1.0.20\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.172\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsyscall, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-16 7:48:15.609483765 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n   Compiling log v0.4.27\n[2025-05-15T23:48:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-15T23:48:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling syn v2.0.101\n   Compiling bitflags v2.9.1\n   Compiling cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.20\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling scopeguard v1.2.0\n   Compiling volatile v0.4.6\n   Compiling x86_64 v0.14.13\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling spin v0.9.8\n   Compiling libc v0.2.172\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsyscall, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall\n// cmd=cargo +nightly-2025-01-10 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-16 7:48:08.540301587 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling serde v1.0.219\n   Compiling hashbrown v0.15.3\n   Compiling equivalent v1.0.2\n   Compiling unicode-ident v1.0.18\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.20\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.172\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
            ]
          }
        },
        {
          "file": "(virtual) rapx",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsyscall, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-16 7:48:24.220080482 +08:00:00\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling hashbrown v0.15.3\n   Compiling serde v1.0.219\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.9\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.20\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking raw-cpuid v10.7.0\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n23:48:30|RAP|ERROR|: Finished with non-zero exit code.\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axsyscall, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-16 7:47:49.293970091 +08:00:00\n    Building axsyscall v0.1.0 (current)\nerror: running cargo-doc on crate 'axsyscall' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.3\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.20\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.172\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsyscall v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsyscall v0.1.0\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── x2apic 0.4.3\n    └── axhal 0.1.0\n        ├── taskctx 0.1.0\n        │   ├── wait_queue 0.1.0\n        │   │   ├── task 0.1.0\n        │   │   │   ├── sys 0.1.0\n        │   │   │   │   ├── signal 0.1.0\n        │   │   │   │   │   ├── mmap 0.1.0\n        │   │   │   │   │   │   ├── exec 0.1.0\n        │   │   │   │   │   │   │   └── axsyscall 0.1.0\n        │   │   │   │   │   │   ├── bprm_loader 0.1.0\n        │   │   │   │   │   │   │   └── exec 0.1.0\n        │   │   │   │   │   │   └── axsyscall 0.1.0\n        │   │   │   │   │   ├── fileops 0.1.0\n        │   │   │   │   │   │   ├── bprm_loader 0.1.0\n        │   │   │   │   │   │   └── axsyscall 0.1.0\n        │   │   │   │   │   └── axsyscall 0.1.0\n        │   │   │   │   └── axsyscall 0.1.0\n        │   │   │   ├── signal 0.1.0\n        │   │   │   ├── procfs 0.1.0\n        │   │   │   │   └── fileops 0.1.0\n        │   │   │   ├── mmap 0.1.0\n        │   │   │   ├── fork 0.1.0\n        │   │   │   │   └── axsyscall 0.1.0\n        │   │   │   ├── fileops 0.1.0\n        │   │   │   ├── exec 0.1.0\n        │   │   │   ├── bprm_loader 0.1.0\n        │   │   │   ├── block_loop 0.1.0\n        │   │   │   │   └── fileops 0.1.0\n        │   │   │   └── axsyscall 0.1.0\n        │   │   ├── sys 0.1.0\n        │   │   └── mutex 0.1.0\n        │   │       ├── sys 0.1.0\n        │   │       ├── mm 0.1.0\n        │   │       │   ├── task 0.1.0\n        │   │       │   ├── procfs 0.1.0\n        │   │       │   ├── mmap 0.1.0\n        │   │       │   ├── fork 0.1.0\n        │   │       │   └── fileops 0.1.0\n        │   │       ├── filetable 0.1.0\n        │   │       │   └── task 0.1.0\n        │   │       ├── fileops 0.1.0\n        │   │       ├── ext2fs 0.1.0\n        │   │       │   └── axmount 0.1.0\n        │   │       │       ├── fstree 0.1.0\n        │   │       │       │   ├── task 0.1.0\n        │   │       │       │   └── axfile 0.1.0\n        │   │       │       │       ├── procfs 0.1.0\n        │   │       │       │       ├── mmap 0.1.0\n        │   │       │       │       ├── mm 0.1.0\n        │   │       │       │       ├── filetable 0.1.0\n        │   │       │       │       ├── fileops 0.1.0\n        │   │       │       │       ├── exec 0.1.0\n        │   │       │       │       ├── bprm_loader 0.1.0\n        │   │       │       │       └── block_loop 0.1.0\n        │   │       │       └── fileops 0.1.0\n        │   │       ├── exec 0.1.0\n        │   │       ├── bprm_loader 0.1.0\n        │   │       ├── block_loop 0.1.0\n        │   │       └── axmount 0.1.0\n        │   ├── task 0.1.0\n        │   ├── sys 0.1.0\n        │   ├── signal 0.1.0\n        │   ├── run_queue 0.1.0\n        │   │   ├── wait_queue 0.1.0\n        │   │   ├── task 0.1.0\n        │   │   ├── sys 0.1.0\n        │   │   ├── preempt_guard 0.1.0\n        │   │   │   ├── task 0.1.0\n        │   │   │   ├── spinpreempt 0.1.0\n        │   │   │   │   ├── task 0.1.0\n        │   │   │   │   ├── fstree 0.1.0\n        │   │   │   │   └── filetable 0.1.0\n        │   │   │   └── exec 0.1.0\n        │   │   ├── pipefs 0.1.0\n        │   │   │   ├── fileops 0.1.0\n        │   │   │   └── axfs_ramfs 0.1.0\n        │   │   │       ├── fileops 0.1.0\n        │   │   │       └── axmount 0.1.0\n        │   │   ├── fork 0.1.0\n        │   │   └── axfs_devfs 0.1.0\n        │   │       ├── axmount 0.1.0\n        │   │       └── axfs_ramfs 0.1.0\n        │   ├── preempt_guard 0.1.0\n        │   ├── mutex 0.1.0\n        │   └── fork 0.1.0\n        ├── task 0.1.0\n        ├── sys 0.1.0\n        ├── signal 0.1.0\n        ├── run_queue 0.1.0\n        ├── page_table_entry 0.1.0\n        │   └── page_table 0.1.0\n        │       ├── taskctx 0.1.0\n        │       ├── mm 0.1.0\n        │       ├── fstree 0.1.0\n        │       ├── fileops 0.1.0\n        │       ├── exec 0.1.0\n        │       └── bprm_loader 0.1.0\n        ├── page_table 0.1.0\n        ├── mmap 0.1.0\n        ├── mm 0.1.0\n        ├── fstree 0.1.0\n        ├── fork 0.1.0\n        ├── fileops 0.1.0\n        ├── ext2fs 0.1.0\n        ├── exec 0.1.0\n        ├── bprm_loader 0.1.0\n        ├── axsyscall 0.1.0\n        ├── axmount 0.1.0\n        ├── axfs_devfs 0.1.0\n        ├── axdriver 0.1.0\n        │   ├── fstree 0.1.0\n        │   ├── fileops 0.1.0\n        │   ├── ext2fs 0.1.0\n        │   └── axmount 0.1.0\n        └── axalloc 0.1.0\n            ├── user_stack 0.1.0\n            │   └── bprm_loader 0.1.0\n            ├── sys 0.1.0\n            ├── page_table 0.1.0\n            ├── mmap 0.1.0\n            ├── mm 0.1.0\n            ├── fstree 0.1.0\n            ├── fork 0.1.0\n            ├── fileops 0.1.0\n            ├── exec 0.1.0\n            ├── bprm_loader 0.1.0\n            └── axdriver 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 780,\n    \"last-commit\": \"982c2320aa55b3095110a0b0eadd446d83be45f9\",\n    \"last-updated\": \"2025-05-14T22:55:51+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 109\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-15T23:48:17Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-15T23:48:17Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axsyscall, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-16 7:48:08.192393489 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axsyscall v0.1.0 (current)\nerror: running cargo-doc on crate 'axsyscall' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling hashbrown v0.15.3\n   Compiling unicode-ident v1.0.18\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.219\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.9\n   Compiling indexmap v2.9.0\n   Compiling quote v1.0.40\n    Checking log v0.4.27\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.101\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.9.1\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.20\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.172\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsyscall v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_8/shilei-massclouds/axsyscall/axsyscall &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsyscall v0.1.0\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}