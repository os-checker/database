{"repo":{"user":"shilei-massclouds","repo":"axsyscall"},"data":[{"user":"shilei-massclouds","repo":"axsyscall","pkg":"axsyscall","count":34,"raw_reports":[{"file":"src/lib.rs","count":22,"kinds":{"Unformatted":["file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 5 to 10)\n-use axtype::get_user_str;\n-use fileops::iovec;\n-use axtype::{align_up_4k, is_aligned_4k};\n-use axhal::arch::sysno::*;\n-use axerrno::{linux_err_from, LinuxError, linux_err};\n-use axtype::FS_NAME_LEN;\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 12 to 12)\n+use axerrno::{linux_err, linux_err_from, LinuxError};\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 13 to 13)\n+use axhal::arch::sysno::*;\n+use axtype::get_user_str;\n+use axtype::FS_NAME_LEN;\n+use axtype::{align_up_4k, is_aligned_4k};\n+use fileops::iovec;\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 123 to 124)\n-    warn!(\"impl sched_getaffinity pid {} cpu_set_size {} mask {:#X}\",\n-          pid, cpu_set_size, mask);\n+    warn!(\n+        \"impl sched_getaffinity pid {} cpu_set_size {} mask {:#X}\",\n+        pid, cpu_set_size, mask\n+    );\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 136 to 136)\n-    warn!(\"impl setitimer which {} newval {} oldval {}\", which, newval, oldval);\n+    warn!(\n+        \"impl setitimer which {} newval {} oldval {}\",\n+        which, newval, oldval\n+    );\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 144 to 146)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+        .unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 151 to 154)\n-    fileops::fchown(fd, uid as u32, gid as u32)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::fchown(fd, uid as u32, gid as u32).unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 159 to 162)\n-    fileops::fchmod(fd, mode as i32)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::fchmod(fd, mode as i32).unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 168 to 171)\n-    fileops::fchmodat(dfd, &filename, mode as i32, flags)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::fchmodat(dfd, &filename, mode as i32, flags).unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 197 to 199)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+        .unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 221 to 221)\n-        },\n+        }\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 227 to 229)\n-    fileops::register_file(\n-        fileops::openat(dfd, &filename, flags, mode), flags\n-    )\n+    fileops::register_file(fileops::openat(dfd, &filename, flags, mode), flags)\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 276 to 278)\n-    fileops::read(fd, ubuf).unwrap_or_else(|e| {\n-        linux_err_from!(e)\n-    })\n+    fileops::read(fd, ubuf).unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 284 to 286)\n-    fileops::pread64(fd, ubuf, offset).unwrap_or_else(|e| {\n-        linux_err_from!(e)\n-    })\n+    fileops::pread64(fd, ubuf, offset).unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 314 to 316)\n-    fileops::write(fd, ubuf).unwrap_or_else(|e| {\n-        linux_err_from!(e)\n-    })\n+    fileops::write(fd, ubuf).unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 330 to 333)\n-    fileops::readlinkat(dfd, &filename, buf, size)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::readlinkat(dfd, &filename, buf, size).unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 348 to 351)\n-    fileops::fallocate(fd, mode, offset, len)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::fallocate(fd, mode, offset, len).unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 374 to 377)\n-    mmap::mmap(va, len, prot, flags, fd, offset)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    mmap::mmap(va, len, prot, flags, fd, offset).unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 403 to 406)\n-    fileops::ioctl(fd, request, udata)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::ioctl(fd, request, udata).unwrap_or_else(|e| linux_err_from!(e))\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 412 to 413)\n-    warn!(\"impl linux_syscall_fgetxattr fd:{} {}->{} ({})\",\n-        fd, name, value, size);\n+    warn!(\n+        \"impl linux_syscall_fgetxattr fd:{} {}->{} ({})\",\n+        fd, name, value, size\n+    );\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 650 to 651)\n-    info!(\"sys_mount: name {:#x} dir {:#x} ty {:#x} flags {:#x} data {:#x}\",\n-        fsname, dir, fstype, flags, data);\n+    info!(\n+        \"sys_mount: name {:#x} dir {:#x} ty {:#x} flags {:#x} data {:#x}\",\n+        fsname, dir, fstype, flags, data\n+    );\n","file: /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall/src/lib.rs (original lines from 655 to 658)\n-    fileops::mount(&fsname, &dir, &fstype, flags, data)\n-        .unwrap_or_else(|e| {\n-            linux_err_from!(e)\n-        })\n+    fileops::mount(&fsname, &dir, &fstype, flags, data).unwrap_or_else(|e| linux_err_from!(e))\n"]}},{"file":"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs","count":5,"kinds":{"Clippy(Error)":["error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n","error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n","error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n","error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n","error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"]}},{"file":"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs","count":1,"kinds":{"Clippy(Error)":["error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"]}},{"file":"(virtual) clippy","count":1,"kinds":{"Cargo":["// pkg_name=axsyscall, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.89\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.165\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) lockbud","count":1,"kinds":{"Cargo":["// pkg_name=axsyscall, checker=Lockbud\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n   Compiling log v0.4.22\n[2024-11-26T09:29:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:29:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling syn v2.0.89\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling scopeguard v1.2.0\n   Compiling volatile v0.4.6\n   Compiling x86_64 v0.14.12\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling spin v0.9.8\n   Compiling libc v0.2.165\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"]}},{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=axsyscall, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.89\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n    Checking spin v0.9.8\n   Compiling libc v0.2.165\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n09:29:36|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axsyscall, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall\n// cmd=cargo semver-checks --target x86_64-unknown-linux-gnu\n     Parsing axsyscall v0.1.0 (current)\nerror: running cargo-doc on crate axsyscall failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.12\n   Compiling syn v1.0.109\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.167\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axsyscall v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axsyscall v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-11-26T09:29:23Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:29:23Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axsyscall, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_14/shilei-massclouds/axsyscall/axsyscall\ncmd=cargo semver-checks --target x86_64-unknown-linux-gnu\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}