{
  "repo": {
    "user": "guoweikang",
    "repo": "osl"
  },
  "data": [
    {
      "user": "guoweikang",
      "repo": "osl",
      "pkg": "osl",
      "count": 19,
      "raw_reports": [
        {
          "file": "src/arceos/driver/i2c/msg.rs",
          "features": "--features arceos",
          "count": 11,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] assertion failed: flags.contains(I2cMsgFlags::I2cMasterRead)\n  --> src/arceos/driver/i2c/msg.rs:46:10\n   |\n46 |          assert!(flags.contains(I2cMsgFlags::I2cMasterRead));\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRecvLen)\n  --> src/arceos/driver/i2c/msg.rs:67:9\n   |\n67 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRecvLen));\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRead)\n  --> src/arceos/driver/i2c/msg.rs:68:9\n   |\n68 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRead));\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRead)\n  --> src/arceos/driver/i2c/msg.rs:74:9\n   |\n74 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRead));\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] possible attempt to add with overflow\n  --> src/arceos/driver/i2c/msg.rs:75:9\n   |\n75 |         self.recieve_cmd_cnt +=1;\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] possible attempt to subtract with overflow\n  --> src/arceos/driver/i2c/msg.rs:82:46\n   |\n82 |             self.recieve_cmd_cnt as usize == self.recieve_threshold -1\n   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRead)\n   --> src/arceos/driver/i2c/msg.rs:101:9\n    |\n101 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRead));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRead)\n   --> src/arceos/driver/i2c/msg.rs:108:9\n    |\n108 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRead));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] assertion failed: !self.flags.contains(I2cMsgFlags::I2cMasterRead)\n   --> src/arceos/driver/i2c/msg.rs:119:9\n    |\n119 |         assert!(!self.flags.contains(I2cMsgFlags::I2cMasterRead));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: [MIRAI] assertion failed: self.flags.contains(I2cMsgFlags::I2cMasterRecvLen)\n   --> src/arceos/driver/i2c/msg.rs:129:9\n    |\n129 |         assert!(self.flags.contains(I2cMsgFlags::I2cMasterRecvLen));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ],
            "Clippy(Warn)": [
              "warning: length comparison to zero\n  --> src/arceos/driver/i2c/msg.rs:94:13\n   |\n94 |             self.buf.len() == 0\n   |             ^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `self.buf.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "src/sync.rs",
          "features": "--features arceos",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: doc list item without indentation\n --> src/sync.rs:6:5\n  |\n6 | //!  must supply a stuct called OslCompletion and implement GeneralComplete\n  |     ^\n  |\n  = help: if this is supposed to be its own paragraph, add a blank line\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n  = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n  |\n6 | //!   must supply a stuct called OslCompletion and implement GeneralComplete\n  |      +\n\n",
              "warning: doc list item without indentation\n --> src/sync.rs:9:5\n  |\n9 | //!  must supply a stuct called SpinLock and implement lock\n  |     ^\n  |\n  = help: if this is supposed to be its own paragraph, add a blank line\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n  |\n9 | //!   must supply a stuct called SpinLock and implement lock\n  |      +\n\n"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=osl, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-01-26 22:40:00.458862163 +08:00:00\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n   Compiling fnv v1.0.7\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror: could not compile `osl` (lib) due to 6 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=osl, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-26 22:40:26.238180004 +08:00:00\n    Updating git repository `https://github.com/Starry-OS/axerrno.git`\n    Updating git repository `https://github.com/Starry-OS/axhal.git`\n    Updating git repository `https://github.com/Starry-OS/axlog.git`\n    Updating git repository `https://github.com/Starry-OS/axsync.git`\n    Updating git repository `https://github.com/Starry-OS/axtask.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/crate_interface.git`\n    Updating git repository `https://github.com/Starry-OS/handler_table.git`\n    Updating git repository `https://github.com/Starry-OS/kernel_guard.git`\n    Updating git repository `https://github.com/Starry-OS/lazy_init.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/Starry-OS/of.git`\n    Updating git repository `https://github.com/Starry-OS/page_table_entry.git`\n    Updating git repository `https://github.com/Starry-OS/percpu.git`\n    Updating git repository `https://github.com/Starry-OS/ratio.git`\n    Updating git repository `https://github.com/Starry-OS/spinlock.git`\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/arm_gic.git`\n    Updating git repository `https://github.com/Starry-OS/arm_pl011.git`\n    Updating git repository `https://github.com/Starry-OS/dw_apb_uart.git`\n    Updating git repository `https://github.com/kern-crates/axbacktrace.git`\n    Updating git repository `https://github.com/Starry-OS/axsignal.git`\n    Updating git repository `https://github.com/Starry-OS/linked_list.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Updating git repository `https://github.com/Starry-OS/percpu_macros.git`\n    Updating git repository `https://github.com/Starry-OS/scheduler.git`\n    Updating git repository `https://github.com/Starry-OS/timer_list.git`\n    Updating crates.io index\n Downloading crates ...\n  Downloaded quote v1.0.38\n  Downloaded derive_builder_macro v0.20.2\n  Downloaded unicode-ident v1.0.15\n  Downloaded ident_case v1.0.1\n  Downloaded fnv v1.0.7\n  Downloaded cfg-if v1.0.0\n  Downloaded strsim v0.11.1\n  Downloaded derive_builder_core v0.20.2\n  Downloaded darling v0.20.10\n  Downloaded proc-macro2 v1.0.93\n  Downloaded derive_builder v0.20.2\n  Downloaded darling_core v0.20.10\n  Downloaded darling_macro v0.20.10\n  Downloaded bitflags v2.8.0\n  Downloaded syn v2.0.96\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling ident_case v1.0.1\n   Compiling fnv v1.0.7\n   Compiling strsim v0.11.1\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.8.0\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n   Compiling derive_builder v0.20.2\n   Compiling osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:58:46\n   |\n58 | pub type Result<T> = core::result::Result<T, Error>;\n   |                                              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:62:14\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0433]: failed to resolve: use of undeclared type `Error`\n  --> src/error.rs:62:21\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |                     ^^^^^ use of undeclared type `Error`\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0412]: cannot find type `Arc` in this scope\n  --> src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n\nerror[E0412]: cannot find type `Return` in this scope\n  --> src/driver/irq.rs:40:42\n   |\n40 | pub fn to_irq_return(val: ReturnEnum) -> Return {\n   |                                          ^^^^^^ not found in this scope\n\nerror[E0433]: failed to resolve: use of undeclared type `Return`\n  --> src/driver/irq.rs:41:5\n   |\n41 |     Return::from(val)\n   |     ^^^^^^ use of undeclared type `Return`\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `osl` (lib) due to 6 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) mirai",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=osl, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-26 22:40:20.07577703 +08:00:00\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n   Compiling fnv v1.0.7\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n   Compiling syn v2.0.96\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror: could not compile `osl` (lib) due to 6 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=osl, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-26 22:40:06.813526052 +08:00:00\n    Building osl v0.1.0 (current)\nerror: running cargo-doc on crate 'osl' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.15\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.6.24\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.96\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.19\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking bitflags v2.8.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n    Checking tock-registers v0.8.1\n   Compiling fnv v1.0.7\n   Compiling strsim v0.11.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling ident_case v1.0.1\n   Compiling darling_core v0.20.10\n    Checking aarch64-cpu v9.4.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n    Checking lazy_static v1.5.0\n    Checking x86_64 v0.15.2\n    Checking x86_64 v0.14.13\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking raw-cpuid v11.3.0\n   Compiling darling_macro v0.20.10\n    Checking x2apic v0.4.3\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling darling v0.20.10\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n    Checking axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#1cc27325)\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking derive_builder v0.20.2\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n Documenting osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror[E0428]: the name `log_print` is defined multiple times\n  --> /home/runner/check/batch_1/guoweikang/osl/src/arceos/log.rs:6:1\n   |\n6  |  / macro_rules! log_print (\n7  |  |     ($crate::log::LogLevel::Error, $($arg:tt)*) => (\n8  |  |         $crate::log::error!($($arg)*)\n9  |  |     );\n...   |\n18 |  |     );\n19 |  | );\n   |  |__^ `log_print` redefined here\n   |\n  ::: /home/runner/check/batch_1/guoweikang/osl/src/linux/log.rs:6:1\n   |\n6  | /  macro_rules! log_print (\n7  | |      // The non-continuation cases (most of them, e.g. `INFO`).\n8  | |      ($crate::log::LogLevel::Error, $($arg:tt)*) => (\n9  | |          $crate::log::pr_err!($($arg)*)\n...  |\n19 | |      );\n20 | |  );\n   | |___- previous definition of the macro `log_print` here\n   |\n   = note: `log_print` must be defined only once in the macro namespace of this module\n\nerror: macro expansion ends with an incomplete expression: expected `;`\n  --> /home/runner/check/batch_1/guoweikang/osl/src/sync.rs:20:55\n   |\n20 |         pub use kernel::{new_spinlock, sync::SpinLock}\n   |                                                       ^ expected `;`\n   |\n   = note: glob-like brace syntax must be last on the path\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/error.rs:1:5\n  |\n1 | use kernel::prelude::*;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/sleep.rs:1:5\n  |\n1 | use kernel::delay::usleep_range;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/time.rs:1:5\n  |\n1 | use kernel::timekeeping::*;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/driver/irq.rs:4:9\n  |\n4 | pub use kernel::irq::Return;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/vec.rs:8:9\n  |\n8 | pub use kernel::prelude::Vec;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/complete.rs:3:5\n  |\n3 | use kernel::{completion::Completion, new_completion, prelude::*, sync::Arc};\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/log.rs:1:9\n  |\n1 | pub use kernel::{pr_debug, pr_err, pr_info, pr_warn};\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/error.rs:3:9\n  |\n3 | pub use kernel::prelude::Error;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/complete.rs:3:5\n  |\n3 | use kernel::{completion::Completion, new_completion, prelude::*, sync::Arc};\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror: cannot find attribute `pin_data` in this scope\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/complete.rs:6:3\n  |\n6 | #[pin_data]\n  |   ^^^^^^^^\n\nerror: cannot find attribute `pin` in this scope\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/complete.rs:8:7\n  |\n8 |     #[pin]\n  |       ^^^\n\nerror: cannot find macro `pin_init` in this scope\n  --> /home/runner/check/batch_1/guoweikang/osl/src/linux/complete.rs:14:23\n   |\n14 |         Arc::pin_init(pin_init!(Self {\n   |                       ^^^^^^^^\n\nerror[E0412]: cannot find type `Arc` in this scope\n  --> /home/runner/check/batch_1/guoweikang/osl/src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n14 + use alloc::sync::Arc;\n   |\n\nSome errors have detailed explanations: E0412, E0428, E0432, E0433.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not document `osl`\n\n-----\n\nerror: failed to build rustdoc for crate osl v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/guoweikang/osl --features arceos,axerrno,axhal,axlog,axsync,axtask,linux &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate osl v0.1.0\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "--features arceos",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=osl, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=--features arceos\npkg_dir=/home/runner/check/batch_1/guoweikang/osl\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu --features arceos\ntimestamp=2025-01-26 22:28:13.406397945 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building osl v0.1.0 (current)\nerror: running cargo-doc on crate 'osl' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.15\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.24\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.96\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.22\n   Compiling autocfg v1.4.0\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.19\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#bee485a8)\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.8.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n    Checking volatile v0.4.6\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking spin v0.9.8\n   Compiling paste v1.0.15\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling fnv v1.0.7\n    Checking tock-registers v0.8.1\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n    Checking aarch64-cpu v9.4.0\n   Compiling darling_core v0.20.10\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#2a880338)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#c087bf99)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#8bed6725)\n    Checking x86_64 v0.14.13\n    Checking x86_64 v0.15.2\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking lazy_static v1.5.0\n    Checking fdt v0.1.5\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#45a65508)\n    Checking raw-cpuid v11.3.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#0c8da4c3)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#d0e87c05)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#283dddc4)\n    Checking axbacktrace v0.1.0 (https://github.com/kern-crates/axbacktrace.git#c0371ca8)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n    Checking axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#1cc27325)\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#d41e0730)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n    Checking derive_builder v0.20.2\n Documenting osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror[E0428]: the name `log_print` is defined multiple times\n  --> /home/runner/check/batch_1/guoweikang/osl/src/arceos/log.rs:6:1\n   |\n6  |  / macro_rules! log_print (\n7  |  |     ($crate::log::LogLevel::Error, $($arg:tt)*) => (\n8  |  |         $crate::log::error!($($arg)*)\n9  |  |     );\n...   |\n18 |  |     );\n19 |  | );\n   |  |__^ `log_print` redefined here\n   |\n  ::: /home/runner/check/batch_1/guoweikang/osl/src/linux/log.rs:6:1\n   |\n6  | /  macro_rules! log_print (\n7  | |      // The non-continuation cases (most of them, e.g. `INFO`).\n8  | |      ($crate::log::LogLevel::Error, $($arg:tt)*) => (\n9  | |          $crate::log::pr_err!($($arg)*)\n...  |\n19 | |      );\n20 | |  );\n   | |___- previous definition of the macro `log_print` here\n   |\n   = note: `log_print` must be defined only once in the macro namespace of this module\n\nerror: macro expansion ends with an incomplete expression: expected `;`\n  --> /home/runner/check/batch_1/guoweikang/osl/src/sync.rs:20:55\n   |\n20 |         pub use kernel::{new_spinlock, sync::SpinLock}\n   |                                                       ^ expected `;`\n   |\n   = note: glob-like brace syntax must be last on the path\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/error.rs:1:5\n  |\n1 | use kernel::prelude::*;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/sleep.rs:1:5\n  |\n1 | use kernel::delay::usleep_range;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/time.rs:1:5\n  |\n1 | use kernel::timekeeping::*;\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/driver/irq.rs:4:9\n  |\n4 | pub use kernel::irq::Return;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/vec.rs:8:9\n  |\n8 | pub use kernel::prelude::Vec;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/complete.rs:3:5\n  |\n3 | use kernel::{completion::Completion, new_completion, prelude::*, sync::Arc};\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/log.rs:1:9\n  |\n1 | pub use kernel::{pr_debug, pr_err, pr_info, pr_warn};\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0433]: failed to resolve: use of unresolved module or unlinked crate `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/error.rs:3:9\n  |\n3 | pub use kernel::prelude::Error;\n  |         ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror[E0432]: unresolved import `kernel`\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/complete.rs:3:5\n  |\n3 | use kernel::{completion::Completion, new_completion, prelude::*, sync::Arc};\n  |     ^^^^^^ use of unresolved module or unlinked crate `kernel`\n  |\n  = help: if you wanted to use a crate named `kernel`, use `cargo add kernel` to add it to your `Cargo.toml`\n\nerror: cannot find attribute `pin_data` in this scope\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/complete.rs:6:3\n  |\n6 | #[pin_data]\n  |   ^^^^^^^^\n\nerror: cannot find attribute `pin` in this scope\n --> /home/runner/check/batch_1/guoweikang/osl/src/linux/complete.rs:8:7\n  |\n8 |     #[pin]\n  |       ^^^\n\nerror: cannot find macro `pin_init` in this scope\n  --> /home/runner/check/batch_1/guoweikang/osl/src/linux/complete.rs:14:23\n   |\n14 |         Arc::pin_init(pin_init!(Self {\n   |                       ^^^^^^^^\n\nerror[E0412]: cannot find type `Arc` in this scope\n  --> /home/runner/check/batch_1/guoweikang/osl/src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n   |\nhelp: consider importing this struct\n   |\n14 + use alloc::sync::Arc;\n   |\n\nSome errors have detailed explanations: E0412, E0428, E0432, E0433.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not document `osl`\n\n-----\n\nerror: failed to build rustdoc for crate osl v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_1/guoweikang/osl --features arceos,axerrno,axhal,axlog,axsync,axtask,linux &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate osl v0.1.0\n"
            ]
          }
        },
        {
          "file": "src/math.rs",
          "features": "--features arceos",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: returning the result of a `let` binding from a block\n  --> src/math.rs:51:5\n   |\n50 |     let quotient = n / base as u64;\n   |     ------------------------------- unnecessary `let` binding\n51 |     quotient\n   |     ^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n50 ~     \n51 ~     n / base as u64\n   |\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}