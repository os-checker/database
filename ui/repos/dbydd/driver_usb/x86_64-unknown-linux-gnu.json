{
  "repo": {
    "user": "dbydd",
    "repo": "driver_usb"
  },
  "data": [
    {
      "user": "dbydd",
      "repo": "driver_usb",
      "pkg": "driver_usb",
      "count": 11,
      "raw_reports": [
        {
          "file": "src/usb/descriptors/desc_uvc/uvc_interfaces.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Mirai": [
              "warning: [MIRAI] possible index out of bounds\n   --> src/usb/descriptors/desc_uvc/uvc_interfaces.rs:343:19\n    |\n343 |         let len = raw[0];\n    |                   ^^^^^^\n\n",
              "warning: [MIRAI] possible index out of bounds\n   --> src/usb/descriptors/desc_uvc/uvc_interfaces.rs:440:19\n    |\n440 |         let len = raw[0];\n    |                   ^^^^^^\n\n",
              "warning: [MIRAI] possible index out of bounds\n   --> src/usb/descriptors/desc_uvc/uvc_interfaces.rs:487:34\n    |\n487 |                     frame_index: raw[3],\n    |                                  ^^^^^^\n\n",
              "warning: [MIRAI] possible index out of bounds\n   --> src/usb/descriptors/desc_uvc/uvc_interfaces.rs:549:34\n    |\n549 |                     frame_index: raw[3],\n    |                                  ^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=driver_usb, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_4/dbydd/driver_usb/driver_usb\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-05-16 5:06:46.959763149 +08:00:00\n    Building driver_usb v0.1.0 (current)\nerror: running cargo-doc on crate 'driver_usb' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking accessor v0.3.3\n    Checking bitflags v2.9.1\n    Checking pci_types v0.6.2\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking spinning_top v0.3.0\n    Checking driver_common v0.1.0 (https://github.com/kern-crates/driver_common.git#2e86ed35)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/kern-crates/memory_addr.git#8d24a00e)\n    Checking log v0.4.27\n    Checking tock-registers v0.9.0\n   Compiling num-derive v0.3.3\n   Compiling const-enum v0.1.0 (https://github.com/dbydd/const-enum-new.git#ad1a0106)\n   Compiling num-derive v0.4.2\n    Checking xhci v0.9.2 (https://github.com/dbydd/xhci.git#5a4ad17c)\n Documenting driver_usb v0.1.0 (/home/runner/check/batch_4/dbydd/driver_usb/driver_usb)\nerror[E0207]: the type parameter `T` is not constrained by the impl trait, self type, or predicates\n  --> /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/pci_interface.rs:18:6\n   |\n18 | impl<T> OSAbstractions for PlatAbstraction {\n   |      ^ unconstrained type parameter\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/pci_interface.rs:50:6\n   |\n50 | ) -> Option<XHCIPCIDriver<'a>> {\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/pci_interface.rs:73:24\n   |\n73 | impl BaseDriverOps for XHCIPCIDriver<'_> {\n   |                        ^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/pci_interface.rs:74:20\n   |\n74 |     fn device_name(&self) -> &str {\n   |                    ^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/pci_interface.rs:78:20\n   |\n78 |     fn device_type(&self) -> driver_common::DeviceType {\n   |                    ^^^^^ cannot infer type for type parameter `T`\n\nSome errors have detailed explanations: E0207, E0282.\nFor more information about an error, try `rustc --explain E0207`.\nerror: could not document `driver_usb`\n\n-----\n\nerror: failed to build rustdoc for crate driver_usb v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/dbydd/driver_usb/driver_usb --features default,driver_common,packed_drivers,pci,xhci &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate driver_usb v0.1.0\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n└── xhci 0.9.2\n    └── driver_usb 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 780,\n    \"last-commit\": \"982c2320aa55b3095110a0b0eadd446d83be45f9\",\n    \"last-updated\": \"2025-05-14T22:55:51+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 25\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-15T21:07:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-15T21:07:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "features": "",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=driver_usb, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/dbydd/driver_usb/driver_usb\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-05-16 5:07:19.131205511 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\npci_types  0.6.2    ---     0.10.0  Normal  ---\n"
            ]
          }
        },
        {
          "file": "[rap] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Rapx": [
              "pkg=driver_usb, checker=Rapx\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/dbydd/driver_usb/driver_usb\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-16 5:07:17.643696988 +08:00:00\n\nwarning: Double free detected.\n   --> src/host/data_structures/host_controllers/xhci/context.rs:228:5\n    |\n228 |     }\n    |     - Double free detected.\n    |\nwarning: Dangling pointer detected.\n   --> src/host/data_structures/host_controllers/xhci/context.rs:207:1\n    |\n207 | / pub fn new(entries: u32, os: O) -> Self {\n208 | |         let page_size = O::PAGE_SIZE;\n...   |\n227 | |         Self { entries, pages }\n228 | |     }\n    | |_____- Dangling pointer detected.\n    |\nwarning: Dangling pointer detected.\n   --> src/host/data_structures/host_controllers/xhci/mod.rs:99:1\n    |\n 99 | / |one| {\n100 | |                     if let Ok(ExtendedCapability::XhciSupportedProtocol(protcol)) = one {\n...   |\n103 | |                     None\n104 | |                 }\n    | |_________________- Dangling pointer detected.\n    |\nOver visited: DefId(0:498 ~ driver_usb[eee0]::host::data_structures::host_controllers::xhci::{impl#1}::chip_hardware_reset)\nOver visited: DefId(0:513 ~ driver_usb[eee0]::host::data_structures::host_controllers::xhci::{impl#1}::init_ir)\nOver visited: DefId(0:540 ~ driver_usb[eee0]::host::data_structures::host_controllers::xhci::{impl#1}::re_enable_endpoint)\nOver visited: DefId(0:554 ~ driver_usb[eee0]::host::data_structures::host_controllers::xhci::{impl#2}::new)\nOver visited: DefId(0:557 ~ driver_usb[eee0]::host::data_structures::host_controllers::xhci::{impl#2}::control_transfer)\nOver visited: DefId(0:765 ~ driver_usb[eee0]::usb::descriptors::parser::{impl#1}::parse_function)\nOver visited: DefId(0:838 ~ driver_usb[eee0]::usb::descriptors::desc_uvc::uvc_interfaces::{impl#0}::from_u8_array)\nOver visited: DefId(0:841 ~ driver_usb[eee0]::usb::descriptors::desc_uvc::uvc_interfaces::{impl#1}::from_u8_array)\nOver visited: DefId(0:1053 ~ driver_usb[eee0]::usb::universal_drivers::hid_drivers::hid_mouse::{impl#1}::prepare_for_drive)\nwarning: Double free detected.\n   --> src/usb/universal_drivers/uvc_drivers/uvc_device_model.rs:108:5\n    |\n108 |     }\n    |     - Double free detected.\n    |\nwarning: Dangling pointer detected during unwinding.\n   --> src/lib.rs:165:1\n    |\n165 | / pub fn init_probe(&mut self) -> &mut Self {\n166 | |         // async { //todo:async it!\n...   |\n192 | |         self\n193 | |     }\n    | |_____- Dangling pointer detected during unwinding.\n    |\nOver visited: DefId(0:1330 ~ driver_usb[eee0]::{impl#0}::new_device)\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=driver_usb, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_4/dbydd/driver_usb/driver_usb\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-05-16 5:06:52.183534156 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building driver_usb v0.1.0 (current)\nerror: running cargo-doc on crate 'driver_usb' failed with output:\n-----\n   Compiling proc-macro2 v1.0.95\n   Compiling unicode-ident v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking accessor v0.3.3\n    Checking bitflags v2.9.1\n    Checking pci_types v0.6.2\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.40\n   Compiling syn v2.0.101\n    Checking spinning_top v0.3.0\n    Checking driver_common v0.1.0 (https://github.com/kern-crates/driver_common.git#2e86ed35)\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/kern-crates/memory_addr.git#8d24a00e)\n    Checking log v0.4.27\n    Checking tock-registers v0.9.0\n   Compiling num-derive v0.3.3\n   Compiling const-enum v0.1.0 (https://github.com/dbydd/const-enum-new.git#ad1a0106)\n   Compiling num-derive v0.4.2\n    Checking xhci v0.9.2 (https://github.com/dbydd/xhci.git#5a4ad17c)\n Documenting driver_usb v0.1.0 (/home/runner/check/batch_4/dbydd/driver_usb/driver_usb)\nerror[E0207]: the type parameter `T` is not constrained by the impl trait, self type, or predicates\n  --> /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/pci_interface.rs:18:6\n   |\n18 | impl<T> OSAbstractions for PlatAbstraction {\n   |      ^ unconstrained type parameter\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/pci_interface.rs:50:6\n   |\n50 | ) -> Option<XHCIPCIDriver<'a>> {\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/pci_interface.rs:73:24\n   |\n73 | impl BaseDriverOps for XHCIPCIDriver<'_> {\n   |                        ^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/pci_interface.rs:74:20\n   |\n74 |     fn device_name(&self) -> &str {\n   |                    ^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/pci_interface.rs:78:20\n   |\n78 |     fn device_type(&self) -> driver_common::DeviceType {\n   |                    ^^^^^ cannot infer type for type parameter `T`\n\nSome errors have detailed explanations: E0207, E0282.\nFor more information about an error, try `rustc --explain E0207`.\nerror: could not document `driver_usb`\n\n-----\n\nerror: failed to build rustdoc for crate driver_usb v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/dbydd/driver_usb/driver_usb --features default,driver_common,packed_drivers,pci,xhci &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate driver_usb v0.1.0\n"
            ]
          }
        },
        {
          "file": "src/usb/universal_drivers/uvc_drivers/uvc_spec_transfer.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Unformatted": [
              "file: /home/runner/check/batch_4/dbydd/driver_usb/driver_usb/src/usb/universal_drivers/uvc_drivers/uvc_spec_transfer.rs (original lines from 57 to 63)\n-        unsafe {\n-            ptr::write_bytes(\n-                self as *mut UVCStreamControlBlock,\n-                0u8,\n-                1\n-            )\n-        };\n+        unsafe { ptr::write_bytes(self as *mut UVCStreamControlBlock, 0u8, 1) };\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}