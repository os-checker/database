{
  "repo": {
    "user": "arceos-hypervisor",
    "repo": "x86_vlapic"
  },
  "data": [
    {
      "user": "arceos-hypervisor",
      "repo": "x86_vlapic",
      "pkg": "x86_vlapic",
      "count": 62,
      "raw_reports": [
        {
          "file": "src/vlapic.rs",
          "features": "",
          "count": 23,
          "kinds": {
            "Clippy(Warn)": [
              "warning: methods `apic_base` and `is_xapic_enabled` are never used\n   --> src/vlapic.rs:95:12\n    |\n63  | impl VirtualApicRegs {\n    | -------------------- methods in this implementation\n...\n95  |     pub fn apic_base(&self) -> u64 {\n    |            ^^^^^^^^^\n...\n106 |     pub fn is_xapic_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n\n",
              "warning: methods `apic_base` and `is_xapic_enabled` are never used\n   --> src/vlapic.rs:95:12\n    |\n63  | impl VirtualApicRegs {\n    | -------------------- methods in this implementation\n...\n95  |     pub fn apic_base(&self) -> u64 {\n    |            ^^^^^^^^^\n...\n106 |     pub fn is_xapic_enabled(&self) -> bool {\n    |            ^^^^^^^^^^^^^^^^\n\n",
              "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/vlapic.rs:140:19\n    |\n140 |         let tpr = self.regs().TPR.get() as u32;\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.regs().TPR.get()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:195:9\n    |\n195 |         debug!(\"Gratuitous EOI vector: {:#010X}\", vector);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n195 -         debug!(\"Gratuitous EOI vector: {:#010X}\", vector);\n195 +         debug!(\"Gratuitous EOI vector: {vector:#010X}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:372:9\n    |\n372 | /         debug!(\n373 | |             \"[VLAPIC] apic_id={:#010X} write LDR register to {:#010X}\",\n374 | |             apic_id, ldr\n375 | |         );\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:389:9\n    |\n389 |         debug!(\"[VLAPIC] write DFR register to {:#010X}\", dfr);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n389 -         debug!(\"[VLAPIC] write DFR register to {:#010X}\", dfr);\n389 +         debug!(\"[VLAPIC] write DFR register to {dfr:#010X}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:399:17\n    |\n399 |                 debug!(\"[VLAPIC] DFR in Unknown Model {:#010X}\", dfr);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n399 -                 debug!(\"[VLAPIC] DFR in Unknown Model {:#010X}\", dfr);\n399 +                 debug!(\"[VLAPIC] DFR in Unknown Model {dfr:#010X}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:439:9\n    |\n439 |         debug!(\"[VLAPIC] write ESR register to {:#010X}\", esr);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n439 -         debug!(\"[VLAPIC] write ESR register to {:#010X}\", esr);\n439 +         debug!(\"[VLAPIC] write ESR register to {esr:#010X}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:472:13\n    |\n472 |             debug!(\"[VLAPIC] Ignoring invalid IPI {:#010X}\", vec);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n472 -             debug!(\"[VLAPIC] Ignoring invalid IPI {:#010X}\", vec);\n472 +             debug!(\"[VLAPIC] Ignoring invalid IPI {vec:#010X}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:479:13\n    |\n479 |             debug!(\"[VLAPIC] Invalid ICR value {:#010X}\", vec);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n479 -             debug!(\"[VLAPIC] Invalid ICR value {:#010X}\", vec);\n479 +             debug!(\"[VLAPIC] Invalid ICR value {vec:#010X}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:495:29\n    |\n495 | ...                   debug!(\"[VLAPIC] sending IPI {} to vcpu {}\", vec, i);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n495 -                             debug!(\"[VLAPIC] sending IPI {} to vcpu {}\", vec, i);\n495 +                             debug!(\"[VLAPIC] sending IPI {vec} to vcpu {i}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:499:29\n    |\n499 | ...                   debug!(\"[VLAPIC] sending NMI to vcpu {}\", i);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n499 -                             debug!(\"[VLAPIC] sending NMI to vcpu {}\", i);\n499 +                             debug!(\"[VLAPIC] sending NMI to vcpu {i}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:508:29\n    |\n508 | ...                   error!(\"Unhandled icrlo write with mode {:?}\\n\", mode);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n508 -                             error!(\"Unhandled icrlo write with mode {:?}\\n\", mode);\n508 +                             error!(\"Unhandled icrlo write with mode {mode:?}\\n\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:528:17\n    |\n528 |                 warn!(\"[VLAPIC] read unsupported APIC register: {:?}\", offset);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n528 -                 warn!(\"[VLAPIC] read unsupported APIC register: {:?}\", offset);\n528 +                 warn!(\"[VLAPIC] read unsupported APIC register: {offset:?}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:619:17\n    |\n619 |                 warn!(\"[VLAPIC] write unsupported APIC register: {:?}\", offset);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n619 -                 warn!(\"[VLAPIC] write unsupported APIC register: {:?}\", offset);\n619 +                 warn!(\"[VLAPIC] write unsupported APIC register: {offset:?}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:698:17\n    |\n698 |                 warn!(\"[VLAPIC] read EOI register: {:#010X}\", value);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n698 -                 warn!(\"[VLAPIC] read EOI register: {:#010X}\", value);\n698 +                 warn!(\"[VLAPIC] read EOI register: {value:#010X}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:726:21\n    |\n726 |                     debug!(\"[VLAPIC] read ICR register: {:#018X}\", value);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n726 -                     debug!(\"[VLAPIC] read ICR register: {:#018X}\", value);\n726 +                     debug!(\"[VLAPIC] read ICR register: {value:#018X}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:779:17\n    |\n779 |                 debug!(\"[VLAPIC] read TimerInitCount register: {:#010X}\", value);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n779 -                 debug!(\"[VLAPIC] read TimerInitCount register: {:#010X}\", value);\n779 +                 debug!(\"[VLAPIC] read TimerInitCount register: {value:#010X}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:788:17\n    |\n788 |                 warn!(\"[VLAPIC] read unknown APIC register: {:?}\", offset);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n788 -                 warn!(\"[VLAPIC] read unknown APIC register: {:?}\", offset);\n788 +                 warn!(\"[VLAPIC] read unknown APIC register: {offset:?}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:791:9\n    |\n791 |         debug!(\"[VLAPIC] read {} register: {:#010X}\", offset, value);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n791 -         debug!(\"[VLAPIC] read {} register: {:#010X}\", offset, value);\n791 +         debug!(\"[VLAPIC] read {offset} register: {value:#010X}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:829:21\n    |\n829 |                     debug!(\"[VLAPIC] write ICR register: {:#018X} in X2APIC mode\", val);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n829 -                     debug!(\"[VLAPIC] write ICR register: {:#018X} in X2APIC mode\", val);\n829 +                     debug!(\"[VLAPIC] write ICR register: {val:#018X} in X2APIC mode\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:901:17\n    |\n901 |                 warn!(\"[VLAPIC] write unsupported APIC register: {:?}\", offset);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n901 -                 warn!(\"[VLAPIC] write unsupported APIC register: {:?}\", offset);\n901 +                 warn!(\"[VLAPIC] write unsupported APIC register: {offset:?}\");\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/vlapic.rs:906:9\n    |\n906 |         debug!(\"[VLAPIC] write {} register: {:#010X}\", offset, val);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n906 -         debug!(\"[VLAPIC] write {} register: {:#010X}\", offset, val);\n906 +         debug!(\"[VLAPIC] write {offset} register: {val:#010X}\");\n    |\n\n"
            ]
          }
        },
        {
          "file": "src/consts.rs",
          "features": "",
          "count": 16,
          "kinds": {
            "Clippy(Warn)": [
              "warning: constant `LAPIC_TRIG_LEVEL` is never used\n   --> src/consts.rs:201:11\n    |\n201 | pub const LAPIC_TRIG_LEVEL: bool = true;\n    |           ^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: name `TPR` contains a capitalized acronym\n  --> src/consts.rs:67:5\n   |\n67 |     TPR,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Tpr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n",
              "warning: name `APR` contains a capitalized acronym\n  --> src/consts.rs:69:5\n   |\n69 |     APR,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Apr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: name `PPR` contains a capitalized acronym\n  --> src/consts.rs:71:5\n   |\n71 |     PPR,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Ppr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: name `EOI` contains a capitalized acronym\n  --> src/consts.rs:73:5\n   |\n73 |     EOI,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eoi`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: name `RRR` contains a capitalized acronym\n  --> src/consts.rs:75:5\n   |\n75 |     RRR,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rrr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: name `LDR` contains a capitalized acronym\n  --> src/consts.rs:77:5\n   |\n77 |     LDR,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Ldr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: name `DFR` contains a capitalized acronym\n  --> src/consts.rs:79:5\n   |\n79 |     DFR,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Dfr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: name `SIVR` contains a capitalized acronym\n  --> src/consts.rs:81:5\n   |\n81 |     SIVR,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Sivr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: name `ISR` contains a capitalized acronym\n  --> src/consts.rs:83:5\n   |\n83 |     ISR(ISRIndex),\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Isr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: name `TMR` contains a capitalized acronym\n  --> src/consts.rs:85:5\n   |\n85 |     TMR(TMRIndex),\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Tmr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: name `IRR` contains a capitalized acronym\n  --> src/consts.rs:87:5\n   |\n87 |     IRR(IRRIndex),\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Irr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: name `ESR` contains a capitalized acronym\n  --> src/consts.rs:89:5\n   |\n89 |     ESR,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Esr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/consts.rs:167:42\n    |\n167 |             ApicRegOffset::ISR(index) => write!(f, \"{:?}\", index),\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n    = note: `#[warn(clippy::uninlined_format_args)]` on by default\nhelp: change this to\n    |\n167 -             ApicRegOffset::ISR(index) => write!(f, \"{:?}\", index),\n167 +             ApicRegOffset::ISR(index) => write!(f, \"{index:?}\"),\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/consts.rs:168:42\n    |\n168 |             ApicRegOffset::TMR(index) => write!(f, \"{:?}\", index),\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n168 -             ApicRegOffset::TMR(index) => write!(f, \"{:?}\", index),\n168 +             ApicRegOffset::TMR(index) => write!(f, \"{index:?}\"),\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/consts.rs:169:42\n    |\n169 |             ApicRegOffset::IRR(index) => write!(f, \"{:?}\", index),\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\nhelp: change this to\n    |\n169 -             ApicRegOffset::IRR(index) => write!(f, \"{:?}\", index),\n169 +             ApicRegOffset::IRR(index) => write!(f, \"{index:?}\"),\n    |\n\n"
            ]
          }
        },
        {
          "file": "src/timer.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Clippy(Warn)": [
              "warning: methods `read_lvt`, `read_icr`, `read_dcr`, and `is_masked` are never used\n   --> src/timer.rs:90:12\n    |\n59  | impl ApicTimer {\n    | -------------- methods in this implementation\n...\n90  |     pub fn read_lvt(&self) -> u32 {\n    |            ^^^^^^^^\n...\n103 |     pub fn read_icr(&self) -> u32 {\n    |            ^^^^^^^^\n...\n120 |     pub fn read_dcr(&self) -> u32 {\n    |            ^^^^^^^^\n...\n165 |     pub fn is_masked(&self) -> bool {\n    |            ^^^^^^^^^\n\n",
              "warning: methods `read_lvt`, `read_icr`, `read_dcr`, and `is_masked` are never used\n   --> src/timer.rs:90:12\n    |\n59  | impl ApicTimer {\n    | -------------- methods in this implementation\n...\n90  |     pub fn read_lvt(&self) -> u32 {\n    |            ^^^^^^^^\n...\n103 |     pub fn read_icr(&self) -> u32 {\n    |            ^^^^^^^^\n...\n120 |     pub fn read_dcr(&self) -> u32 {\n    |            ^^^^^^^^\n...\n165 |     pub fn is_masked(&self) -> bool {\n    |            ^^^^^^^^^\n\n",
              "warning: methods `read_lvt`, `read_icr`, `read_dcr`, and `is_masked` are never used\n   --> src/timer.rs:90:12\n    |\n59  | impl ApicTimer {\n    | -------------- methods in this implementation\n...\n90  |     pub fn read_lvt(&self) -> u32 {\n    |            ^^^^^^^^\n...\n103 |     pub fn read_icr(&self) -> u32 {\n    |            ^^^^^^^^\n...\n120 |     pub fn read_dcr(&self) -> u32 {\n    |            ^^^^^^^^\n...\n165 |     pub fn is_masked(&self) -> bool {\n    |            ^^^^^^^^^\n\n",
              "warning: methods `read_lvt`, `read_icr`, `read_dcr`, and `is_masked` are never used\n   --> src/timer.rs:90:12\n    |\n59  | impl ApicTimer {\n    | -------------- methods in this implementation\n...\n90  |     pub fn read_lvt(&self) -> u32 {\n    |            ^^^^^^^^\n...\n103 |     pub fn read_icr(&self) -> u32 {\n    |            ^^^^^^^^\n...\n120 |     pub fn read_dcr(&self) -> u32 {\n    |            ^^^^^^^^\n...\n165 |     pub fn is_masked(&self) -> bool {\n    |            ^^^^^^^^^\n\n",
              "warning: unneeded `return` statement\n   --> src/timer.rs:154:9\n    |\n154 |         return (remaining_ticks >> self.divide_shift) as _;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n154 -         return (remaining_ticks >> self.divide_shift) as _;\n154 +         (remaining_ticks >> self.divide_shift) as _\n    |\n\n",
              "warning: unneeded `return` statement\n   --> src/timer.rs:183:13\n    |\n183 |             return Ok(());\n    |             ^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n183 -             return Ok(());\n183 +             Ok(())\n    |\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/timer.rs:202:9\n    |\n202 | /         trace!(\n203 | |             \"vlapic @ (vm {}, vcpu {}) starts timer @ tick {:?}, deadline tick {:?}\",\n204 | |             vm_id, vcpu_id, current_ticks, deadline_ticks\n205 | |         );\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/timer.rs:214:17\n    |\n214 | /                 trace!(\n215 | |                     \"vlapic @ (vm {}, vcpu {}) timer expired, inject interrupt {}\",\n216 | |                     vm_id, vcpu_id, vector\n217 | |                 );\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n"
            ]
          }
        },
        {
          "file": "src/lib.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: variables can be used directly in the `format!` string\n   --> src/lib.rs:98:9\n    |\n98  | /         debug!(\n99  | |             \"EmulatedLocalApic::handle_read: addr={:?}, width={:?}\",\n100 | |             addr, width,\n101 | |         );\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/lib.rs:107:9\n    |\n107 | /         debug!(\n108 | |             \"EmulatedLocalApic::handle_write: addr={:?}, width={:?}, val={:#x}\",\n109 | |             addr, width, val,\n110 | |         );\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/lib.rs:130:9\n    |\n130 | /         debug!(\n131 | |             \"EmulatedLocalApic::handle_read: addr={:?}, width={:?}\",\n132 | |             addr, width,\n133 | |         );\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n",
              "warning: variables can be used directly in the `format!` string\n   --> src/lib.rs:139:9\n    |\n139 | /         debug!(\n140 | |             \"EmulatedLocalApic::handle_write: addr={:?}, width={:?}, val={:#x}\",\n141 | |             addr, width, val\n142 | |         );\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args\n\n"
            ]
          }
        },
        {
          "file": "src/regs/apic_base.rs",
          "features": "",
          "count": 3,
          "kinds": {
            "Clippy(Warn)": [
              "warning: doc list item without indentation\n  --> src/regs/apic_base.rs:51:5\n   |\n51 | /// Table 11-5, “x2APIC operating mode configurations” describe the possible combinations of the enable bit (EN - bit 11)\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n51 | ///   Table 11-5, “x2APIC operating mode configurations” describe the possible combinations of the enable bit (EN - bit 11)\n   |     ++\n\n",
              "warning: doc list item without indentation\n  --> src/regs/apic_base.rs:52:5\n   |\n52 | /// and the extended mode bit (EXTD - bit 10) in the IA32_APIC_BASE MSR.\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n52 | ///   and the extended mode bit (EXTD - bit 10) in the IA32_APIC_BASE MSR.\n   |     ++\n\n",
              "warning: doc list item without indentation\n  --> src/regs/apic_base.rs:53:5\n   |\n53 | /// (xAPIC global enable (IA32_APIC_BASE[11]),x2APIC enable (IA32_APIC_BASE[10])) = Description\n   |     ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n53 | ///   (xAPIC global enable (IA32_APIC_BASE[11]),x2APIC enable (IA32_APIC_BASE[10])) = Description\n   |     ++\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:36:23: 36:43 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:39:13: 39:39 (#0)\",\n    \"dep_kind\": \"Both\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=x86_vlapic, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/x86_vlapic\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-07-29 4:34:28.015754006 +08:00:00\n    Building x86_vlapic v0.1.0 (current)\n       Built [  11.890s] (current)\n     Parsing x86_vlapic v0.1.0 (current)\n      Parsed [   0.050s] (current)\nerror: x86_vlapic not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x86_vlapic 0.1.0\n└── riscv 0.14.0\n    └── page_table_multiarch 0.5.5\n        └── axaddrspace 0.1.0\n            ├── x86_vlapic 0.1.0\n            ├── axvisor_api 0.1.0\n            │   └── x86_vlapic 0.1.0\n            └── axdevice_base 0.1.0\n                └── x86_vlapic 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 792,\n    \"last-commit\": \"c62e71ad8c5256ffa3cafbb1a8c687db60869e98\",\n    \"last-updated\": \"2025-07-23T15:03:26+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 69\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-07-28T20:35:13Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-07-28T20:35:13Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-07-28T20:35:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1455:11: 1455:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs:1458:13: 1458:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-07-28T20:35:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=x86_vlapic, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/x86_vlapic\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-07-29 4:34:41.312822679 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building x86_vlapic v0.1.0 (current)\n       Built [  11.890s] (current)\n     Parsing x86_vlapic v0.1.0 (current)\n      Parsed [   0.050s] (current)\nerror: x86_vlapic not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "src/regs/dfr.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: type alias `DestinationFormatRegisterLocal` is never used\n  --> src/regs/dfr.rs:38:10\n   |\n38 | pub type DestinationFormatRegisterLocal = LocalRegisterCopy<u32, DESTINATION_FORMAT::Register>;\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "src/regs/timer/dcr.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: type alias `DivideConfigurationRegisterLocal` is never used\n  --> src/regs/timer/dcr.rs:42:10\n   |\n42 | pub type DivideConfigurationRegisterLocal = LocalRegisterCopy<u32, DCR_TIMER::Register>;\n   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}