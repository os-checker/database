{
  "repo": {
    "user": "arceos-hypervisor",
    "repo": "axvm"
  },
  "data": [
    {
      "user": "arceos-hypervisor",
      "repo": "axvm",
      "pkg": "axvm",
      "count": 5,
      "raw_reports": [
        {
          "file": "(virtual) semver-checks",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axvm, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_13/arceos-hypervisor/axvm\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 1:09:52.766620249 +08:00:00\n    Building axvm v0.1.0 (current)\n       Built [   9.714s] (current)\n     Parsing axvm v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_13/arceos-hypervisor/axvm/target/semver-checks/local-axvm-0_1_0-0db83c503a4fd016/target/x86_64-unknown-linux-gnu/doc/axvm.json\n"
            ]
          }
        },
        {
          "file": "[outdated direct dependencies]",
          "count": 1,
          "kinds": {
            "Outdated": [
              "pkg=axvm, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_13/arceos-hypervisor/axvm\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 1:11:16.755253108 +08:00:00\n\nName    Project  Compat  Latest  Kind    Platform\n----    -------  ------  ------  ----    --------\npercpu  0.1.7    ---     0.2.0   Normal  ---\n"
            ]
          }
        },
        {
          "file": "[semver checks]",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axvm, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_13/arceos-hypervisor/axvm\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-01-27 1:10:03.962708275 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axvm v0.1.0 (current)\n       Built [   9.714s] (current)\n     Parsing axvm v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_13/arceos-hypervisor/axvm/target/semver-checks/local-axvm-0_1_0-0db83c503a4fd016/target/x86_64-unknown-linux-gnu/doc/axvm.json\n"
            ]
          }
        },
        {
          "file": "src/config.rs",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: empty line after doc comment\n  --> src/config.rs:16:1\n   |\n16 | / /// The concrete type of configuration is defined in `AxArchVCpuImpl`.\n...  |\n22 | |\n   | |_^\n...\n25 |   pub struct AxVCpuConfig {\n   |   ----------------------- the comment documents this struct\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = note: `#[warn(clippy::empty_line_after_doc_comments)]` on by default\n   = help: if the empty line is unintentional remove it\nhelp: if the doc comment should not document `AxVCpuConfig` comment it out\n   |\n14 ~ // /// A part of `AxVCpuConfig`, which represents an architecture-dependent `VCpu`.\n15 ~ // ///\n16 ~ // /// The concrete type of configuration is defined in `AxArchVCpuImpl`.\n   |\n\n"
            ]
          }
        },
        {
          "file": "src/vm.rs",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: this let-binding has unit value\n  --> src/vm.rs:84:17\n   |\n84 |                 let arch_config = AxVCpuCreateConfig::default();\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n   = note: `#[warn(clippy::let_unit_value)]` on by default\nhelp: omit the `let` binding and replace variable usages with `()`\n   |\n84 ~                 AxVCpuCreateConfig::default();\n85 |\n...\n89 |                     phys_cpu_set,\n90 ~                     (),\n   |\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}