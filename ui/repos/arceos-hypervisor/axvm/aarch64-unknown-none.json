{
  "repo": {
    "user": "arceos-hypervisor",
    "repo": "axvm"
  },
  "data": [
    {
      "user": "arceos-hypervisor",
      "repo": "axvm",
      "pkg": "axvm",
      "count": 12,
      "raw_reports": [
        {
          "file": "src/vm.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused import: `AxArchVCpu`\n  --> src/vm.rs:14:14\n   |\n14 | use axvcpu::{AxArchVCpu, AxVCpu, AxVCpuExitReason, AxVCpuHal};\n   |              ^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n",
              "warning: useless conversion to the same type: `axaddrspace::device::AccessWidth`\n   --> src/vm.rs:440:50\n    |\n440 |                         .handle_mmio_read(*addr, (*width).into())?;\n    |                                                  ^^^^^^^^^^^^^^^ help: consider removing `.into()`: `(*width)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n",
              "warning: useless conversion to the same type: `axaddrspace::device::AccessWidth`\n   --> src/vm.rs:446:51\n    |\n446 |                         .handle_mmio_write(*addr, (*width).into(), *data as usize)?;\n    |                                                   ^^^^^^^^^^^^^^^ help: consider removing `.into()`: `(*width)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n",
              "warning: you seem to use `.enumerate()` and immediately discard the index\n   --> src/vm.rs:594:36\n    |\n594 |                 for (_i, chunk) in buffer.iter_mut().enumerate() {\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_enumerate_index\n    = note: `#[warn(clippy::unused_enumerate_index)]` on by default\nhelp: remove the `.enumerate()` call\n    |\n594 -                 for (_i, chunk) in buffer.iter_mut().enumerate() {\n594 +                 for chunk in buffer.iter_mut() {\n    |\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axvm, checker=Lockbud\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/axvm\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target aarch64-unknown-none \n// timestamp=2025-09-27 4:32:55.68108565 +08:00:00\n   Compiling tock-registers v0.9.0\n   Compiling serde_core v1.0.227\n   Compiling memory_addr v0.4.0\n   Compiling log v0.4.21\n   Compiling aarch64-cpu v10.0.0\n   Compiling axerrno v0.1.0\n   Compiling bitflags v2.9.4\n[2025-09-26T20:32:55Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-26T20:32:55Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.3\n   Compiling memory_set v0.4.0\n   Compiling lazyinit v0.2.2\n   Compiling numeric-enum-macro v0.2.0\n   Compiling winnow v0.7.13\n   Compiling bit_field v0.10.3\n   Compiling serde v1.0.227\n   Compiling lock_api v0.4.13\n   Compiling toml_writer v1.0.3\n   Compiling scopeguard v1.2.0\n   Compiling enumerable v1.2.0\n   Compiling bitmaps v3.2.1\n   Compiling percpu v0.2.0\n   Compiling spin v0.9.8\n   Compiling aarch64_sysreg v0.1.1\n   Compiling toml_parser v1.0.3\n   Compiling toml_datetime v0.7.2\n   Compiling page_table_entry v0.5.5\n   Compiling page_table_multiarch v0.5.5\n   Compiling serde_spanned v1.0.2\n   Compiling axaddrspace v0.1.2\n   Compiling toml v0.9.7\n   Compiling axvisor_api v0.1.0\n   Compiling tock-registers v0.10.0\n   Compiling axvcpu v0.1.1\n   Compiling spin v0.10.0\n   Compiling range-alloc v0.1.4 (https://github.com/arceos-hypervisor/range-alloc.git#fc826e54)\n   Compiling cpumask v0.1.0\n   Compiling axvmconfig v0.1.0\n   Compiling axdevice_base v0.1.0\n   Compiling arm_vgic v0.1.0 (https://github.com/arceos-hypervisor/arm_vgic.git#81338d6d)\n   Compiling arm_vcpu v0.1.1\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arm_vcpu-0.1.1/src/exception.rs:344:5\n    |\n344 |     core::arch::naked_asm!(\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `naked_functions`\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arm_vcpu-0.1.1/src/vcpu.rs:271:9\n    |\n271 |         core::arch::naked_asm!(\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arm_vcpu-0.1.1/src/exception.rs:341:3\n    |\n341 | #[unsafe(naked)]\n    |   ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror: `naked` is not an unsafe attribute\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arm_vcpu-0.1.1/src/vcpu.rs:262:7\n    |\n262 |     #[unsafe(naked)]\n    |       ^^^^^^ this is not an unsafe attribute\n    |\n    = note: extraneous unsafe is not allowed in attributes\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arm_vcpu-0.1.1/src/exception.rs:341:1\n    |\n341 | #[unsafe(naked)]\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: the `#[naked]` attribute is an experimental feature\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arm_vcpu-0.1.1/src/vcpu.rs:262:5\n    |\n262 |     #[unsafe(naked)]\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #90957 <https://github.com/rust-lang/rust/issues/90957> for more information\n    = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `unbounded_shifts`\n   --> /home/runner/.cargo/git/checkouts/arm_vgic-b384246a38896b9b/81338d6/src/v3/gits.rs:115:39\n    |\n115 | ...                   & (1usize.unbounded_shl(width.size() as u32 * 8) - 1),\n    |                                 ^^^^^^^^^^^^^\n    |\n    = note: see issue #129375 <https://github.com/rust-lang/rust/issues/129375> for more information\n    = help: add `#![feature(unbounded_shifts)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nerror[E0658]: use of unstable library feature `unbounded_shifts`\n   --> /home/runner/.cargo/git/checkouts/arm_vgic-b384246a38896b9b/81338d6/src/v3/gits.rs:125:39\n    |\n125 | ...                   & (1usize.unbounded_shl(width.size() as u32 * 8) - 1),\n    |                                 ^^^^^^^^^^^^^\n    |\n    = note: see issue #129375 <https://github.com/rust-lang/rust/issues/129375> for more information\n    = help: add `#![feature(unbounded_shifts)]` to the crate attributes to enable\n    = note: this compiler was built on 2025-01-31; consider upgrading it if it is out of date\n\nFor more information about this error, try `rustc --explain E0658`.\nerror: could not compile `arm_vcpu` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `arm_vgic` (lib) due to 2 previous errors\n"
            ]
          }
        },
        {
          "file": "(virtual) outdated",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axvm, checker=Outdated\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/axvm\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n// timestamp=2025-09-27 4:33:10.667216521 +08:00:00\n    Updating git repository `https://github.com/arceos-hypervisor/axdevice.git`\nerror: failed to select a version for `log`.\n    ... required by package `axdevice v0.1.0 (https://github.com/arceos-hypervisor/axdevice.git#c4a0965c)`\n    ... which satisfies git dependency `axdevice` of package `axvm v0.1.0 (/tmp/cargo-outdatedXTyssB)`\nversions that meet the requirements `=0.4.21` are: 0.4.21\n\nall possible versions conflict with previously selected packages.\n\n  previously selected package `log v0.4.28`\n    ... which satisfies dependency `log = \"^0.4.28\"` of package `axvm v0.1.0 (/tmp/cargo-outdatedXTyssB)`\n\nfailed to select a version for `log` which could resolve this conflict\n"
            ]
          }
        },
        {
          "file": "(virtual) semver-checks",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axvm, checker=SemverChecks\n// toolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/axvm\n// cmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-09-27 4:32:15.301992997 +08:00:00\n    Building axvm v0.1.0 (current)\n       Built [   9.221s] (current)\n     Parsing axvm v0.1.0 (current)\n      Parsed [   0.003s] (current)\nerror: axvm not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x86_vlapic 0.1.0\n│   └── x86_vcpu 0.1.0\n│       └── axvm 0.1.0\n├── x86_vcpu 0.1.0\n└── riscv 0.14.0\n    ├── riscv_vcpu 0.1.2\n    │   └── axvm 0.1.0\n    ├── riscv-h 0.1.0\n    │   └── riscv_vcpu 0.1.2\n    └── page_table_multiarch 0.5.5\n        ├── axvm 0.1.0\n        └── axaddrspace 0.1.2\n            ├── x86_vlapic 0.1.0\n            ├── x86_vcpu 0.1.0\n            ├── riscv_vcpu 0.1.2\n            ├── axvm 0.1.0\n            ├── axvisor_api 0.1.0\n            │   ├── x86_vlapic 0.1.0\n            │   ├── x86_vcpu 0.1.0\n            │   ├── riscv_vcpu 0.1.2\n            │   ├── axvcpu 0.1.1\n            │   │   ├── x86_vcpu 0.1.0\n            │   │   ├── riscv_vcpu 0.1.2\n            │   │   ├── axvm 0.1.0\n            │   │   └── arm_vcpu 0.1.1\n            │   │       └── axvm 0.1.0\n            │   ├── arm_vgic 0.1.0\n            │   │   └── axdevice 0.1.0\n            │   │       └── axvm 0.1.0\n            │   ├── arm_vgic 0.1.0\n            │   │   └── axvm 0.1.0\n            │   └── arm_vcpu 0.1.1\n            ├── axvcpu 0.1.1\n            ├── axdevice_base 0.1.0\n            │   ├── x86_vlapic 0.1.0\n            │   ├── x86_vcpu 0.1.0\n            │   ├── axvm 0.1.0\n            │   ├── axdevice 0.1.0\n            │   ├── arm_vgic 0.1.0\n            │   ├── arm_vgic 0.1.0\n            │   └── arm_vcpu 0.1.1\n            ├── axdevice 0.1.0\n            ├── arm_vgic 0.1.0\n            ├── arm_vgic 0.1.0\n            └── arm_vcpu 0.1.1\n\n\n{\n  \"database\": {\n    \"advisory-count\": 820,\n    \"last-commit\": \"fb0d06e8e2cc04c9aa359e51ffa0a09e3bf58822\",\n    \"last-updated\": \"2025-09-22T08:05:57+02:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 84\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\\n\\n## Possible Alternative(s)\\n\\n- [pastey](https://crates.io/crates/pastey), a fork of paste and is aimed to be a drop-in replacement with additional features for paste crate\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[Lockbud] deadlock detection",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-09-26T20:32:55Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-09-26T20:32:55Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "[semver checks violation]",
          "features": "",
          "count": 1,
          "kinds": {
            "Semver Violation": [
              "pkg=axvm, checker=SemverChecks\ntoolchain=nightly-2025-06-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/arceos-hypervisor/axvm\ncmd=cargo +nightly-2025-06-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-09-27 4:32:25.139983912 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axvm v0.1.0 (current)\n       Built [   9.221s] (current)\n     Parsing axvm v0.1.0 (current)\n      Parsed [   0.003s] (current)\nerror: axvm not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
            ]
          }
        },
        {
          "file": "src/config.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: empty line after doc comment\n  --> src/config.rs:17:1\n   |\n17 | / /// The concrete type of configuration is defined in `AxArchVCpuImpl`.\n...  |\n23 | |\n   | |_^\n...\n26 |   pub struct AxVCpuConfig {\n   |   ----------------------- the comment documents this struct\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = note: `#[warn(clippy::empty_line_after_doc_comments)]` on by default\n   = help: if the empty line is unintentional, remove it\nhelp: if the doc comment should not document struct `AxVCpuConfig` then comment it out\n   |\n15 ~ // /// A part of `AxVCpuConfig`, which represents an architecture-dependent `VCpu`.\n16 ~ // ///\n17 ~ // /// The concrete type of configuration is defined in `AxArchVCpuImpl`.\n   |\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Atomvchecker",
    "Outdated",
    "Geiger",
    "Unused Deps",
    "Unformatted"
  ]
}