{
  "repo": {
    "user": "arceos-hypervisor",
    "repo": "axvisor"
  },
  "data": [
    {
      "user": "arceos-hypervisor",
      "repo": "axvisor",
      "pkg": "axvisor",
      "count": 29,
      "raw_reports": [
        {
          "file": "src/vmm/vcpus.rs",
          "features": "",
          "count": 8,
          "kinds": {
            "Clippy(Warn)": [
              "warning: function call inside of `expect`\n   --> src/vmm/vcpus.rs:342:26\n    |\n342 |                           .expect(&format!(\n    |  __________________________^\n343 | |                             \"Physical CPU ID {} not found in VM configuration\",\n344 | |                             target_cpu\n345 | |                         ));\n    | |__________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_fun_call\n    = note: `#[warn(clippy::expect_fun_call)]` on by default\nhelp: try\n    |\n342 ~                         .unwrap_or_else(|| panic!(\"Physical CPU ID {} not found in VM configuration\",\n343 ~                             target_cpu));\n    |\n\n"
            ],
            "Clippy(Error)": [
              "error: creating a shared reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:118:14\n    |\n118 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get(&vm_id) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n    = note: `#[deny(static_mut_refs)]` on by default\n\n",
              "error: creating a shared reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:135:14\n    |\n135 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get(&vm_id) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
              "error: creating a mutable reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:149:14\n    |\n149 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get_mut(&vm_id) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
              "error: creating a shared reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:156:14\n    |\n156 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get(&vm_id) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
              "error: creating a shared reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:164:14\n    |\n164 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get(&vm_id) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\n",
              "error: creating a mutable reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:205:14\n    |\n205 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get_mut(&vm.id()) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n",
              "error: creating a mutable reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:229:9\n    |\n229 |         VM_VCPU_TASK_WAIT_QUEUE.insert(vm_id, vm_vcpus);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\n"
            ]
          }
        },
        {
          "file": "src/utils/arch/riscv/mod.rs",
          "features": "",
          "count": 6,
          "kinds": {
            "Clippy(Warn)": [
              "warning: unused variable: `start`\n --> src/utils/arch/riscv/mod.rs:4:38\n  |\n4 |     pub unsafe fn cache_invalidate_d(start: usize, len: usize) {\n  |                                      ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\n",
              "warning: unused variable: `len`\n --> src/utils/arch/riscv/mod.rs:4:52\n  |\n4 |     pub unsafe fn cache_invalidate_d(start: usize, len: usize) {\n  |                                                    ^^^ help: if this is intentional, prefix it with an underscore: `_len`\n\n",
              "warning: unused variable: `start`\n --> src/utils/arch/riscv/mod.rs:8:44\n  |\n8 |     pub unsafe fn cache_clean_invalidate_d(start: usize, len: usize) {\n  |                                            ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`\n\n",
              "warning: unused variable: `len`\n --> src/utils/arch/riscv/mod.rs:8:58\n  |\n8 |     pub unsafe fn cache_clean_invalidate_d(start: usize, len: usize) {\n  |                                                          ^^^ help: if this is intentional, prefix it with an underscore: `_len`\n\n",
              "warning: function `cache_invalidate_d` is never used\n --> src/utils/arch/riscv/mod.rs:4:19\n  |\n4 |     pub unsafe fn cache_invalidate_d(start: usize, len: usize) {\n  |                   ^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n",
              "warning: function `cache_clean_invalidate_d` is never used\n --> src/utils/arch/riscv/mod.rs:8:19\n  |\n8 |     pub unsafe fn cache_clean_invalidate_d(start: usize, len: usize) {\n  |                   ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "src/utils/mod.rs",
          "features": "",
          "count": 4,
          "kinds": {
            "Clippy(Warn)": [
              "warning[E0133]: call to unsafe function `utils::arch::riscv::cache::cache_invalidate_d` is unsafe and requires unsafe block\n --> src/utils/mod.rs:6:9\n  |\n6 |         super::arch::cache::cache_invalidate_d(start, len);\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n  |\n  = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n  = note: consult the function's documentation for information on how to avoid undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n --> src/utils/mod.rs:5:5\n  |\n5 |     pub unsafe fn cache_invalidate_d(start: usize, len: usize) {\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  = note: `#[warn(unsafe_op_in_unsafe_fn)]` on by default\n\n",
              "warning[E0133]: call to unsafe function `utils::arch::riscv::cache::cache_clean_invalidate_d` is unsafe and requires unsafe block\n  --> src/utils/mod.rs:10:9\n   |\n10 |         super::arch::cache::cache_clean_invalidate_d(start, len);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n   = note: consult the function's documentation for information on how to avoid undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n  --> src/utils/mod.rs:9:5\n   |\n9  |     pub unsafe fn cache_clean_invalidate_d(start: usize, len: usize) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
              "warning: function `cache_invalidate_d` is never used\n --> src/utils/mod.rs:5:19\n  |\n5 |     pub unsafe fn cache_invalidate_d(start: usize, len: usize) {\n  |                   ^^^^^^^^^^^^^^^^^^\n\n",
              "warning: function `cache_clean_invalidate_d` is never used\n --> src/utils/mod.rs:9:19\n  |\n9 |     pub unsafe fn cache_clean_invalidate_d(start: usize, len: usize) {\n  |                   ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
            ]
          }
        },
        {
          "file": "src/vmm/timer.rs",
          "features": "",
          "count": 2,
          "kinds": {
            "Clippy(Warn)": [
              "warning: redundant field names in struct initialization\n  --> src/vmm/timer.rs:31:13\n   |\n31 |             token: token,\n   |             ^^^^^^^^^^^^ help: replace it with: `token`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n   = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n",
              "warning: casting to the same type is unnecessary (`u64` -> `u64`)\n  --> src/vmm/timer.rs:62:38\n   |\n62 |     timers.set(TimeValue::from_nanos(deadline as u64), event);\n   |                                      ^^^^^^^^^^^^^^^ help: try: `deadline`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n    \"dep_kind\": \"Both\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"set_logger_racy\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "{\n  \"bug_kind\": \"AtomicityViolation\",\n  \"possibility\": \"Possibly\",\n  \"diagnosis\": {\n    \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n    \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n    \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n    \"dep_kind\": \"Control\"\n  },\n  \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n}"
            ]
          }
        },
        {
          "file": "(virtual) clippy",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axvisor, checker=Clippy\n// toolchain=nightly-2024-12-25, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_2/arceos-hypervisor/axvisor\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf  --no-deps\n// timestamp=2025-05-28 4:31:10.867459458 +08:00:00\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling axerrno v0.1.0\n    Checking memory_addr v0.3.2\n    Checking bit_field v0.10.2\n   Compiling paste v1.0.15\n   Compiling riscv v0.12.1\n   Compiling riscv-macros v0.1.0\n    Checking riscv-pac v0.2.0\n    Checking embedded-hal v1.0.0\n   Compiling once_cell v1.21.3\n    Checking bitflags v2.9.0\n    Checking critical-section v1.2.0\n   Compiling const-random-macro v0.1.16\n    Checking page_table_entry v0.5.3\n    Checking lazyinit v0.2.1\n   Compiling percpu v0.2.0\n    Checking sbi-spec v0.0.7\n    Checking sbi-rt v0.0.3\n    Checking kernel_guard v0.1.2\n    Checking memory_set v0.3.2\n    Checking tock-registers v0.8.1\n    Checking const-default v1.0.0\n    Checking rlsf v0.2.1\n    Checking kspin v0.1.0\n    Checking bitmap-allocator v0.2.0\n   Compiling serde v1.0.219\n   Compiling axconfig v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling memchr v2.7.4\n    Checking allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n    Checking axalloc v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling axhal v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n    Checking linkme v0.3.32\n    Checking axlog v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n    Checking cortex-a v8.1.1\n    Checking page_table_multiarch v0.5.3\n   Compiling aho-corasick v1.1.3\n    Checking int_ratio v0.1.1\n    Checking static_assertions v1.1.0\n   Compiling semver-parser v0.7.0\n   Compiling regex-syntax v0.8.5\n    Checking handler_table v0.1.2\n   Compiling semver v0.9.0\n    Checking const-random v0.1.18\n   Compiling ahash v0.8.11\n    Checking zerocopy v0.7.35\n    Checking linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n    Checking bitmaps v3.2.1\n    Checking scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n   Compiling regex-automata v0.4.9\n    Checking cpumask v0.1.0\n   Compiling rustc_version v0.2.3\n   Compiling num-traits v0.2.19\n    Checking allocator-api2 v0.2.21\n   Compiling lazy_static v1.5.0\n    Checking numeric-enum-macro v0.2.0\n    Checking equivalent v1.0.2\n    Checking hashbrown v0.15.2\n    Checking timer_list v0.1.0\n    Checking axtask v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n    Checking hashbrown v0.14.5\n    Checking indexmap v2.8.0\n    Checking axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#2ed4d076)\n   Compiling bare-metal v0.2.5\n    Checking toml_datetime v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking serde_spanned v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n   Compiling ctor_bare_macros v0.2.1\n    Checking winnow v0.6.26\n    Checking chrono v0.4.40\n   Compiling regex v1.11.1\n   Compiling riscv-target v0.1.2\n    Checking ctor_bare v0.2.1\n    Checking toml_edit v0.22.15 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n    Checking axmm v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling lock_api v0.4.12\n   Compiling memoffset v0.9.1\n   Compiling prettyplease v0.2.31\n    Checking axruntime v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n    Checking axsync v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling serde_repr v0.1.20\n   Compiling rustsbi-macros v0.0.2\n    Checking toml v0.8.14 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking scopeguard v1.2.0\n    Checking bitflags v1.3.2\n    Checking axvmconfig v0.1.0 (https://github.com/arceos-hypervisor/axvmconfig.git#19e73fc7)\n    Checking rustsbi v0.4.0\n    Checking axfeat v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n    Checking axdevice_base v0.1.0 (https://github.com/arceos-hypervisor/axdevice_crates.git#28d49f14)\n    Checking axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#34fc1067)\n    Checking axio v0.1.1\n    Checking riscv-decode v0.2.1 (https://github.com/KuangjuX/riscv-decode.git#0e346d0a)\n    Checking arceos_api v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n    Checking riscv_vcpu v0.1.0 (https://github.com/arceos-hypervisor/riscv_vcpu.git#4000ae3c)\n    Checking axdevice v0.1.0 (https://github.com/arceos-hypervisor/axdevice.git#8652ce80)\n    Checking spin v0.9.8\n    Checking axstd v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n    Checking axvm v0.1.0 (https://github.com/arceos-hypervisor/axvm.git#69b48a93)\n   Compiling axvisor v0.1.0 (/home/runner/check/batch_2/arceos-hypervisor/axvisor)\nerror: could not compile `axvisor` (bin \"axvisor\") due to 7 previous errors; 14 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) lockbud",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axvisor, checker=Lockbud\n// toolchain=nightly-2024-12-25, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_2/arceos-hypervisor/axvisor\n// cmd=cargo +nightly-2025-02-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-05-28 4:31:46.892581082 +08:00:00\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.21\n   Compiling axerrno v0.1.0\n   Compiling memory_addr v0.3.2\n   Compiling paste v1.0.15\n   Compiling bit_field v0.10.2\n   Compiling riscv v0.12.1\n[2025-05-27T20:31:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-27T20:31:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-27T20:31:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-27T20:31:36Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv-macros v0.1.0\n   Compiling once_cell v1.21.3\n   Compiling bitflags v2.9.0\n   Compiling embedded-hal v1.0.0\n   Compiling riscv-pac v0.2.0\n   Compiling critical-section v1.2.0\n   Compiling page_table_entry v0.5.3\n   Compiling const-random-macro v0.1.16\n   Compiling lazyinit v0.2.1\n   Compiling percpu v0.2.0\n   Compiling sbi-spec v0.0.7\n   Compiling kernel_guard v0.1.2\n   Compiling sbi-rt v0.0.3\n   Compiling memory_set v0.3.2\n   Compiling tock-registers v0.8.1\n   Compiling const-default v1.0.0\n   Compiling kspin v0.1.0\n   Compiling bitmap-allocator v0.2.0\n   Compiling rlsf v0.2.1\n   Compiling serde v1.0.219\n   Compiling axconfig v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling memchr v2.7.4\n   Compiling allocator v0.1.1 (https://github.com/arceos-org/allocator.git?tag=v0.1.1#1d5b7a1b)\n   Compiling page_table_multiarch v0.5.3\n   Compiling axalloc v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling axhal v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling linkme v0.3.32\n   Compiling axlog v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling aho-corasick v1.1.3\n   Compiling cortex-a v8.1.1\n   Compiling handler_table v0.1.2\n   Compiling semver-parser v0.7.0\n   Compiling regex-syntax v0.8.5\n   Compiling int_ratio v0.1.1\n   Compiling static_assertions v1.1.0\n   Compiling semver v0.9.0\n   Compiling const-random v0.1.18\n   Compiling ahash v0.8.11\n   Compiling linked_list v0.1.0 (https://github.com/arceos-org/linked_list.git?tag=v0.1.0#34c8db30)\n   Compiling regex-automata v0.4.9\n   Compiling bitmaps v3.2.1\n   Compiling zerocopy v0.7.35\n   Compiling cpumask v0.1.0\n   Compiling scheduler v0.1.0 (https://github.com/arceos-org/scheduler.git?tag=v0.1.0#c8d25d9a)\n   Compiling num-traits v0.2.19\n   Compiling rustc_version v0.2.3\n   Compiling timer_list v0.1.0\n   Compiling lazy_static v1.5.0\n   Compiling hashbrown v0.15.2\n   Compiling numeric-enum-macro v0.2.0\n   Compiling allocator-api2 v0.2.21\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.14.5\n   Compiling axaddrspace v0.1.0 (https://github.com/arceos-hypervisor/axaddrspace.git#2ed4d076)\n   Compiling indexmap v2.8.0\n   Compiling bare-metal v0.2.5\n   Compiling axtask v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling toml_datetime v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n   Compiling serde_spanned v0.6.6 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n   Compiling ctor_bare_macros v0.2.1\n   Compiling regex v1.11.1\n   Compiling winnow v0.6.26\n   Compiling riscv-target v0.1.2\n[2025-05-27T20:31:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-27T20:31:54Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling chrono v0.4.40\n   Compiling ctor_bare v0.2.1\n   Compiling axmm v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling memoffset v0.9.1\n   Compiling lock_api v0.4.12\n   Compiling toml_edit v0.22.15 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n   Compiling prettyplease v0.2.31\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n   Compiling axruntime v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling axsync v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling serde_repr v0.1.20\n   Compiling rustsbi-macros v0.0.2\n   Compiling scopeguard v1.2.0\n   Compiling bitflags v1.3.2\n   Compiling rustsbi v0.4.0\n   Compiling axfeat v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling axvcpu v0.1.0 (https://github.com/arceos-hypervisor/axvcpu.git#34fc1067)\n   Compiling axdevice_base v0.1.0 (https://github.com/arceos-hypervisor/axdevice_crates.git#28d49f14)\n   Compiling axio v0.1.1\n   Compiling riscv-decode v0.2.1 (https://github.com/KuangjuX/riscv-decode.git#0e346d0a)\n   Compiling toml v0.8.14 (https://github.com/arceos-hypervisor/toml.git?branch=no_std#fdb24a16)\n   Compiling axvmconfig v0.1.0 (https://github.com/arceos-hypervisor/axvmconfig.git#19e73fc7)\n   Compiling riscv_vcpu v0.1.0 (https://github.com/arceos-hypervisor/riscv_vcpu.git#4000ae3c)\n   Compiling axdevice v0.1.0 (https://github.com/arceos-hypervisor/axdevice.git#8652ce80)\n   Compiling arceos_api v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling spin v0.9.8\n   Compiling axvm v0.1.0 (https://github.com/arceos-hypervisor/axvm.git#69b48a93)\n   Compiling axstd v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)\n   Compiling axvisor v0.1.0 (/home/runner/check/batch_2/arceos-hypervisor/axvisor)\nwarning: unused variable: `start`\n --> src/utils/arch/riscv/mod.rs:4:38\n  |\n4 |     pub unsafe fn cache_invalidate_d(start: usize, len: usize) {\n  |                                      ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`\n  |\n  = note: `#[warn(unused_variables)]` on by default\n\nwarning: unused variable: `len`\n --> src/utils/arch/riscv/mod.rs:4:52\n  |\n4 |     pub unsafe fn cache_invalidate_d(start: usize, len: usize) {\n  |                                                    ^^^ help: if this is intentional, prefix it with an underscore: `_len`\n\nwarning: unused variable: `start`\n --> src/utils/arch/riscv/mod.rs:8:44\n  |\n8 |     pub unsafe fn cache_clean_invalidate_d(start: usize, len: usize) {\n  |                                            ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`\n\nwarning: unused variable: `len`\n --> src/utils/arch/riscv/mod.rs:8:58\n  |\n8 |     pub unsafe fn cache_clean_invalidate_d(start: usize, len: usize) {\n  |                                                          ^^^ help: if this is intentional, prefix it with an underscore: `_len`\n\nwarning[E0133]: call to unsafe function `utils::arch::riscv::cache::cache_invalidate_d` is unsafe and requires unsafe block\n --> src/utils/mod.rs:6:9\n  |\n6 |         super::arch::cache::cache_invalidate_d(start, len);\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n  |\n  = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n  = note: consult the function's documentation for information on how to avoid undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n --> src/utils/mod.rs:5:5\n  |\n5 |     pub unsafe fn cache_invalidate_d(start: usize, len: usize) {\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  = note: `#[warn(unsafe_op_in_unsafe_fn)]` on by default\n\nwarning[E0133]: call to unsafe function `utils::arch::riscv::cache::cache_clean_invalidate_d` is unsafe and requires unsafe block\n  --> src/utils/mod.rs:10:9\n   |\n10 |         super::arch::cache::cache_clean_invalidate_d(start, len);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ call to unsafe function\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/unsafe-op-in-unsafe-fn.html>\n   = note: consult the function's documentation for information on how to avoid undefined behavior\nnote: an unsafe function restricts its caller, but its body is safe by default\n  --> src/utils/mod.rs:9:5\n   |\n9  |     pub unsafe fn cache_clean_invalidate_d(start: usize, len: usize) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: function `cache_invalidate_d` is never used\n --> src/utils/arch/riscv/mod.rs:4:19\n  |\n4 |     pub unsafe fn cache_invalidate_d(start: usize, len: usize) {\n  |                   ^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\nwarning: function `cache_clean_invalidate_d` is never used\n --> src/utils/arch/riscv/mod.rs:8:19\n  |\n8 |     pub unsafe fn cache_clean_invalidate_d(start: usize, len: usize) {\n  |                   ^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: function `cache_invalidate_d` is never used\n --> src/utils/mod.rs:5:19\n  |\n5 |     pub unsafe fn cache_invalidate_d(start: usize, len: usize) {\n  |                   ^^^^^^^^^^^^^^^^^^\n\nwarning: function `cache_clean_invalidate_d` is never used\n --> src/utils/mod.rs:9:19\n  |\n9 |     pub unsafe fn cache_clean_invalidate_d(start: usize, len: usize) {\n  |                   ^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: creating a shared reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:118:14\n    |\n118 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get(&vm_id) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n    = note: `#[deny(static_mut_refs)]` on by default\n\nerror: creating a shared reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:135:14\n    |\n135 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get(&vm_id) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\nerror: creating a mutable reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:149:14\n    |\n149 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get_mut(&vm_id) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\nerror: creating a shared reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:156:14\n    |\n156 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get(&vm_id) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\nerror: creating a shared reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:164:14\n    |\n164 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get(&vm_id) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives\n\nerror: creating a mutable reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:205:14\n    |\n205 |     unsafe { VM_VCPU_TASK_WAIT_QUEUE.get_mut(&vm.id()) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\nerror: creating a mutable reference to mutable static is discouraged\n   --> src/vmm/vcpus.rs:229:9\n    |\n229 |         VM_VCPU_TASK_WAIT_QUEUE.insert(vm_id, vm_vcpus);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static\n    |\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n\nFor more information about this error, try `rustc --explain E0133`.\nwarning: `axvisor` (bin \"axvisor\") generated 10 warnings\nerror: could not compile `axvisor` (bin \"axvisor\") due to 7 previous errors; 10 warnings emitted\n"
            ]
          }
        },
        {
          "file": "(virtual) outdated",
          "features": "",
          "count": 1,
          "kinds": {
            "Cargo": [
              "// pkg_name=axvisor, checker=Outdated\n// toolchain=nightly-2024-12-25, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_2/arceos-hypervisor/axvisor\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n// timestamp=2025-05-28 4:32:26.461237734 +08:00:00\n    Updating git repository `https://github.com/arceos-hypervisor/arceos.git`\n    Updating git repository `https://github.com/arceos-hypervisor/axaddrspace.git`\n    Updating git repository `https://github.com/arceos-hypervisor/arceos.git`\n    Updating git repository `https://github.com/arceos-hypervisor/axvcpu.git`\n    Updating git repository `https://github.com/arceos-hypervisor/axvm.git`\n    Updating git repository `https://github.com/arceos-hypervisor/arceos.git`\n    Updating git repository `https://github.com/arceos-hypervisor/toml.git`\nerror: failed to select a version for `log`.\n    ... required by package `axalloc v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)`\n    ... which satisfies git dependency `axalloc` of package `arceos_api v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)`\n    ... which satisfies git dependency `arceos_api` of package `axstd v0.1.0 (https://github.com/arceos-hypervisor/arceos.git?branch=vmm#20d52d36)`\n    ... which satisfies git dependency `axstd` of package `axvisor v0.1.0 (/tmp/cargo-outdatedzq7Zax)`\nversions that meet the requirements `=0.4.21` are: 0.4.21\n\nall possible versions conflict with previously selected packages.\n\n  previously selected package `log v0.4.27`\n    ... which satisfies dependency `log = \"^0.4.27\"` of package `axvisor v0.1.0 (/tmp/cargo-outdatedzq7Zax)`\n\nfailed to select a version for `log` which could resolve this conflict\n"
            ]
          }
        },
        {
          "file": "Cargo.lock",
          "features": "",
          "count": 1,
          "kinds": {
            "Audit": [
              "Crate:     paste\nVersion:   1.0.15\nWarning:   unmaintained\nTitle:     paste - no longer maintained\nDate:      2024-10-07\nID:        RUSTSEC-2024-0436\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0436\nDependency tree:\npaste 1.0.15\n├── x2apic 0.4.3\n│   └── axhal 0.1.0\n│       ├── axtask 0.1.0\n│       │   ├── axsync 0.1.0\n│       │   │   ├── axfs 0.1.0\n│       │   │   │   ├── axruntime 0.1.0\n│       │   │   │   │   ├── axfeat 0.1.0\n│       │   │   │   │   │   ├── axstd 0.1.0\n│       │   │   │   │   │   │   └── axvisor 0.1.0\n│       │   │   │   │   │   └── arceos_api 0.1.0\n│       │   │   │   │   │       └── axstd 0.1.0\n│       │   │   │   │   └── arceos_api 0.1.0\n│       │   │   │   ├── axfeat 0.1.0\n│       │   │   │   └── arceos_api 0.1.0\n│       │   │   ├── axfeat 0.1.0\n│       │   │   └── arceos_api 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── arceos_api 0.1.0\n│       ├── axruntime 0.1.0\n│       ├── axmm 0.1.0\n│       │   └── axruntime 0.1.0\n│       ├── axfeat 0.1.0\n│       ├── axdriver 0.1.0\n│       │   ├── axruntime 0.1.0\n│       │   ├── axfs 0.1.0\n│       │   ├── axfeat 0.1.0\n│       │   └── arceos_api 0.1.0\n│       └── arceos_api 0.1.0\n└── riscv 0.12.1\n    ├── page_table_multiarch 0.5.3\n    │   ├── axvm 0.1.0\n    │   │   └── axvisor 0.1.0\n    │   ├── axvisor 0.1.0\n    │   ├── axhal 0.1.0\n    │   └── axaddrspace 0.1.0\n    │       ├── x86_vcpu 0.1.0\n    │       │   └── axvm 0.1.0\n    │       ├── riscv_vcpu 0.1.0\n    │       │   └── axvm 0.1.0\n    │       ├── axvm 0.1.0\n    │       ├── axvisor 0.1.0\n    │       ├── axvcpu 0.1.0\n    │       │   ├── x86_vcpu 0.1.0\n    │       │   ├── riscv_vcpu 0.1.0\n    │       │   ├── axvm 0.1.0\n    │       │   ├── axvisor 0.1.0\n    │       │   └── arm_vcpu 0.1.0\n    │       │       └── axvm 0.1.0\n    │       ├── axdevice_base 0.1.0\n    │       │   └── axdevice 0.1.0\n    │       │       └── axvm 0.1.0\n    │       ├── axdevice 0.1.0\n    │       └── arm_vcpu 0.1.0\n    └── axhal 0.1.0\n\n\n{\n  \"database\": {\n    \"advisory-count\": 782,\n    \"last-commit\": \"bccf313a98c034573ac4170e6271749113343d97\",\n    \"last-updated\": \"2025-05-22T19:04:33+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 186\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"paste\",\n          \"version\": \"1.0.15\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\",\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0436\",\n          \"package\": \"paste\",\n          \"title\": \"paste - no longer maintained\",\n          \"description\": \"The creator of the crate `paste` has stated in the [`README.md`](https://github.com/dtolnay/paste/blob/master/README.md) \\nthat this project is not longer maintained as well as archived the repository\",\n          \"date\": \"2024-10-07\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/paste\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
            ]
          }
        },
        {
          "file": "[lockbud] Not supported to display yet.",
          "features": "",
          "count": 1,
          "kinds": {
            "Lockbud(Possibly)": [
              "[2025-05-27T20:31:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-27T20:31:47Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-27T20:31:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-27T20:31:36Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2025-05-27T20:31:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-05-27T20:31:54Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
            ]
          }
        },
        {
          "file": "src/logo.rs",
          "features": "",
          "count": 1,
          "kinds": {
            "Clippy(Warn)": [
              "warning: constants have by default a `'static` lifetime\n --> src/logo.rs:4:15\n  |\n4 | const LOGO: [&'static str; 2] = [\n  |              -^^^^^^^---- help: consider removing `'static`: `&str`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n  = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
            ]
          }
        }
      ]
    }
  ],
  "kinds_order": [
    "Cargo",
    "Clippy(Error)",
    "Clippy(Warn)",
    "Semver Violation",
    "Audit",
    "Mirai",
    "Rapx",
    "Rudra",
    "Lockbud(Probably)",
    "Lockbud(Possibly)",
    "Outdated",
    "Geiger",
    "Unformatted"
  ]
}