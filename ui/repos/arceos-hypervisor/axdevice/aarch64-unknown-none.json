{"repo":{"user":"arceos-hypervisor","repo":"axdevice"},"data":[{"user":"arceos-hypervisor","repo":"axdevice","pkg":"axdevice","count":5,"raw_reports":[{"file":"(virtual) rap","count":1,"kinds":{"Cargo":["// pkg_name=axdevice, checker=Rap\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-hypervisor/axdevice\n// cmd=cargo +nightly-2024-10-12 rap -F -M -- --target aarch64-unknown-none\n// timestamp=2024-12-26 23:25:51.741866271 +08:00:00    Updating git repository `https://github.com/arceos-hypervisor/axaddrspace.git`\n    Updating git repository `https://github.com/arceos-hypervisor/axdevice_crates.git`\n    Updating git repository `https://github.com/arceos-hypervisor/axvmconfig.git`\n    Updating git repository `https://github.com/arceos-hypervisor/toml.git`\n Downloading crates ...\n  Downloaded equivalent v1.0.1\n  Downloaded const-random-macro v0.1.16\n  Downloaded const-random v0.1.18\n  Downloaded crunchy v0.2.2\n  Downloaded bit_field v0.10.2\n  Downloaded bitflags v1.3.2\n  Downloaded page_table_entry v0.4.2\n  Downloaded volatile v0.4.6\n  Downloaded allocator-api2 v0.2.21\n  Downloaded tiny-keccak v2.0.2\n  Downloaded version_check v0.9.5\n  Downloaded numeric-enum-macro v0.2.0\n  Downloaded memory_set v0.3.1\n  Downloaded memory_addr v0.3.1\n  Downloaded indexmap v2.7.0\n  Downloaded serde_repr v0.1.19\n  Downloaded x86_64 v0.15.1\n  Downloaded serde_derive v1.0.216\n  Downloaded zerocopy v0.7.35\n  Downloaded hashbrown v0.14.5\n  Downloaded winnow v0.6.20\n  Downloaded raw-cpuid v10.7.0\n  Downloaded hashbrown v0.15.2\n  Downloaded serde v1.0.216\n  Downloaded rustversion v1.0.18\n  Downloaded page_table_multiarch v0.4.2\n  Downloaded lazyinit v0.2.1\n  Downloaded getrandom v0.2.15\n  Downloaded ahash v0.8.11\n  Downloaded axerrno v0.1.0\n  Downloaded libc v0.2.169\n  Downloaded x86 v0.52.0\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling crunchy v0.2.2\n   Compiling libc v0.2.169\n   Compiling tiny-keccak v2.0.2\n   Compiling serde v1.0.216\n   Compiling cfg-if v1.0.0\n   Compiling version_check v0.9.5\nerror[E0463]: can't find crate for `core`\n  |\n  = note: the `aarch64-unknown-none` target may not be installed\n  = help: consider downloading the target with `rustup target add aarch64-unknown-none`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `cfg-if` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n15:25:54|RAP|ERROR|: Finished with non-zero exit code.\n"]}},{"file":"(virtual) semver-checks","count":1,"kinds":{"Cargo":["// pkg_name=axdevice, checker=SemverChecks\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_3/arceos-hypervisor/axdevice\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2024-12-28 11:56:22.697679554 +08:00:00\n    Building axdevice v0.1.0 (current)\nerror: running cargo-doc on crate 'axdevice' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_3/arceos-hypervisor/axdevice &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":1,"kinds":{"Lockbud(Possibly)":["[2024-12-23T20:29:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-23T20:29:52Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-12-23T20:30:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-12-23T20:30:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":1,"kinds":{"Semver Violation":["pkg=axdevice, checker=SemverChecks\ntoolchain=nightly-2024-05-02, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_3/arceos-hypervisor/axdevice\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axdevice v0.1.0 (current)\nerror: running cargo-doc on crate 'axdevice' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_3/arceos-hypervisor/axdevice &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n"]}},{"file":"src/device.rs","count":1,"kinds":{"Clippy(Warn)":["warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:45\n   |\n31 |     fn init(_this: &mut Self, _emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}