{"repo":{"user":"arceos-hypervisor","repo":"axdevice"},"data":[{"user":"arceos-hypervisor","repo":"axdevice","pkg":"axdevice","count":28,"raw_reports":[{"file":"src/device.rs","count":16,"kinds":{"Clippy(Warn)":["warning: unused import: `EmuDeviceType`\n --> src/device.rs:8:36\n  |\n8 | use axdevice_base::{BaseDeviceOps, EmuDeviceType};\n  |                                    ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused variable: `this`\n  --> src/device.rs:31:13\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: unused variable: `emu_configs`\n  --> src/device.rs:31:30\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                              ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_emu_configs`\n\n","warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:43\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","warning: unused import: `EmuDeviceType`\n --> src/device.rs:8:36\n  |\n8 | use axdevice_base::{BaseDeviceOps, EmuDeviceType};\n  |                                    ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused variable: `this`\n  --> src/device.rs:31:13\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: unused variable: `emu_configs`\n  --> src/device.rs:31:30\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                              ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_emu_configs`\n\n","warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:43\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","warning: unused import: `EmuDeviceType`\n --> src/device.rs:8:36\n  |\n8 | use axdevice_base::{BaseDeviceOps, EmuDeviceType};\n  |                                    ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused variable: `this`\n  --> src/device.rs:31:13\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: unused variable: `emu_configs`\n  --> src/device.rs:31:30\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                              ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_emu_configs`\n\n","warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:43\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","warning: unused import: `EmuDeviceType`\n --> src/device.rs:8:36\n  |\n8 | use axdevice_base::{BaseDeviceOps, EmuDeviceType};\n  |                                    ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n","warning: unused variable: `this`\n  --> src/device.rs:31:13\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_this`\n   |\n   = note: `#[warn(unused_variables)]` on by default\n\n","warning: unused variable: `emu_configs`\n  --> src/device.rs:31:30\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                              ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_emu_configs`\n\n","warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:43\n   |\n31 |     fn init(this: &mut Self, emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"]}},{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axdevice, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing axdevice v0.1.0 (current)\nerror: running cargo-doc on crate axdevice failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling rustversion v1.0.18\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.3.1\n   Compiling x86 v0.52.0\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n   Compiling axerrno v0.1.0\n    Checking log v0.4.22\n   Compiling serde v1.0.215\n   Compiling quote v1.0.37\n    Checking x86_64 v0.15.2\n   Compiling syn v2.0.90\n    Checking memory_set v0.3.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.2/src/addr.rs:406:51\n    |\n406 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n406 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking numeric-enum-macro v0.2.0\n    Checking cfg-if v1.0.0\n    Checking lazyinit v0.2.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.2/src/structures/paging/page.rs:307:51\n    |\n307 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&page::Page<_>, &page::Page<_>) -> Option<usize>`\n               found signature `fn(&page::Page<_>, &page::Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n307 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.2/src/structures/paging/page_table.rs:356:51\n    |\n356 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n356 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0308]: mismatched types\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.2/src/structures/paging/page_table.rs:357:9\n    |\n356 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ---------------------- expected `(usize, Option<usize>)` because of return type\n357 |         Step::steps_between(&start.0, &end.0)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected tuple `(usize, Option<usize>)`\n                found enum `Option<usize>`\n\nSome errors have detailed explanations: E0053, E0308.\nFor more information about an error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n","// pkg_name=axdevice, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n     Parsing axdevice v0.1.0 (current)\nerror: running cargo-doc on crate axdevice failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n","// pkg_name=axdevice, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n     Parsing axdevice v0.1.0 (current)\nerror: running cargo-doc on crate axdevice failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n","// pkg_name=axdevice, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n     Parsing axdevice v0.1.0 (current)\nerror: running cargo-doc on crate axdevice failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n"]}},{"file":"[lockbud] Not supported to display yet.","count":4,"kinds":{"Lockbud(Possibly)":["[2024-11-22T11:51:18Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:51:18Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-11-22T11:51:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:51:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-11-22T11:51:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:51:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }","[2024-11-22T11:51:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T11:51:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axdevice, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n     Parsing axdevice v0.1.0 (current)\nerror: running cargo-doc on crate axdevice failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n","pkg=axdevice, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing axdevice v0.1.0 (current)\nerror: running cargo-doc on crate axdevice failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling rustversion v1.0.18\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.3.1\n   Compiling x86 v0.52.0\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n   Compiling axerrno v0.1.0\n    Checking log v0.4.22\n   Compiling serde v1.0.215\n   Compiling quote v1.0.37\n    Checking x86_64 v0.15.2\n   Compiling syn v2.0.90\n    Checking memory_set v0.3.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.2/src/addr.rs:406:51\n    |\n406 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n406 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking numeric-enum-macro v0.2.0\n    Checking cfg-if v1.0.0\n    Checking lazyinit v0.2.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.2/src/structures/paging/page.rs:307:51\n    |\n307 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&page::Page<_>, &page::Page<_>) -> Option<usize>`\n               found signature `fn(&page::Page<_>, &page::Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n307 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.2/src/structures/paging/page_table.rs:356:51\n    |\n356 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&PageTableIndex, &PageTableIndex) -> Option<usize>`\n               found signature `fn(&PageTableIndex, &PageTableIndex) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n356 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0308]: mismatched types\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.15.2/src/structures/paging/page_table.rs:357:9\n    |\n356 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ---------------------- expected `(usize, Option<usize>)` because of return type\n357 |         Step::steps_between(&start.0, &end.0)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `Option<usize>`\n    |\n    = note: expected tuple `(usize, Option<usize>)`\n                found enum `Option<usize>`\n\nSome errors have detailed explanations: E0053, E0308.\nFor more information about an error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n","pkg=axdevice, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n     Parsing axdevice v0.1.0 (current)\nerror: running cargo-doc on crate axdevice failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n","pkg=axdevice, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n     Parsing axdevice v0.1.0 (current)\nerror: running cargo-doc on crate axdevice failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}