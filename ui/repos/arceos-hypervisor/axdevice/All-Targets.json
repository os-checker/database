{"repo":{"user":"arceos-hypervisor","repo":"axdevice"},"data":[{"user":"arceos-hypervisor","repo":"axdevice","pkg":"axdevice","count":12,"raw_reports":[{"file":"(virtual) semver-checks","count":4,"kinds":{"Cargo":["// pkg_name=axdevice, checker=SemverChecks\n// toolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2025-01-05 21:01:29.660183894 +08:00:00\n    Building axdevice v0.1.0 (current)\n       Built [   8.556s] (current)\n     Parsing axdevice v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: axdevice not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n","// pkg_name=axdevice, checker=SemverChecks\n// toolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2025-01-05 21:01:40.06305314 +08:00:00\n    Building axdevice v0.1.0 (current)\nerror: running cargo-doc on crate 'axdevice' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n","// pkg_name=axdevice, checker=SemverChecks\n// toolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-05 21:01:39.619786782 +08:00:00\n    Building axdevice v0.1.0 (current)\nerror: running cargo-doc on crate 'axdevice' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n","// pkg_name=axdevice, checker=SemverChecks\n// toolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2025-01-05 21:01:39.165621356 +08:00:00\n    Building axdevice v0.1.0 (current)\nerror: running cargo-doc on crate 'axdevice' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n"]}},{"file":"[semver checks]","count":4,"kinds":{"Semver Violation":["pkg=axdevice, checker=SemverChecks\ntoolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n    Building axdevice v0.1.0 (current)\nerror: running cargo-doc on crate 'axdevice' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n","pkg=axdevice, checker=SemverChecks\ntoolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building axdevice v0.1.0 (current)\n       Built [   8.556s] (current)\n     Parsing axdevice v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: axdevice not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n","pkg=axdevice, checker=SemverChecks\ntoolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axdevice v0.1.0 (current)\nerror: running cargo-doc on crate 'axdevice' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_feature=\"x87\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n","pkg=axdevice, checker=SemverChecks\ntoolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_4/arceos-hypervisor/axdevice\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n\n\nstdout:\n\nstderr:\n    Building axdevice v0.1.0 (current)\nerror: running cargo-doc on crate 'axdevice' failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-12-26-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"neon\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate axdevice v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_4/arceos-hypervisor/axdevice &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axdevice v0.1.0\n"]}},{"file":"src/device.rs","count":4,"kinds":{"Clippy(Warn)":["warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:45\n   |\n31 |     fn init(_this: &mut Self, _emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:45\n   |\n31 |     fn init(_this: &mut Self, _emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:45\n   |\n31 |     fn init(_this: &mut Self, _emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n","warning: writing `&Vec` instead of `&[_]` involves a new object where a slice will do\n  --> src/device.rs:31:45\n   |\n31 |     fn init(_this: &mut Self, _emu_configs: &Vec<EmulatedDeviceConfig>) {\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `&[EmulatedDeviceConfig]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"]}}]}],"kinds_order":["Cargo","Clippy(Error)","Clippy(Warn)","Semver Violation","Audit","Mirai","Rap","Rudra","Lockbud(Probably)","Lockbud(Possibly)","Outdated","Geiger","Unformatted"]}